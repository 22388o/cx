package testing

// var gStr str

func receivingStr (s str) {
	assert(s, "foo bar bar foo", "")
}

func returningStr () (s str) {
	s = "bar bar foo foo"
}

func testSTRFunctions () () {
	var testStr str
	testStr = "foo bar bar foo"
	
	receivingStr("foo bar bar foo")
	receivingStr(testStr)

	assert(testStr, "foo bar bar foo", "")

	assert(returningStr(), "bar bar foo foo", "")
	
	// str.print("--------String (str) Funcitons Testing--------")
	// var lStr str
	// str = "Local"
	// gStr = "Global"
	
	// assert(gStr, "Global", "global strings error")
	// assert(local, "Local", "local strings error")

	//assert(str.lt("foo", "bar"), false, "str.lt() error")
	//assert(str.lt("bar", "foo"), true, "str.lt() error")

	//assert(str.gt("foo", "bar"), true, "str.gt() error")
	//assert(str.gt("bar", "foo"), false, "str.gt() error")
	
	//assert(str.eq("foo", "foo"), true, "str.eq() error")
	//assert(str.eq("foo", "bar"), false, "str.eq() error")
	
	//assert(str.uneq("foo", "foo"), false, "str.uneq() error")
	//assert(str.uneq("foo", "bar"), true, "str.uneq() error")
	
	//assert(str.lteq("foo", "bar"), false, "str.lteq() error")
	//assert(str.lteq("bar", "foo"), true, "str.lteq() error")
	
	//assert(str.lteq("foo", "bar"), true, "str.gteq() error")
	//assert(str.lteq("bar", "foo"), false, "str.gteq() error")

	//assert(len("Foo bar"), 7, "len() error")

	//assert(str.concat("Hello ", "World"), "Hello World", "str.concat() error")
}

func testSTR () () {
	str.print("Running STR Testing...")
	testSTRFunctions()
}
