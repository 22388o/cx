// Code generated by goyacc - DO NOT EDIT.

package cx0

import __yyfmt__ "fmt"

import (
	"bytes"
	"fmt"
	. "github.com/skycoin/cx/src/base"
)

var CXT = MakeContext()

var replMode bool = false
var inREPL bool = false
var inFn bool = false
var fileName string

func Parse(code string) int {
	codeBuf := bytes.NewBufferString(code)
	return yyParse(NewLexer(codeBuf))
}

type yySymType struct {
	yys     int
	i       int
	byt     byte
	i32     int32
	i64     int64
	f32     float32
	f64     float64
	tok     string
	bool    bool
	string  string
	stringA []string

	line int

	parameter  *CXParameter
	parameters []*CXParameter

	argument  *CXArgument
	arguments []*CXArgument

	definition  *CXDefinition
	definitions []*CXDefinition

	expression  *CXExpression
	expressions []*CXExpression

	field  *CXField
	fields []*CXField

	name  string
	names []string
}

type yyXError struct {
	state, xsym int
}

const (
	yyDefault    = 57440
	yyEofCode    = 57344
	ADDR         = 57439
	AFF          = 57435
	AFFVAR       = 57393
	AND          = 57387
	ASSIGN       = 57371
	BASICTYPE    = 57416
	BITAND       = 57401
	BITANDEQ     = 57413
	BITCLEAR     = 57404
	BITOR        = 57403
	BITOREQ      = 57415
	BITXOR       = 57402
	BITXOREQ     = 57414
	BOOLEAN      = 57348
	BYTENUM      = 57346
	CASSIGN      = 57372
	CLAUSES      = 57426
	COLON        = 57379
	COMMA        = 57362
	COMMENT      = 57363
	DEF          = 57421
	DIV          = 57392
	DIVEQ        = 57408
	DOUBLE       = 57351
	DPROGRAM     = 57433
	DSTACK       = 57432
	DSTATE       = 57434
	ELSE         = 57367
	EQUAL        = 57378
	EQUALWORD    = 57381
	EXP          = 57399
	EXPEQ        = 57410
	EXPR         = 57422
	FIELD        = 57423
	FLOAT        = 57350
	FOR          = 57368
	FUNC         = 57352
	GOTO         = 57375
	GTHAN        = 57376
	GTHANEQ      = 57384
	GTHANWORD    = 57382
	IDENT        = 57360
	IF           = 57366
	IMPORT       = 57373
	INFER        = 57437
	INPUT        = 57424
	INT          = 57347
	LBRACE       = 57356
	LBRACK       = 57358
	LEFTSHIFT    = 57397
	LEFTSHIFTEQ  = 57411
	LONG         = 57349
	LPAREN       = 57354
	LTHAN        = 57377
	LTHANEQ      = 57385
	LTHANWORD    = 57383
	MINUS        = 57390
	MINUSEQ      = 57406
	MINUSMINUS   = 57395
	MULT         = 57391
	MULTEQ       = 57407
	NEW          = 57380
	NOT          = 57400
	OBJECT       = 57427
	OBJECTS      = 57428
	OP           = 57353
	OR           = 57388
	OUTPUT       = 57425
	PACKAGE      = 57365
	PLUS         = 57389
	PLUSEQ       = 57405
	PLUSPLUS     = 57394
	PSTEP        = 57430
	RBRACE       = 57357
	RBRACK       = 57359
	REM          = 57420
	REMAINDER    = 57396
	REMAINDEREQ  = 57409
	RETURN       = 57374
	RIGHTSHIFT   = 57398
	RIGHTSHIFTEQ = 57412
	RPAREN       = 57355
	SFUNC        = 57419
	SPACKAGE     = 57417
	SSTRUCT      = 57418
	STEP         = 57429
	STRING       = 57364
	STRUCT       = 57370
	TAG          = 57436
	TSTEP        = 57431
	TYPSTRUCT    = 57369
	UNEQUAL      = 57386
	VALUE        = 57438
	VAR          = 57361
	yyErrCode    = 57345

	yyMaxDepth = 200
	yyTabOfs   = -289
)

var (
	yyPrec = map[int]int{
		OR:         0,
		AND:        1,
		BITCLEAR:   2,
		BITOR:      3,
		BITXOR:     4,
		BITAND:     5,
		EQUAL:      6,
		UNEQUAL:    6,
		GTHAN:      7,
		LTHAN:      7,
		GTHANEQ:    7,
		LTHANEQ:    7,
		LEFTSHIFT:  8,
		RIGHTSHIFT: 8,
		PLUS:       9,
		MINUS:      9,
		REMAINDER:  10,
		MULT:       10,
		DIV:        10,
		EXP:        11,
		PLUSPLUS:   12,
		MINUSMINUS: 12,
		NOT:        13,
		LPAREN:     14,
		IDENT:      14,
	}

	yyXLAT = map[int]int{
		57360: 0,   // IDENT (347x)
		57347: 1,   // INT (291x)
		57354: 2,   // LPAREN (291x)
		57364: 3,   // STRING (285x)
		57416: 4,   // BASICTYPE (283x)
		57348: 5,   // BOOLEAN (282x)
		57346: 6,   // BYTENUM (279x)
		57351: 7,   // DOUBLE (279x)
		57350: 8,   // FLOAT (279x)
		57437: 9,   // INFER (279x)
		57349: 10,  // LONG (279x)
		57380: 11,  // NEW (279x)
		57400: 12,  // NOT (279x)
		57357: 13,  // RBRACE (278x)
		59:    14,  // ';' (252x)
		57433: 15,  // DPROGRAM (243x)
		57432: 16,  // DSTACK (243x)
		57434: 17,  // DSTATE (243x)
		57361: 18,  // VAR (233x)
		57436: 19,  // TAG (232x)
		57435: 20,  // AFF (230x)
		57420: 21,  // REM (230x)
		57419: 22,  // SFUNC (230x)
		57417: 23,  // SPACKAGE (230x)
		57418: 24,  // SSTRUCT (230x)
		57429: 25,  // STEP (230x)
		57431: 26,  // TSTEP (230x)
		57438: 27,  // VALUE (226x)
		57439: 28,  // ADDR (222x)
		57366: 29,  // IF (206x)
		57368: 30,  // FOR (200x)
		57375: 31,  // GOTO (200x)
		57374: 32,  // RETURN (200x)
		57352: 33,  // FUNC (179x)
		57365: 34,  // PACKAGE (176x)
		57373: 35,  // IMPORT (175x)
		57369: 36,  // TYPSTRUCT (174x)
		57344: 37,  // $end (172x)
		57356: 38,  // LBRACE (155x)
		57362: 39,  // COMMA (151x)
		57355: 40,  // RPAREN (143x)
		57378: 41,  // EQUAL (133x)
		57376: 42,  // GTHAN (133x)
		57377: 43,  // LTHAN (133x)
		57391: 44,  // MULT (133x)
		57386: 45,  // UNEQUAL (133x)
		57387: 46,  // AND (132x)
		57401: 47,  // BITAND (132x)
		57404: 48,  // BITCLEAR (132x)
		57403: 49,  // BITOR (132x)
		57402: 50,  // BITXOR (132x)
		57392: 51,  // DIV (132x)
		57399: 52,  // EXP (132x)
		57384: 53,  // GTHANEQ (132x)
		57397: 54,  // LEFTSHIFT (132x)
		57385: 55,  // LTHANEQ (132x)
		57390: 56,  // MINUS (132x)
		57388: 57,  // OR (132x)
		57389: 58,  // PLUS (132x)
		57396: 59,  // REMAINDER (132x)
		57398: 60,  // RIGHTSHIFT (132x)
		57395: 61,  // MINUSMINUS (119x)
		57394: 62,  // PLUSPLUS (119x)
		57371: 63,  // ASSIGN (118x)
		57413: 64,  // BITANDEQ (118x)
		57415: 65,  // BITOREQ (118x)
		57414: 66,  // BITXOREQ (118x)
		57372: 67,  // CASSIGN (118x)
		57408: 68,  // DIVEQ (118x)
		57410: 69,  // EXPEQ (118x)
		57411: 70,  // LEFTSHIFTEQ (118x)
		57406: 71,  // MINUSEQ (118x)
		57407: 72,  // MULTEQ (118x)
		57405: 73,  // PLUSEQ (118x)
		57409: 74,  // REMAINDEREQ (118x)
		57412: 75,  // RIGHTSHIFTEQ (118x)
		57442: 76,  // argument (75x)
		57476: 77,  // nonAssignExpression (75x)
		57444: 78,  // argumentsList (20x)
		57449: 79,  // debugging (20x)
		57441: 80,  // affordance (16x)
		57445: 81,  // assignExpression (16x)
		57481: 82,  // remover (16x)
		57483: 83,  // selector (16x)
		57488: 84,  // stepping (16x)
		57447: 85,  // beginFor (14x)
		57487: 86,  // statement (14x)
		57454: 87,  // expressionsAndStatements (7x)
		57393: 88,  // AFFVAR (6x)
		57466: 89,  // inferObj (6x)
		57478: 90,  // parameter (6x)
		57458: 91,  // functionParameters (5x)
		57459: 92,  // functionStatements (4x)
		57461: 93,  // inferAction (4x)
		57358: 94,  // LBRACK (4x)
		57370: 95,  // STRUCT (4x)
		57446: 96,  // assignOperator (3x)
		57465: 97,  // inferCond (3x)
		57443: 98,  // arguments (2x)
		57448: 99,  // conditionControl (2x)
		57450: 100, // definitionAssignment (2x)
		57451: 101, // definitionDeclaration (2x)
		57422: 102, // EXPR (2x)
		57455: 103, // fields (2x)
		57456: 104, // forLoopAssignExpression (2x)
		57457: 105, // functionDeclaration (2x)
		57460: 106, // importDeclaration (2x)
		57463: 107, // inferActions (2x)
		57469: 108, // inferRule (2x)
		57471: 109, // inferTarget (2x)
		57474: 110, // line (2x)
		57475: 111, // lines (2x)
		57477: 112, // packageDeclaration (2x)
		57359: 113, // RBRACK (2x)
		57489: 114, // structDeclaration (2x)
		57491: 115, // structLitDef (2x)
		57421: 116, // DEF (1x)
		57367: 117, // ELSE (1x)
		57452: 118, // elseStatement (1x)
		57423: 119, // FIELD (1x)
		57462: 120, // inferActionArg (1x)
		57464: 121, // inferClauses (1x)
		57467: 122, // inferObjs (1x)
		57468: 123, // inferPred (1x)
		57470: 124, // inferRules (1x)
		57472: 125, // inferTargets (1x)
		57473: 126, // inferWeight (1x)
		57424: 127, // INPUT (1x)
		57425: 128, // OUTPUT (1x)
		57479: 129, // parameters (1x)
		57480: 130, // relationalOp (1x)
		57482: 131, // returnArg (1x)
		57484: 132, // selectorExpressionsAndStatements (1x)
		57485: 133, // selectorFields (1x)
		57486: 134, // selectorLines (1x)
		57490: 135, // structFields (1x)
		57492: 136, // structLitDefs (1x)
		57440: 137, // $default (0x)
		57426: 138, // CLAUSES (0x)
		57379: 139, // COLON (0x)
		57363: 140, // COMMENT (0x)
		57381: 141, // EQUALWORD (0x)
		57345: 142, // error (0x)
		57453: 143, // expressions (0x)
		57382: 144, // GTHANWORD (0x)
		57383: 145, // LTHANWORD (0x)
		57427: 146, // OBJECT (0x)
		57428: 147, // OBJECTS (0x)
		57353: 148, // OP (0x)
		57430: 149, // PSTEP (0x)
	}

	yySymNames = []string{
		"IDENT",
		"INT",
		"LPAREN",
		"STRING",
		"BASICTYPE",
		"BOOLEAN",
		"BYTENUM",
		"DOUBLE",
		"FLOAT",
		"INFER",
		"LONG",
		"NEW",
		"NOT",
		"RBRACE",
		"';'",
		"DPROGRAM",
		"DSTACK",
		"DSTATE",
		"VAR",
		"TAG",
		"AFF",
		"REM",
		"SFUNC",
		"SPACKAGE",
		"SSTRUCT",
		"STEP",
		"TSTEP",
		"VALUE",
		"ADDR",
		"IF",
		"FOR",
		"GOTO",
		"RETURN",
		"FUNC",
		"PACKAGE",
		"IMPORT",
		"TYPSTRUCT",
		"$end",
		"LBRACE",
		"COMMA",
		"RPAREN",
		"EQUAL",
		"GTHAN",
		"LTHAN",
		"MULT",
		"UNEQUAL",
		"AND",
		"BITAND",
		"BITCLEAR",
		"BITOR",
		"BITXOR",
		"DIV",
		"EXP",
		"GTHANEQ",
		"LEFTSHIFT",
		"LTHANEQ",
		"MINUS",
		"OR",
		"PLUS",
		"REMAINDER",
		"RIGHTSHIFT",
		"MINUSMINUS",
		"PLUSPLUS",
		"ASSIGN",
		"BITANDEQ",
		"BITOREQ",
		"BITXOREQ",
		"CASSIGN",
		"DIVEQ",
		"EXPEQ",
		"LEFTSHIFTEQ",
		"MINUSEQ",
		"MULTEQ",
		"PLUSEQ",
		"REMAINDEREQ",
		"RIGHTSHIFTEQ",
		"argument",
		"nonAssignExpression",
		"argumentsList",
		"debugging",
		"affordance",
		"assignExpression",
		"remover",
		"selector",
		"stepping",
		"beginFor",
		"statement",
		"expressionsAndStatements",
		"AFFVAR",
		"inferObj",
		"parameter",
		"functionParameters",
		"functionStatements",
		"inferAction",
		"LBRACK",
		"STRUCT",
		"assignOperator",
		"inferCond",
		"arguments",
		"conditionControl",
		"definitionAssignment",
		"definitionDeclaration",
		"EXPR",
		"fields",
		"forLoopAssignExpression",
		"functionDeclaration",
		"importDeclaration",
		"inferActions",
		"inferRule",
		"inferTarget",
		"line",
		"lines",
		"packageDeclaration",
		"RBRACK",
		"structDeclaration",
		"structLitDef",
		"DEF",
		"ELSE",
		"elseStatement",
		"FIELD",
		"inferActionArg",
		"inferClauses",
		"inferObjs",
		"inferPred",
		"inferRules",
		"inferTargets",
		"inferWeight",
		"INPUT",
		"OUTPUT",
		"parameters",
		"relationalOp",
		"returnArg",
		"selectorExpressionsAndStatements",
		"selectorFields",
		"selectorLines",
		"structFields",
		"structLitDefs",
		"$default",
		"CLAUSES",
		"COLON",
		"COMMENT",
		"EQUALWORD",
		"error",
		"expressions",
		"GTHANWORD",
		"LTHANWORD",
		"OBJECT",
		"OBJECTS",
		"OP",
		"PSTEP",
	}

	yyTokenLiteralStrings = map[int]string{}

	yyReductions = map[int]struct{ xsym, components int }{
		0:   {0, 1},
		1:   {111, 0},
		2:   {111, 2},
		3:   {111, 2},
		4:   {110, 1},
		5:   {110, 1},
		6:   {110, 1},
		7:   {110, 1},
		8:   {110, 1},
		9:   {110, 1},
		10:  {110, 1},
		11:  {110, 1},
		12:  {110, 1},
		13:  {110, 1},
		14:  {106, 2},
		15:  {80, 1},
		16:  {80, 3},
		17:  {80, 6},
		18:  {80, 6},
		19:  {80, 7},
		20:  {80, 3},
		21:  {80, 6},
		22:  {80, 6},
		23:  {80, 7},
		24:  {80, 3},
		25:  {80, 6},
		26:  {80, 6},
		27:  {80, 7},
		28:  {80, 3},
		29:  {80, 6},
		30:  {80, 6},
		31:  {80, 7},
		32:  {84, 3},
		33:  {84, 2},
		34:  {79, 1},
		35:  {79, 1},
		36:  {79, 1},
		37:  {82, 3},
		38:  {82, 3},
		39:  {82, 3},
		40:  {82, 3},
		41:  {82, 3},
		42:  {82, 5},
		43:  {82, 5},
		44:  {82, 5},
		45:  {82, 5},
		46:  {134, 0},
		47:  {134, 3},
		48:  {132, 0},
		49:  {132, 3},
		50:  {133, 0},
		51:  {133, 3},
		52:  {83, 3},
		53:  {83, 3},
		54:  {83, 3},
		55:  {96, 1},
		56:  {96, 1},
		57:  {96, 1},
		58:  {96, 1},
		59:  {96, 1},
		60:  {96, 1},
		61:  {96, 1},
		62:  {96, 1},
		63:  {96, 1},
		64:  {96, 1},
		65:  {96, 1},
		66:  {96, 1},
		67:  {96, 1},
		68:  {112, 2},
		69:  {100, 0},
		70:  {100, 2},
		71:  {100, 3},
		72:  {100, 3},
		73:  {101, 4},
		74:  {101, 3},
		75:  {103, 1},
		76:  {103, 1},
		77:  {103, 1},
		78:  {103, 2},
		79:  {103, 2},
		80:  {103, 2},
		81:  {135, 3},
		82:  {135, 2},
		83:  {114, 4},
		84:  {91, 3},
		85:  {91, 2},
		86:  {105, 6},
		87:  {105, 5},
		88:  {105, 4},
		89:  {105, 5},
		90:  {90, 2},
		91:  {90, 2},
		92:  {90, 3},
		93:  {129, 1},
		94:  {129, 3},
		95:  {92, 3},
		96:  {92, 2},
		97:  {87, 1},
		98:  {87, 1},
		99:  {87, 1},
		100: {87, 1},
		101: {87, 1},
		102: {87, 1},
		103: {87, 1},
		104: {87, 1},
		105: {87, 2},
		106: {87, 2},
		107: {87, 2},
		108: {87, 2},
		109: {87, 2},
		110: {87, 2},
		111: {87, 2},
		112: {87, 2},
		113: {81, 4},
		114: {81, 5},
		115: {81, 3},
		116: {77, 2},
		117: {77, 2},
		118: {77, 2},
		119: {85, 1},
		120: {99, 1},
		121: {99, 1},
		122: {131, 1},
		123: {131, 1},
		124: {86, 2},
		125: {86, 2},
		126: {86, 6},
		127: {86, 5},
		128: {86, 5},
		129: {86, 9},
		130: {86, 3},
		131: {86, 1},
		132: {104, 0},
		133: {104, 1},
		134: {104, 1},
		135: {118, 0},
		136: {118, 4},
		137: {143, 1},
		138: {143, 1},
		139: {143, 2},
		140: {143, 2},
		141: {123, 1},
		142: {123, 1},
		143: {123, 3},
		144: {123, 3},
		145: {97, 4},
		146: {97, 1},
		147: {130, 1},
		148: {130, 1},
		149: {130, 1},
		150: {130, 1},
		151: {120, 1},
		152: {120, 1},
		153: {120, 3},
		154: {120, 3},
		155: {120, 3},
		156: {93, 4},
		157: {107, 1},
		158: {107, 2},
		159: {108, 5},
		160: {108, 5},
		161: {124, 1},
		162: {124, 2},
		163: {126, 1},
		164: {126, 1},
		165: {126, 1},
		166: {89, 0},
		167: {89, 3},
		168: {89, 3},
		169: {122, 1},
		170: {122, 3},
		171: {109, 4},
		172: {125, 1},
		173: {125, 2},
		174: {121, 1},
		175: {121, 1},
		176: {121, 1},
		177: {115, 2},
		178: {115, 2},
		179: {136, 1},
		180: {136, 3},
		181: {76, 3},
		182: {76, 3},
		183: {76, 3},
		184: {76, 3},
		185: {76, 3},
		186: {76, 3},
		187: {76, 3},
		188: {76, 3},
		189: {76, 3},
		190: {76, 3},
		191: {76, 3},
		192: {76, 3},
		193: {76, 3},
		194: {76, 3},
		195: {76, 3},
		196: {76, 3},
		197: {76, 3},
		198: {76, 3},
		199: {76, 3},
		200: {76, 3},
		201: {76, 3},
		202: {76, 3},
		203: {76, 3},
		204: {76, 3},
		205: {76, 3},
		206: {76, 3},
		207: {76, 3},
		208: {76, 3},
		209: {76, 3},
		210: {76, 3},
		211: {76, 3},
		212: {76, 3},
		213: {76, 3},
		214: {76, 3},
		215: {76, 3},
		216: {76, 3},
		217: {76, 3},
		218: {76, 3},
		219: {76, 3},
		220: {76, 3},
		221: {76, 3},
		222: {76, 3},
		223: {76, 3},
		224: {76, 3},
		225: {76, 3},
		226: {76, 3},
		227: {76, 3},
		228: {76, 3},
		229: {76, 3},
		230: {76, 3},
		231: {76, 3},
		232: {76, 3},
		233: {76, 3},
		234: {76, 3},
		235: {76, 3},
		236: {76, 3},
		237: {76, 3},
		238: {76, 3},
		239: {76, 3},
		240: {76, 3},
		241: {76, 3},
		242: {76, 3},
		243: {76, 3},
		244: {76, 3},
		245: {76, 3},
		246: {76, 3},
		247: {76, 3},
		248: {76, 3},
		249: {76, 3},
		250: {76, 3},
		251: {76, 3},
		252: {76, 3},
		253: {76, 3},
		254: {76, 3},
		255: {76, 3},
		256: {76, 3},
		257: {76, 3},
		258: {76, 3},
		259: {76, 3},
		260: {76, 3},
		261: {76, 2},
		262: {76, 2},
		263: {76, 3},
		264: {76, 1},
		265: {76, 1},
		266: {76, 1},
		267: {76, 1},
		268: {76, 1},
		269: {76, 1},
		270: {76, 1},
		271: {76, 1},
		272: {76, 5},
		273: {76, 4},
		274: {76, 4},
		275: {76, 4},
		276: {76, 3},
		277: {98, 3},
		278: {98, 2},
		279: {78, 1},
		280: {78, 1},
		281: {78, 2},
		282: {78, 2},
		283: {78, 2},
		284: {78, 3},
		285: {78, 3},
		286: {78, 4},
		287: {78, 4},
		288: {78, 4},
	}

	yyXErrors = map[yyXError]string{}

	yyParseTab = [482][]uint16{
		// 0
		{14: 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 33: 288, 288, 288, 288, 288, 111: 290},
		{14: 292, 310, 309, 308, 316, 304, 305, 311, 313, 312, 314, 307, 306, 33: 318, 315, 303, 317, 289, 79: 300, 301, 82: 302, 298, 299, 101: 293, 105: 297, 296, 110: 291, 112: 295, 114: 294},
		{13: 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 33: 287, 287, 287, 287, 287},
		{13: 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 286, 33: 286, 286, 286, 286, 286},
		{13: 285, 285, 285, 285, 285, 285, 285, 285, 285, 285, 285, 285, 285, 285, 33: 285, 285, 285, 285, 285},
		// 5
		{13: 284, 284, 284, 284, 284, 284, 284, 284, 284, 284, 284, 284, 284, 284, 33: 284, 284, 284, 284, 284},
		{13: 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 33: 283, 283, 283, 283, 283},
		{13: 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 33: 282, 282, 282, 282, 282},
		{13: 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 33: 281, 281, 281, 281, 281},
		{13: 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 33: 280, 280, 280, 280, 280},
		// 10
		{13: 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 33: 279, 279, 279, 279, 279},
		{13: 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 33: 278, 278, 278, 278, 278},
		{13: 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 33: 277, 277, 277, 277, 277},
		{13: 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 33: 276, 276, 276, 276, 276},
		{3: 770},
		// 15
		{274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274},
		{33: 734, 735, 95: 736, 102: 737},
		{1: 732},
		{1: 731},
		{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
		// 20
		{254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254},
		{253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253},
		{33: 705, 706, 709, 95: 708, 102: 710, 116: 707, 119: 711, 127: 712, 713},
		{700},
		{695},
		// 25
		{690},
		{689},
		{685},
		{672},
		{321, 2: 319, 91: 320},
		// 30
		{663, 40: 662, 90: 664, 129: 661},
		{656},
		{2: 319, 91: 322},
		{2: 319, 38: 325, 91: 324, 323},
		{13: 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 33: 201, 201, 201, 201, 201},
		// 35
		{38: 325, 92: 655},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 327, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 326},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 654, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		{13: 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 193, 33: 193, 193, 193, 193, 193},
		{192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 39: 9, 41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
		// 40
		{191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191},
		{190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190},
		{189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189},
		{188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188},
		{187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187},
		// 45
		{186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186},
		{185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185},
		{652},
		{39: 491, 63: 617, 627, 629, 628, 618, 622, 624, 625, 620, 621, 619, 623, 626, 96: 650},
		{18, 18, 527, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 94: 526, 98: 525},
		// 50
		{10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 38: 10, 10, 10, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
		{170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 14: 170, 18: 170, 27: 170, 170},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 647, 27: 359, 358, 76: 339, 487, 648, 131: 649},
		{646},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 589, 590, 99: 637},
		// 55
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 157, 18: 583, 27: 359, 358, 76: 584, 585, 337, 81: 587, 104: 586},
		{158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 581, 582},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 579, 485},
		{25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25},
		// 60
		{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24},
		{23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23},
		{22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22},
		{21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21},
		{20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20},
		// 65
		{19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19},
		{569},
		{38: 499},
		{38: 486},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 484, 485},
		// 70
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 360, 361},
		{7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 38: 7, 7, 7, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7},
		{6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 38: 6, 6, 6, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 482, 483},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 480, 481},
		// 75
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 478, 479},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 476, 477},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 474, 475},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 472, 473},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 470, 471},
		// 80
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 468, 469},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 466, 467},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 464, 465},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 462, 463},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 460, 461},
		// 85
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 458, 459},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 456, 457},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 454, 455},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 452, 453},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 450, 451},
		// 90
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 448, 449},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 446, 447},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 382, 383},
		{29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 394, 396, 398, 388, 395, 29, 402, 29, 403, 404, 389, 393, 397, 391, 399, 387, 29, 386, 390, 392, 385, 384, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29},
		{31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 370, 372, 374, 364, 371, 31, 378, 31, 379, 380, 365, 369, 373, 367, 375, 363, 31, 362, 366, 368, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31},
		// 95
		{172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172},
		{171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 444, 445},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 442, 443},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 440, 441},
		// 100
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 438, 439},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 436, 437},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 434, 435},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 432, 433},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 430, 431},
		// 105
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 428, 429},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 426, 427},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 424, 425},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 422, 423},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 420, 421},
		// 110
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 418, 419},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 416, 417},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 414, 415},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 412, 413},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 410, 411},
		// 115
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 408, 409},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 406, 407},
		{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 394, 396, 398, 388, 395, 32, 402, 32, 403, 404, 389, 393, 397, 391, 399, 387, 32, 386, 390, 392, 385, 384, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32},
		{30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 370, 372, 374, 364, 371, 30, 378, 30, 379, 380, 365, 369, 373, 367, 375, 363, 30, 362, 366, 368, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
		{36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 394, 396, 398, 388, 395, 36, 402, 36, 36, 36, 389, 393, 397, 391, 399, 387, 36, 386, 390, 392, 385, 384, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36},
		// 120
		{34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 370, 372, 374, 364, 371, 34, 378, 34, 34, 34, 365, 369, 373, 367, 375, 363, 34, 362, 366, 368, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34},
		{40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 394, 396, 398, 388, 395, 40, 402, 40, 40, 404, 389, 393, 397, 391, 399, 387, 40, 386, 390, 392, 385, 384, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40},
		{38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 370, 372, 374, 364, 371, 38, 378, 38, 38, 380, 365, 369, 373, 367, 375, 363, 38, 362, 366, 368, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38},
		{44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 394, 396, 398, 388, 395, 44, 44, 44, 44, 44, 389, 393, 397, 391, 399, 387, 44, 386, 390, 392, 385, 384, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44},
		{42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 370, 372, 374, 364, 371, 42, 42, 42, 42, 42, 365, 369, 373, 367, 375, 363, 42, 362, 366, 368, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42},
		// 125
		{48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 394, 396, 398, 388, 395, 48, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 48, 386, 390, 392, 385, 384, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48},
		{46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 370, 372, 374, 364, 371, 46, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 46, 362, 366, 368, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46},
		{52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 52, 386, 390, 392, 385, 384, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52},
		{50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 50, 362, 366, 368, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50},
		{56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 388, 56, 56, 56, 56, 56, 56, 389, 393, 56, 391, 56, 387, 56, 386, 390, 392, 385, 384, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56},
		// 130
		{54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 364, 54, 54, 54, 54, 54, 54, 365, 369, 54, 367, 54, 363, 54, 362, 366, 368, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54},
		{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 388, 60, 60, 60, 60, 60, 60, 389, 393, 60, 391, 60, 387, 60, 386, 390, 392, 385, 384, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60},
		{58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 364, 58, 58, 58, 58, 58, 58, 365, 369, 58, 367, 58, 363, 58, 362, 366, 368, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58},
		{64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 388, 64, 64, 64, 64, 64, 64, 389, 393, 64, 391, 64, 387, 64, 386, 390, 392, 385, 384, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64},
		{62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 364, 62, 62, 62, 62, 62, 62, 365, 369, 62, 367, 62, 363, 62, 362, 366, 368, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62},
		// 135
		{68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 388, 68, 68, 68, 68, 68, 68, 389, 393, 68, 391, 68, 387, 68, 386, 390, 392, 385, 384, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68},
		{66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 364, 66, 66, 66, 66, 66, 66, 365, 369, 66, 367, 66, 363, 66, 362, 366, 368, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66},
		{72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 396, 398, 388, 72, 72, 72, 72, 72, 72, 389, 393, 397, 391, 399, 387, 72, 386, 390, 392, 385, 384, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72},
		{70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 372, 374, 364, 70, 70, 70, 70, 70, 70, 365, 369, 373, 367, 375, 363, 70, 362, 366, 368, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70},
		{76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 396, 398, 388, 76, 76, 76, 76, 76, 76, 389, 393, 397, 391, 399, 387, 76, 386, 390, 392, 385, 384, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76, 76},
		// 140
		{74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 372, 374, 364, 74, 74, 74, 74, 74, 74, 365, 369, 373, 367, 375, 363, 74, 362, 366, 368, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74},
		{80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 385, 384, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80},
		{78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78},
		{84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 388, 84, 84, 84, 84, 84, 84, 389, 393, 84, 84, 84, 387, 84, 386, 390, 84, 385, 384, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84},
		{82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 364, 82, 82, 82, 82, 82, 82, 365, 369, 82, 82, 82, 363, 82, 362, 366, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82},
		// 145
		{88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 388, 88, 88, 88, 88, 88, 88, 389, 393, 88, 88, 88, 387, 88, 386, 390, 88, 385, 384, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88},
		{86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 364, 86, 86, 86, 86, 86, 86, 365, 369, 86, 86, 86, 363, 86, 362, 366, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86},
		{92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 393, 92, 92, 92, 92, 92, 92, 92, 92, 385, 384, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92},
		{90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 369, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90},
		{96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 393, 96, 96, 96, 96, 96, 96, 96, 96, 385, 384, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96},
		// 150
		{94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 369, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94},
		{100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 393, 100, 100, 100, 100, 100, 100, 100, 100, 385, 384, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100},
		{98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 369, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98},
		{104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 388, 104, 104, 104, 104, 104, 104, 389, 393, 104, 104, 104, 104, 104, 104, 390, 104, 385, 384, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104},
		{102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 364, 102, 102, 102, 102, 102, 102, 365, 369, 102, 102, 102, 102, 102, 102, 366, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102},
		// 155
		{108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 388, 108, 108, 108, 108, 108, 108, 389, 393, 108, 108, 108, 108, 108, 108, 390, 108, 385, 384, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108},
		{106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 364, 106, 106, 106, 106, 106, 106, 365, 369, 106, 106, 106, 106, 106, 106, 366, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106},
		{33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 394, 396, 398, 388, 395, 33, 402, 33, 33, 33, 389, 393, 397, 391, 399, 387, 33, 386, 390, 392, 385, 384, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33},
		{35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 370, 372, 374, 364, 371, 35, 378, 35, 35, 35, 365, 369, 373, 367, 375, 363, 35, 362, 366, 368, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35},
		{37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 394, 396, 398, 388, 395, 37, 402, 37, 37, 404, 389, 393, 397, 391, 399, 387, 37, 386, 390, 392, 385, 384, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37},
		// 160
		{39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 370, 372, 374, 364, 371, 39, 378, 39, 39, 380, 365, 369, 373, 367, 375, 363, 39, 362, 366, 368, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39},
		{41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 394, 396, 398, 388, 395, 41, 41, 41, 41, 41, 389, 393, 397, 391, 399, 387, 41, 386, 390, 392, 385, 384, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41},
		{43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 370, 372, 374, 364, 371, 43, 43, 43, 43, 43, 365, 369, 373, 367, 375, 363, 43, 362, 366, 368, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43},
		{45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 394, 396, 398, 388, 395, 45, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 45, 386, 390, 392, 385, 384, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45},
		{47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 370, 372, 374, 364, 371, 47, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 47, 362, 366, 368, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47},
		// 165
		{49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 49, 386, 390, 392, 385, 384, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49},
		{51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 51, 362, 366, 368, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51},
		{53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 388, 53, 53, 53, 53, 53, 53, 389, 393, 53, 391, 53, 387, 53, 386, 390, 392, 385, 384, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53},
		{55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 364, 55, 55, 55, 55, 55, 55, 365, 369, 55, 367, 55, 363, 55, 362, 366, 368, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55},
		{57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 388, 57, 57, 57, 57, 57, 57, 389, 393, 57, 391, 57, 387, 57, 386, 390, 392, 385, 384, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57},
		// 170
		{59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 364, 59, 59, 59, 59, 59, 59, 365, 369, 59, 367, 59, 363, 59, 362, 366, 368, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59},
		{61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 388, 61, 61, 61, 61, 61, 61, 389, 393, 61, 391, 61, 387, 61, 386, 390, 392, 385, 384, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61},
		{63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 364, 63, 63, 63, 63, 63, 63, 365, 369, 63, 367, 63, 363, 63, 362, 366, 368, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63},
		{65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 388, 65, 65, 65, 65, 65, 65, 389, 393, 65, 391, 65, 387, 65, 386, 390, 392, 385, 384, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65},
		{67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 364, 67, 67, 67, 67, 67, 67, 365, 369, 67, 367, 67, 363, 67, 362, 366, 368, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67},
		// 175
		{69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 396, 398, 388, 69, 69, 69, 69, 69, 69, 389, 393, 397, 391, 399, 387, 69, 386, 390, 392, 385, 384, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69},
		{71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 372, 374, 364, 71, 71, 71, 71, 71, 71, 365, 369, 373, 367, 375, 363, 71, 362, 366, 368, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71},
		{73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 396, 398, 388, 73, 73, 73, 73, 73, 73, 389, 393, 397, 391, 399, 387, 73, 386, 390, 392, 385, 384, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73},
		{75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 372, 374, 364, 75, 75, 75, 75, 75, 75, 365, 369, 373, 367, 375, 363, 75, 362, 366, 368, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75},
		{77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 385, 384, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77},
		// 180
		{79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79},
		{81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 388, 81, 81, 81, 81, 81, 81, 389, 393, 81, 81, 81, 387, 81, 386, 390, 81, 385, 384, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81},
		{83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 364, 83, 83, 83, 83, 83, 83, 365, 369, 83, 83, 83, 363, 83, 362, 366, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83},
		{85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 388, 85, 85, 85, 85, 85, 85, 389, 393, 85, 85, 85, 387, 85, 386, 390, 85, 385, 384, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85},
		{87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 364, 87, 87, 87, 87, 87, 87, 365, 369, 87, 87, 87, 363, 87, 362, 366, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87, 87},
		// 185
		{89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 393, 89, 89, 89, 89, 89, 89, 89, 89, 385, 384, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89},
		{91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 369, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91},
		{93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 393, 93, 93, 93, 93, 93, 93, 93, 93, 385, 384, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93},
		{95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 369, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95},
		{97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 393, 97, 97, 97, 97, 97, 97, 97, 97, 385, 384, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97},
		// 190
		{99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 369, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99},
		{101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 388, 101, 101, 101, 101, 101, 101, 389, 393, 101, 101, 101, 101, 101, 101, 390, 101, 385, 384, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101},
		{103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 364, 103, 103, 103, 103, 103, 103, 365, 369, 103, 103, 103, 103, 103, 103, 366, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103},
		{105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 388, 105, 105, 105, 105, 105, 105, 389, 393, 105, 105, 105, 105, 105, 105, 390, 105, 385, 384, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105},
		{107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 364, 107, 107, 107, 107, 107, 107, 365, 369, 107, 107, 107, 107, 107, 107, 366, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107},
		// 195
		{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 38: 8, 8, 8, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8},
		{41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 489, 27: 359, 358, 76: 339, 487, 488},
		{9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 38: 9, 9, 9, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368},
		{13: 490, 39: 491},
		// 200
		{13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
		{14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 27: 495, 494, 76: 492, 493},
		{5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 38: 5, 5, 5, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},
		{4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 38: 4, 4, 4, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
		// 205
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 498, 485},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 496, 497},
		{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 38: 2, 2, 2, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 38: 1, 1, 1, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 38: 3, 3, 3, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
		// 210
		{503, 13: 123, 29: 500, 39: 123, 89: 504, 108: 501, 506, 121: 508, 505, 124: 502, 507},
		{534, 5: 535, 38: 123, 89: 537, 97: 536},
		{13: 128, 29: 128},
		{13: 114, 29: 500, 108: 533},
		{2: 512, 27: 518},
		// 215
		{13: 120, 39: 120},
		{13: 115, 39: 515},
		{117, 13: 117},
		{510, 13: 113, 109: 511},
		{13: 509},
		// 220
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
		{2: 512},
		{116, 13: 116},
		{513},
		{40: 514},
		// 225
		{118, 13: 118},
		{516, 13: 123, 39: 123, 89: 517},
		{27: 518},
		{13: 119, 39: 119},
		{519, 522, 347, 354, 357, 353, 348, 352, 521, 356, 350, 355, 346, 76: 520, 524, 126: 523},
		// 230
		{2: 527, 13: 124, 38: 124, 124, 124, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 94: 526, 98: 525},
		{41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{13: 126, 38: 126, 126, 126, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22},
		{13: 125, 38: 125, 125, 125, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24},
		{13: 122, 38: 122, 122, 122},
		// 235
		{13: 121, 38: 121, 121, 121, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368},
		{173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173},
		{1: 531},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 27: 359, 358, 40: 529, 76: 339, 487, 528},
		{39: 491, 530},
		// 240
		{11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11},
		{12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
		{113: 532},
		{16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16},
		{13: 127, 29: 127},
		// 245
		{2: 561, 27: 518},
		{38: 143, 143, 143},
		{38: 558},
		{38: 538},
		{539, 93: 540, 107: 541},
		// 250
		{2: 544},
		{132, 13: 132},
		{539, 13: 543, 93: 542},
		{131, 13: 131},
		{13: 129, 29: 129},
		// 255
		{546, 40: 123, 88: 547, 545, 120: 548},
		{40: 138},
		{27: 518, 40: 137},
		{41: 550, 551, 552, 45: 553, 130: 554},
		{40: 549},
		// 260
		{133, 13: 133},
		{142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 88: 142},
		{141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 88: 141},
		{140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 88: 140},
		{139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 88: 139},
		// 265
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 555, 556, 88: 557},
		{40: 136, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{40: 135, 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368},
		{40: 134},
		{539, 93: 540, 107: 559},
		// 270
		{539, 13: 560, 93: 542},
		{13: 130, 29: 130},
		{534, 5: 535, 39: 123, 123, 89: 562, 97: 563, 123: 564},
		{39: 148, 148},
		{39: 147, 147},
		// 275
		{39: 565, 566},
		{534, 5: 535, 39: 123, 123, 89: 567, 97: 568},
		{38: 144, 144, 144},
		{39: 146, 146},
		{39: 145, 145},
		// 280
		{38: 570},
		{19: 571, 115: 572, 136: 573},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 577, 578},
		{13: 110, 39: 110},
		{13: 575, 39: 574},
		// 285
		{19: 571, 115: 576},
		{17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17},
		{13: 109, 39: 109},
		{13: 112, 39: 112, 41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{13: 111, 39: 111, 41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368},
		// 290
		{40: 580, 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26},
		{28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28},
		{27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27},
		{612},
		// 295
		{38: 609, 10, 41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
		{14: 155, 38: 606, 9, 41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
		{14: 588},
		{14: 156, 38: 156},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 589, 590, 99: 591},
		// 300
		{14: 168, 38: 168, 41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{14: 169, 38: 169, 41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368},
		{14: 592},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 18: 583, 27: 359, 358, 38: 157, 76: 339, 594, 337, 81: 587, 104: 593},
		{38: 595},
		// 305
		{38: 155, 9, 41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 596},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 605, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		{184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 39: 9, 41: 370, 372, 374, 364, 371, 377, 378, 381, 379, 380, 365, 369, 373, 367, 375, 363, 376, 362, 366, 368, 63: 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9},
		{183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183},
		// 310
		{182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182},
		{181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181},
		{180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180},
		{179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179},
		{178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178},
		// 315
		{177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177},
		{160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 607},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 608, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		{162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162},
		// 320
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 610},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 611, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		{161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161},
		{4: 613, 94: 614},
		{220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 38: 220, 63: 617, 627, 629, 628, 618, 622, 624, 625, 620, 621, 619, 623, 626, 96: 630, 100: 631},
		// 325
		{113: 615},
		{616},
		{175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 38: 175},
		{234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 27: 234, 234},
		{233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 27: 233, 233},
		// 330
		{232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 27: 232, 232},
		{231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 27: 231, 231},
		{230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 27: 230, 230},
		{229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 27: 229, 229},
		{228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 27: 228, 228},
		// 335
		{227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 27: 227, 227},
		{226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 27: 226, 226},
		{225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 27: 225, 225},
		{224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 27: 224, 224},
		{223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 27: 223, 223},
		// 340
		{222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 27: 222, 222},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 27: 634, 633, 76: 632, 485},
		{176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 38: 176},
		{219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 636, 485},
		// 345
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 76: 635, 485},
		{217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 41: 394, 396, 398, 388, 395, 401, 402, 405, 403, 404, 389, 393, 397, 391, 399, 387, 400, 386, 390, 392, 385, 384},
		{38: 638},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 639},
		// 350
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 640, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		{154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 117: 642, 641},
		{163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163, 163},
		{38: 643},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 644},
		// 355
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 645, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		{153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153},
		{164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164, 164},
		{167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167, 167},
		{166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 39: 491},
		// 360
		{165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 27: 359, 358, 76: 339, 487, 651},
		{174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 38: 174, 491},
		{653, 4: 613, 94: 614},
		{159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159},
		// 365
		{13: 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 33: 194, 194, 194, 194, 194},
		{13: 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 33: 200, 200, 200, 200, 200},
		{2: 319, 91: 657},
		{2: 319, 38: 325, 91: 658, 659},
		{38: 325, 92: 660},
		// 370
		{13: 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 33: 202, 202, 202, 202, 202},
		{13: 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 33: 203, 203, 203, 203, 203},
		{39: 670, 669},
		{204, 2: 204, 38: 204},
		{666, 4: 665, 44: 667},
		// 375
		{39: 196, 196},
		{199, 13: 199, 199, 199, 199, 199, 39: 199, 199},
		{198, 13: 198, 198, 198, 198, 198, 39: 198, 198},
		{668},
		{197, 13: 197, 197, 197, 197, 197, 39: 197, 197},
		// 380
		{205, 2: 205, 38: 205},
		{663, 90: 671},
		{39: 195, 195},
		{95: 673},
		{38: 674, 135: 675},
		// 385
		{663, 13: 680, 677, 310, 309, 308, 79: 678, 90: 676, 103: 679},
		{13: 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 33: 206, 206, 206, 206, 206},
		{214, 13: 214, 214, 214, 214, 214},
		{213, 13: 213, 213, 213, 213, 213},
		{212, 13: 212, 212, 212, 212, 212},
		// 390
		{663, 13: 684, 682, 310, 309, 308, 79: 683, 90: 681},
		{13: 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 33: 207, 207, 207, 207, 207},
		{211, 13: 211, 211, 211, 211, 211},
		{210, 13: 210, 210, 210, 210, 210},
		{209, 13: 209, 209, 209, 209, 209},
		// 395
		{13: 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 33: 208, 208, 208, 208, 208},
		{687, 4: 686},
		{13: 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 33: 220, 220, 220, 220, 220, 63: 617, 627, 629, 628, 618, 622, 624, 625, 620, 621, 619, 623, 626, 96: 630, 100: 688},
		{13: 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 33: 215, 215, 215, 215, 215},
		{13: 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 33: 216, 216, 216, 216, 216},
		// 400
		{13: 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 33: 221, 221, 221, 221, 221},
		{239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 691, 133: 692},
		{663, 14: 677, 310, 309, 308, 79: 678, 90: 676, 103: 693},
		{235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235},
		{663, 13: 694, 682, 310, 309, 308, 79: 683, 90: 681},
		// 405
		{238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238},
		{241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 696, 132: 697},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 14: 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 328, 337, 333, 334, 329, 335, 331, 332, 344, 330, 698},
		{236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236},
		{338, 349, 347, 354, 357, 353, 348, 352, 351, 356, 350, 355, 346, 699, 345, 310, 309, 308, 336, 304, 305, 311, 313, 312, 314, 307, 306, 359, 358, 343, 340, 342, 341, 76: 339, 597, 337, 602, 603, 598, 604, 600, 601, 344, 599},
		// 410
		{240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240},
		{243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 701, 134: 702},
		{13: 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 288, 33: 288, 288, 288, 288, 111: 703},
		{237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237},
		{13: 704, 292, 310, 309, 308, 316, 304, 305, 311, 313, 312, 314, 307, 306, 33: 318, 315, 303, 317, 79: 300, 301, 82: 302, 298, 299, 101: 293, 105: 297, 296, 110: 291, 112: 295, 114: 294},
		// 415
		{242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242},
		{730},
		{729},
		{728},
		{727},
		// 420
		{3: 726},
		{723},
		{720},
		{717},
		{714},
		// 425
		{33: 715},
		{716},
		{244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244},
		{33: 718},
		{719},
		// 430
		{245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245},
		{95: 721},
		{722},
		{246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246},
		{33: 724},
		// 435
		{725},
		{247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247},
		{248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248},
		{249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249},
		{250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250},
		// 440
		{251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251},
		{252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252},
		{256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256},
		{1: 733},
		{257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257},
		// 445
		{762},
		{754},
		{746},
		{738},
		{261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 739},
		// 450
		{1: 740, 3: 741},
		{13: 745},
		{1: 743, 13: 742},
		{259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259},
		{13: 744},
		// 455
		{258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258},
		{260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260},
		{265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 747},
		{1: 748, 3: 749},
		{13: 753},
		// 460
		{1: 751, 13: 750},
		{263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263},
		{13: 752},
		{262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262},
		{264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264},
		// 465
		{269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 755},
		{1: 756, 3: 757},
		{13: 761},
		{1: 759, 13: 758},
		{267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267},
		// 470
		{13: 760},
		{266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266},
		{268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268},
		{273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 763},
		{1: 764, 3: 765},
		// 475
		{13: 769},
		{1: 767, 13: 766},
		{271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271},
		{13: 768},
		{270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270},
		// 480
		{272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272},
		{13: 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 33: 275, 275, 275, 275, 275},
	}
)

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyLexerEx interface {
	yyLexer
	Reduced(rule, state int, lval *yySymType) bool
}

func yySymName(c int) (s string) {
	x, ok := yyXLAT[c]
	if ok {
		return yySymNames[x]
	}

	if c < 0x7f {
		return __yyfmt__.Sprintf("%q", c)
	}

	return __yyfmt__.Sprintf("%d", c)
}

func yylex1(yylex yyLexer, lval *yySymType) (n int) {
	n = yylex.Lex(lval)
	if n <= 0 {
		n = yyEofCode
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("\nlex %s(%#x %d), lval: %+v\n", yySymName(n), n, n, lval)
	}
	return n
}

func yyParse(yylex yyLexer) int {
	const yyError = 142

	yyEx, _ := yylex.(yyLexerEx)
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, 200)

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yyerrok := func() {
		if yyDebug >= 2 {
			__yyfmt__.Printf("yyerrok()\n")
		}
		Errflag = 0
	}
	_ = yyerrok
	yystate := 0
	yychar := -1
	var yyxchar int
	var yyshift int
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	if yychar < 0 {
		yylval.yys = yystate
		yychar = yylex1(yylex, &yylval)
		var ok bool
		if yyxchar, ok = yyXLAT[yychar]; !ok {
			yyxchar = len(yySymNames) // > tab width
		}
	}
	if yyDebug >= 4 {
		var a []int
		for _, v := range yyS[:yyp+1] {
			a = append(a, v.yys)
		}
		__yyfmt__.Printf("state stack %v\n", a)
	}
	row := yyParseTab[yystate]
	yyn = 0
	if yyxchar < len(row) {
		if yyn = int(row[yyxchar]); yyn != 0 {
			yyn += yyTabOfs
		}
	}
	switch {
	case yyn > 0: // shift
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		yyshift = yyn
		if yyDebug >= 2 {
			__yyfmt__.Printf("shift, and goto state %d\n", yystate)
		}
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	case yyn < 0: // reduce
	case yystate == 1: // accept
		if yyDebug >= 2 {
			__yyfmt__.Println("accept")
		}
		goto ret0
	}

	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			if yyDebug >= 1 {
				__yyfmt__.Printf("no action for %s in state %d\n", yySymName(yychar), yystate)
			}
			msg, ok := yyXErrors[yyXError{yystate, yyxchar}]
			if !ok {
				msg, ok = yyXErrors[yyXError{yystate, -1}]
			}
			if !ok && yyshift != 0 {
				msg, ok = yyXErrors[yyXError{yyshift, yyxchar}]
			}
			if !ok {
				msg, ok = yyXErrors[yyXError{yyshift, -1}]
			}
			if yychar > 0 {
				ls := yyTokenLiteralStrings[yychar]
				if ls == "" {
					ls = yySymName(yychar)
				}
				if ls != "" {
					switch {
					case msg == "":
						msg = __yyfmt__.Sprintf("unexpected %s", ls)
					default:
						msg = __yyfmt__.Sprintf("unexpected %s, %s", ls, msg)
					}
				}
			}
			if msg == "" {
				msg = "syntax error"
			}
			yylex.Error(msg)
			Nerrs++
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				row := yyParseTab[yyS[yyp].yys]
				if yyError < len(row) {
					yyn = int(row[yyError]) + yyTabOfs
					if yyn > 0 { // hit
						if yyDebug >= 2 {
							__yyfmt__.Printf("error recovery found error shift in state %d\n", yyS[yyp].yys)
						}
						yystate = yyn /* simulate a shift of "error" */
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery failed\n")
			}
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yySymName(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}

			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	r := -yyn
	x0 := yyReductions[r]
	x, n := x0.xsym, x0.components
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= n
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	exState := yystate
	yystate = int(yyParseTab[yyS[yyp].yys][x]) + yyTabOfs
	/* reduction by production r */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce using rule %v (%s), and goto state %d\n", r, yySymNames[x], yystate)
	}

	switch r {
	case 68:
		{
			mod := MakeModule(yyS[yypt-0].tok)
			CXT.AddModule(mod)
		}
	case 73:
		{
			if mod, err := CXT.GetCurrentModule(); err == nil {
				byts := []byte{}
				def := MakeDefinition(yyS[yypt-2].tok, &byts, yyS[yypt-1].tok)
				mod.AddDefinition(def)
			} else {
				panic(err)
			}

		}
	case 74:
		{
			if mod, err := CXT.GetCurrentModule(); err == nil {
				byts := []byte{}
				def := MakeDefinition(yyS[yypt-1].tok, &byts, yyS[yypt-0].tok)
				mod.AddDefinition(def)
			} else {
				panic(err)
			}
		}
	case 84:
		{
			yyVAL.parameters = yyS[yypt-1].parameters
		}
	case 85:
		{
			yyVAL.parameters = nil
		}
	case 86:
		{
			if len(yyS[yypt-4].parameters) > 1 {
				panic(fmt.Sprintf("%s: %d: method '%s' has multiple receivers", fileName, yyS[yypt-0].line+1, yyS[yypt-3].tok))
			}

			if mod, err := CXT.GetCurrentModule(); err == nil {
				if IsBasicType(yyS[yypt-4].parameters[0].Typ) {
					panic(fmt.Sprintf("%s: %d: cannot define methods on basic type %s", fileName, yyS[yypt-0].line+1, yyS[yypt-4].parameters[0].Typ))
				}

				inFn = true
				fn := MakeFunction(fmt.Sprintf("%s.%s", yyS[yypt-4].parameters[0].Typ, yyS[yypt-3].tok))
				mod.AddFunction(fn)
				if fn, err := mod.GetCurrentFunction(); err == nil {

					//checking if there are duplicate parameters
					dups := append(yyS[yypt-2].parameters, yyS[yypt-1].parameters...)
					dups = append(dups, yyS[yypt-4].parameters...)
					for _, param := range dups {
						for _, dup := range dups {
							if param.Name == dup.Name && param != dup {
								panic(fmt.Sprintf("%s: %d: duplicate receiver, input and/or output parameters in method '%s'", fileName, yyS[yypt-0].line+1, yyS[yypt-3].tok))
							}
						}
					}

					for _, rec := range yyS[yypt-4].parameters {
						fn.AddInput(rec)
					}
					for _, inp := range yyS[yypt-2].parameters {
						fn.AddInput(inp)
					}
					for _, out := range yyS[yypt-1].parameters {
						fn.AddOutput(out)
					}
				}
			}
		}
	case 87:
		{
			if len(yyS[yypt-3].parameters) > 1 {
				panic(fmt.Sprintf("%s: %d: method '%s' has multiple receivers", fileName, yyS[yypt-0].line+1, yyS[yypt-2].tok))
			}

			if mod, err := CXT.GetCurrentModule(); err == nil {
				if IsBasicType(yyS[yypt-3].parameters[0].Typ) {
					panic(fmt.Sprintf("%s: %d: cannot define methods on basic type %s", fileName, yyS[yypt-0].line+1, yyS[yypt-3].parameters[0].Typ))
				}

				inFn = true
				fn := MakeFunction(fmt.Sprintf("%s.%s", yyS[yypt-3].parameters[0].Typ, yyS[yypt-2].tok))
				mod.AddFunction(fn)
				if fn, err := mod.GetCurrentFunction(); err == nil {

					//checking if there are duplicate parameters
					dups := append(yyS[yypt-3].parameters, yyS[yypt-1].parameters...)
					for _, param := range dups {
						for _, dup := range dups {
							if param.Name == dup.Name && param != dup {
								panic(fmt.Sprintf("%s: %d: duplicate receiver, input and/or output parameters in method '%s'", fileName, yyS[yypt-0].line+1, yyS[yypt-2].tok))
							}
						}
					}

					for _, rec := range yyS[yypt-3].parameters {
						fn.AddInput(rec)
					}
					for _, inp := range yyS[yypt-1].parameters {
						fn.AddInput(inp)
					}
				}
			}
		}
	case 88:
		{
			if mod, err := CXT.GetCurrentModule(); err == nil {
				inFn = true
				fn := MakeFunction(yyS[yypt-2].tok)
				mod.AddFunction(fn)
				if fn, err := mod.GetCurrentFunction(); err == nil {
					for _, inp := range yyS[yypt-1].parameters {
						fn.AddInput(inp)
					}
				}
			}
		}
	case 89:
		{
			if mod, err := CXT.GetCurrentModule(); err == nil {
				inFn = true
				fn := MakeFunction(yyS[yypt-3].tok)
				mod.AddFunction(fn)
				if fn, err := mod.GetCurrentFunction(); err == nil {

					//checking if there are duplicate parameters
					dups := append(yyS[yypt-2].parameters, yyS[yypt-1].parameters...)
					for _, param := range dups {
						for _, dup := range dups {
							if param.Name == dup.Name && param != dup {
								panic(fmt.Sprintf("%s: %d: duplicate input and/or output parameters in function '%s'", fileName, yyS[yypt-0].line+1, yyS[yypt-3].tok))
							}
						}
					}

					for _, inp := range yyS[yypt-2].parameters {
						fn.AddInput(inp)
					}
					for _, out := range yyS[yypt-1].parameters {
						fn.AddOutput(out)
					}
				}
			}
		}
	case 90:
		{
			yyVAL.parameter = MakeParameter(yyS[yypt-1].tok, yyS[yypt-0].tok)
		}
	case 91:
		{
			yyVAL.parameter = MakeParameter(yyS[yypt-1].tok, yyS[yypt-0].tok)
		}
	case 92:
		{
			typ := "*" + yyS[yypt-0].tok
			yyVAL.parameter = MakeParameter(yyS[yypt-2].tok, typ)
		}
	case 93:
		{
			var params []*CXParameter
			params = append(params, yyS[yypt-0].parameter)
			yyVAL.parameters = params
		}
	case 94:
		{
			yyS[yypt-2].parameters = append(yyS[yypt-2].parameters, yyS[yypt-0].parameter)
			yyVAL.parameters = yyS[yypt-2].parameters
		}

	}

	if yyEx != nil && yyEx.Reduced(r, exState, &yyVAL) {
		return -1
	}
	goto yystack /* stack new state and value */
}
