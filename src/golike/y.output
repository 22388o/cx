state 0 //

    0 $accept: . lines
    1 lines: .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 1 (lines)
    AFF        reduce using rule 1 (lines)
    DPROGRAM   reduce using rule 1 (lines)
    DSTACK     reduce using rule 1 (lines)
    FUNC       reduce using rule 1 (lines)
    PACKAGE    reduce using rule 1 (lines)
    SFUNC      reduce using rule 1 (lines)
    SPACKAGE   reduce using rule 1 (lines)
    SSTRUCT    reduce using rule 1 (lines)
    STEP       reduce using rule 1 (lines)
    TYPSTRUCT  reduce using rule 1 (lines)
    VAR        reduce using rule 1 (lines)

    lines  goto state 1

state 1 // [$end]

    0 $accept: lines .  [$end]
    2 lines: lines . line

    $end       accept
    AFF        shift, and goto state 11
    DPROGRAM   shift, and goto state 14
    DSTACK     shift, and goto state 13
    FUNC       shift, and goto state 21
    PACKAGE    shift, and goto state 18
    SFUNC      shift, and goto state 16
    SPACKAGE   shift, and goto state 15
    SSTRUCT    shift, and goto state 17
    STEP       shift, and goto state 12
    TYPSTRUCT  shift, and goto state 20
    VAR        shift, and goto state 19

    affordance             goto state 10
    debugging              goto state 9
    definitionDeclaration  goto state 3
    functionDeclaration    goto state 6
    line                   goto state 2
    packageDeclaration     goto state 5
    selector               goto state 7
    stepping               goto state 8
    structDeclaration      goto state 4

state 2 // DPROGRAM BOOLEAN [$end]

    2 lines: lines line .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 2 (lines)
    AFF        reduce using rule 2 (lines)
    DPROGRAM   reduce using rule 2 (lines)
    DSTACK     reduce using rule 2 (lines)
    FUNC       reduce using rule 2 (lines)
    PACKAGE    reduce using rule 2 (lines)
    RBRACE     reduce using rule 2 (lines)
    SFUNC      reduce using rule 2 (lines)
    SPACKAGE   reduce using rule 2 (lines)
    SSTRUCT    reduce using rule 2 (lines)
    STEP       reduce using rule 2 (lines)
    TYPSTRUCT  reduce using rule 2 (lines)
    VAR        reduce using rule 2 (lines)

state 3 // VAR IDENT BOOL [$end]

    3 line: definitionDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 3 (line)
    AFF        reduce using rule 3 (line)
    DPROGRAM   reduce using rule 3 (line)
    DSTACK     reduce using rule 3 (line)
    FUNC       reduce using rule 3 (line)
    PACKAGE    reduce using rule 3 (line)
    RBRACE     reduce using rule 3 (line)
    SFUNC      reduce using rule 3 (line)
    SPACKAGE   reduce using rule 3 (line)
    SSTRUCT    reduce using rule 3 (line)
    STEP       reduce using rule 3 (line)
    TYPSTRUCT  reduce using rule 3 (line)
    VAR        reduce using rule 3 (line)

state 4 // TYPSTRUCT IDENT STRUCT LBRACE RBRACE [$end]

    4 line: structDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 4 (line)
    AFF        reduce using rule 4 (line)
    DPROGRAM   reduce using rule 4 (line)
    DSTACK     reduce using rule 4 (line)
    FUNC       reduce using rule 4 (line)
    PACKAGE    reduce using rule 4 (line)
    RBRACE     reduce using rule 4 (line)
    SFUNC      reduce using rule 4 (line)
    SPACKAGE   reduce using rule 4 (line)
    SSTRUCT    reduce using rule 4 (line)
    STEP       reduce using rule 4 (line)
    TYPSTRUCT  reduce using rule 4 (line)
    VAR        reduce using rule 4 (line)

state 5 // PACKAGE IDENT [$end]

    5 line: packageDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 5 (line)
    AFF        reduce using rule 5 (line)
    DPROGRAM   reduce using rule 5 (line)
    DSTACK     reduce using rule 5 (line)
    FUNC       reduce using rule 5 (line)
    PACKAGE    reduce using rule 5 (line)
    RBRACE     reduce using rule 5 (line)
    SFUNC      reduce using rule 5 (line)
    SPACKAGE   reduce using rule 5 (line)
    SSTRUCT    reduce using rule 5 (line)
    STEP       reduce using rule 5 (line)
    TYPSTRUCT  reduce using rule 5 (line)
    VAR        reduce using rule 5 (line)

state 6 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE RBRACE [$end]

    6 line: functionDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 6 (line)
    AFF        reduce using rule 6 (line)
    DPROGRAM   reduce using rule 6 (line)
    DSTACK     reduce using rule 6 (line)
    FUNC       reduce using rule 6 (line)
    PACKAGE    reduce using rule 6 (line)
    RBRACE     reduce using rule 6 (line)
    SFUNC      reduce using rule 6 (line)
    SPACKAGE   reduce using rule 6 (line)
    SSTRUCT    reduce using rule 6 (line)
    STEP       reduce using rule 6 (line)
    TYPSTRUCT  reduce using rule 6 (line)
    VAR        reduce using rule 6 (line)

state 7 // SFUNC IDENT [$end]

    7 line: selector .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 7 (line)
    AFF        reduce using rule 7 (line)
    DPROGRAM   reduce using rule 7 (line)
    DSTACK     reduce using rule 7 (line)
    FUNC       reduce using rule 7 (line)
    PACKAGE    reduce using rule 7 (line)
    RBRACE     reduce using rule 7 (line)
    SFUNC      reduce using rule 7 (line)
    SPACKAGE   reduce using rule 7 (line)
    SSTRUCT    reduce using rule 7 (line)
    STEP       reduce using rule 7 (line)
    TYPSTRUCT  reduce using rule 7 (line)
    VAR        reduce using rule 7 (line)

state 8 // STEP INT [$end]

    8 line: stepping .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 8 (line)
    AFF        reduce using rule 8 (line)
    DPROGRAM   reduce using rule 8 (line)
    DSTACK     reduce using rule 8 (line)
    FUNC       reduce using rule 8 (line)
    PACKAGE    reduce using rule 8 (line)
    RBRACE     reduce using rule 8 (line)
    SFUNC      reduce using rule 8 (line)
    SPACKAGE   reduce using rule 8 (line)
    SSTRUCT    reduce using rule 8 (line)
    STEP       reduce using rule 8 (line)
    TYPSTRUCT  reduce using rule 8 (line)
    VAR        reduce using rule 8 (line)

state 9 // DPROGRAM BOOLEAN [$end]

    9 line: debugging .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 9 (line)
    AFF        reduce using rule 9 (line)
    DPROGRAM   reduce using rule 9 (line)
    DSTACK     reduce using rule 9 (line)
    FUNC       reduce using rule 9 (line)
    PACKAGE    reduce using rule 9 (line)
    RBRACE     reduce using rule 9 (line)
    SFUNC      reduce using rule 9 (line)
    SPACKAGE   reduce using rule 9 (line)
    SSTRUCT    reduce using rule 9 (line)
    STEP       reduce using rule 9 (line)
    TYPSTRUCT  reduce using rule 9 (line)
    VAR        reduce using rule 9 (line)

state 10 // AFF FUNC IDENT [$end]

   10 line: affordance .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 10 (line)
    AFF        reduce using rule 10 (line)
    DPROGRAM   reduce using rule 10 (line)
    DSTACK     reduce using rule 10 (line)
    FUNC       reduce using rule 10 (line)
    PACKAGE    reduce using rule 10 (line)
    RBRACE     reduce using rule 10 (line)
    SFUNC      reduce using rule 10 (line)
    SPACKAGE   reduce using rule 10 (line)
    SSTRUCT    reduce using rule 10 (line)
    STEP       reduce using rule 10 (line)
    TYPSTRUCT  reduce using rule 10 (line)
    VAR        reduce using rule 10 (line)

state 11 // AFF

   13 affordance: AFF . FUNC IDENT
   14 affordance: AFF . FUNC IDENT LBRACE INT RBRACE
   15 affordance: AFF . FUNC IDENT LBRACE STRING RBRACE
   16 affordance: AFF . FUNC IDENT LBRACE STRING INT RBRACE

    FUNC  shift, and goto state 182

state 12 // STEP

   17 stepping: STEP . INT

    INT  shift, and goto state 181

state 13 // DSTACK

   18 debugging: DSTACK . BOOLEAN

    BOOLEAN  shift, and goto state 180

state 14 // DPROGRAM

   19 debugging: DPROGRAM . BOOLEAN

    BOOLEAN  shift, and goto state 179

state 15 // SPACKAGE

   25 selector: SPACKAGE . IDENT $@1 selectorLines

    IDENT  shift, and goto state 173

state 16 // SFUNC

   27 selector: SFUNC . IDENT $@2 selectorExpressionsAndStatements

    IDENT  shift, and goto state 167

state 17 // SSTRUCT

   29 selector: SSTRUCT . IDENT $@3 selectorFields

    IDENT  shift, and goto state 161

state 18 // PACKAGE

   45 packageDeclaration: PACKAGE . IDENT

    IDENT  shift, and goto state 160

state 19 // VAR

   48 definitionDeclaration: VAR . IDENT typeSpecifier definitionAssignment
   49 definitionDeclaration: VAR . IDENT IDENT

    IDENT  shift, and goto state 156

state 20 // TYPSTRUCT

   55 structDeclaration: TYPSTRUCT . IDENT $@4 STRUCT structFields

    IDENT  shift, and goto state 146

state 21 // FUNC

   59 functionDeclaration: FUNC . IDENT functionParameters functionParameters $@5 functionStatements

    IDENT  shift, and goto state 22

state 22 // FUNC IDENT

   59 functionDeclaration: FUNC IDENT . functionParameters functionParameters $@5 functionStatements

    LPAREN  shift, and goto state 23

    functionParameters  goto state 24

state 23 // FUNC IDENT LPAREN

   56 functionParameters: LPAREN . parameters RPAREN
   57 functionParameters: LPAREN . RPAREN

    IDENT   shift, and goto state 140
    RPAREN  shift, and goto state 139

    parameter   goto state 141
    parameters  goto state 138

state 24 // FUNC IDENT LPAREN RPAREN [LPAREN]

   59 functionDeclaration: FUNC IDENT functionParameters . functionParameters $@5 functionStatements

    LPAREN  shift, and goto state 23

    functionParameters  goto state 25

state 25 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN [LBRACE]

   59 functionDeclaration: FUNC IDENT functionParameters functionParameters . $@5 functionStatements
   58 $@5: .  [LBRACE]

    LBRACE  reduce using rule 58 ($@5)

    $@5  goto state 26

state 26 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN [LBRACE]

   59 functionDeclaration: FUNC IDENT functionParameters functionParameters $@5 . functionStatements

    LBRACE  shift, and goto state 28

    functionStatements  goto state 27

state 27 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE RBRACE [$end]

   59 functionDeclaration: FUNC IDENT functionParameters functionParameters $@5 functionStatements .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 59 (functionDeclaration)
    AFF        reduce using rule 59 (functionDeclaration)
    DPROGRAM   reduce using rule 59 (functionDeclaration)
    DSTACK     reduce using rule 59 (functionDeclaration)
    FUNC       reduce using rule 59 (functionDeclaration)
    PACKAGE    reduce using rule 59 (functionDeclaration)
    RBRACE     reduce using rule 59 (functionDeclaration)
    SFUNC      reduce using rule 59 (functionDeclaration)
    SPACKAGE   reduce using rule 59 (functionDeclaration)
    SSTRUCT    reduce using rule 59 (functionDeclaration)
    STEP       reduce using rule 59 (functionDeclaration)
    TYPSTRUCT  reduce using rule 59 (functionDeclaration)
    VAR        reduce using rule 59 (functionDeclaration)

state 28 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE

   63 functionStatements: LBRACE . expressionsAndStatements RBRACE
   64 functionStatements: LBRACE . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 43
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 42
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 29 // VAR IDENT I32

   32 typeSpecifier: I32 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 32 (typeSpecifier)
    AFF        reduce using rule 32 (typeSpecifier)
    ASSIGN     reduce using rule 32 (typeSpecifier)
    BOOL       reduce using rule 32 (typeSpecifier)
    BOOLA      reduce using rule 32 (typeSpecifier)
    BYTE       reduce using rule 32 (typeSpecifier)
    BYTEA      reduce using rule 32 (typeSpecifier)
    CASSIGN    reduce using rule 32 (typeSpecifier)
    COMMA      reduce using rule 32 (typeSpecifier)
    DPROGRAM   reduce using rule 32 (typeSpecifier)
    DSTACK     reduce using rule 32 (typeSpecifier)
    F32        reduce using rule 32 (typeSpecifier)
    F32A       reduce using rule 32 (typeSpecifier)
    F64        reduce using rule 32 (typeSpecifier)
    F64A       reduce using rule 32 (typeSpecifier)
    FLOAT      reduce using rule 32 (typeSpecifier)
    FUNC       reduce using rule 32 (typeSpecifier)
    I32        reduce using rule 32 (typeSpecifier)
    I32A       reduce using rule 32 (typeSpecifier)
    I64        reduce using rule 32 (typeSpecifier)
    I64A       reduce using rule 32 (typeSpecifier)
    IDENT      reduce using rule 32 (typeSpecifier)
    IF         reduce using rule 32 (typeSpecifier)
    INT        reduce using rule 32 (typeSpecifier)
    LBRACE     reduce using rule 32 (typeSpecifier)
    PACKAGE    reduce using rule 32 (typeSpecifier)
    RBRACE     reduce using rule 32 (typeSpecifier)
    RPAREN     reduce using rule 32 (typeSpecifier)
    SFUNC      reduce using rule 32 (typeSpecifier)
    SPACKAGE   reduce using rule 32 (typeSpecifier)
    SSTRUCT    reduce using rule 32 (typeSpecifier)
    STEP       reduce using rule 32 (typeSpecifier)
    STR        reduce using rule 32 (typeSpecifier)
    STRING     reduce using rule 32 (typeSpecifier)
    TYPSTRUCT  reduce using rule 32 (typeSpecifier)
    VAR        reduce using rule 32 (typeSpecifier)
    WHILE      reduce using rule 32 (typeSpecifier)

state 30 // VAR IDENT I64

   33 typeSpecifier: I64 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 33 (typeSpecifier)
    AFF        reduce using rule 33 (typeSpecifier)
    ASSIGN     reduce using rule 33 (typeSpecifier)
    BOOL       reduce using rule 33 (typeSpecifier)
    BOOLA      reduce using rule 33 (typeSpecifier)
    BYTE       reduce using rule 33 (typeSpecifier)
    BYTEA      reduce using rule 33 (typeSpecifier)
    CASSIGN    reduce using rule 33 (typeSpecifier)
    COMMA      reduce using rule 33 (typeSpecifier)
    DPROGRAM   reduce using rule 33 (typeSpecifier)
    DSTACK     reduce using rule 33 (typeSpecifier)
    F32        reduce using rule 33 (typeSpecifier)
    F32A       reduce using rule 33 (typeSpecifier)
    F64        reduce using rule 33 (typeSpecifier)
    F64A       reduce using rule 33 (typeSpecifier)
    FLOAT      reduce using rule 33 (typeSpecifier)
    FUNC       reduce using rule 33 (typeSpecifier)
    I32        reduce using rule 33 (typeSpecifier)
    I32A       reduce using rule 33 (typeSpecifier)
    I64        reduce using rule 33 (typeSpecifier)
    I64A       reduce using rule 33 (typeSpecifier)
    IDENT      reduce using rule 33 (typeSpecifier)
    IF         reduce using rule 33 (typeSpecifier)
    INT        reduce using rule 33 (typeSpecifier)
    LBRACE     reduce using rule 33 (typeSpecifier)
    PACKAGE    reduce using rule 33 (typeSpecifier)
    RBRACE     reduce using rule 33 (typeSpecifier)
    RPAREN     reduce using rule 33 (typeSpecifier)
    SFUNC      reduce using rule 33 (typeSpecifier)
    SPACKAGE   reduce using rule 33 (typeSpecifier)
    SSTRUCT    reduce using rule 33 (typeSpecifier)
    STEP       reduce using rule 33 (typeSpecifier)
    STR        reduce using rule 33 (typeSpecifier)
    STRING     reduce using rule 33 (typeSpecifier)
    TYPSTRUCT  reduce using rule 33 (typeSpecifier)
    VAR        reduce using rule 33 (typeSpecifier)
    WHILE      reduce using rule 33 (typeSpecifier)

state 31 // VAR IDENT F32

   34 typeSpecifier: F32 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 34 (typeSpecifier)
    AFF        reduce using rule 34 (typeSpecifier)
    ASSIGN     reduce using rule 34 (typeSpecifier)
    BOOL       reduce using rule 34 (typeSpecifier)
    BOOLA      reduce using rule 34 (typeSpecifier)
    BYTE       reduce using rule 34 (typeSpecifier)
    BYTEA      reduce using rule 34 (typeSpecifier)
    CASSIGN    reduce using rule 34 (typeSpecifier)
    COMMA      reduce using rule 34 (typeSpecifier)
    DPROGRAM   reduce using rule 34 (typeSpecifier)
    DSTACK     reduce using rule 34 (typeSpecifier)
    F32        reduce using rule 34 (typeSpecifier)
    F32A       reduce using rule 34 (typeSpecifier)
    F64        reduce using rule 34 (typeSpecifier)
    F64A       reduce using rule 34 (typeSpecifier)
    FLOAT      reduce using rule 34 (typeSpecifier)
    FUNC       reduce using rule 34 (typeSpecifier)
    I32        reduce using rule 34 (typeSpecifier)
    I32A       reduce using rule 34 (typeSpecifier)
    I64        reduce using rule 34 (typeSpecifier)
    I64A       reduce using rule 34 (typeSpecifier)
    IDENT      reduce using rule 34 (typeSpecifier)
    IF         reduce using rule 34 (typeSpecifier)
    INT        reduce using rule 34 (typeSpecifier)
    LBRACE     reduce using rule 34 (typeSpecifier)
    PACKAGE    reduce using rule 34 (typeSpecifier)
    RBRACE     reduce using rule 34 (typeSpecifier)
    RPAREN     reduce using rule 34 (typeSpecifier)
    SFUNC      reduce using rule 34 (typeSpecifier)
    SPACKAGE   reduce using rule 34 (typeSpecifier)
    SSTRUCT    reduce using rule 34 (typeSpecifier)
    STEP       reduce using rule 34 (typeSpecifier)
    STR        reduce using rule 34 (typeSpecifier)
    STRING     reduce using rule 34 (typeSpecifier)
    TYPSTRUCT  reduce using rule 34 (typeSpecifier)
    VAR        reduce using rule 34 (typeSpecifier)
    WHILE      reduce using rule 34 (typeSpecifier)

state 32 // VAR IDENT F64

   35 typeSpecifier: F64 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 35 (typeSpecifier)
    AFF        reduce using rule 35 (typeSpecifier)
    ASSIGN     reduce using rule 35 (typeSpecifier)
    BOOL       reduce using rule 35 (typeSpecifier)
    BOOLA      reduce using rule 35 (typeSpecifier)
    BYTE       reduce using rule 35 (typeSpecifier)
    BYTEA      reduce using rule 35 (typeSpecifier)
    CASSIGN    reduce using rule 35 (typeSpecifier)
    COMMA      reduce using rule 35 (typeSpecifier)
    DPROGRAM   reduce using rule 35 (typeSpecifier)
    DSTACK     reduce using rule 35 (typeSpecifier)
    F32        reduce using rule 35 (typeSpecifier)
    F32A       reduce using rule 35 (typeSpecifier)
    F64        reduce using rule 35 (typeSpecifier)
    F64A       reduce using rule 35 (typeSpecifier)
    FLOAT      reduce using rule 35 (typeSpecifier)
    FUNC       reduce using rule 35 (typeSpecifier)
    I32        reduce using rule 35 (typeSpecifier)
    I32A       reduce using rule 35 (typeSpecifier)
    I64        reduce using rule 35 (typeSpecifier)
    I64A       reduce using rule 35 (typeSpecifier)
    IDENT      reduce using rule 35 (typeSpecifier)
    IF         reduce using rule 35 (typeSpecifier)
    INT        reduce using rule 35 (typeSpecifier)
    LBRACE     reduce using rule 35 (typeSpecifier)
    PACKAGE    reduce using rule 35 (typeSpecifier)
    RBRACE     reduce using rule 35 (typeSpecifier)
    RPAREN     reduce using rule 35 (typeSpecifier)
    SFUNC      reduce using rule 35 (typeSpecifier)
    SPACKAGE   reduce using rule 35 (typeSpecifier)
    SSTRUCT    reduce using rule 35 (typeSpecifier)
    STEP       reduce using rule 35 (typeSpecifier)
    STR        reduce using rule 35 (typeSpecifier)
    STRING     reduce using rule 35 (typeSpecifier)
    TYPSTRUCT  reduce using rule 35 (typeSpecifier)
    VAR        reduce using rule 35 (typeSpecifier)
    WHILE      reduce using rule 35 (typeSpecifier)

state 33 // VAR IDENT BOOL

   36 typeSpecifier: BOOL .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 36 (typeSpecifier)
    AFF        reduce using rule 36 (typeSpecifier)
    ASSIGN     reduce using rule 36 (typeSpecifier)
    BOOL       reduce using rule 36 (typeSpecifier)
    BOOLA      reduce using rule 36 (typeSpecifier)
    BYTE       reduce using rule 36 (typeSpecifier)
    BYTEA      reduce using rule 36 (typeSpecifier)
    CASSIGN    reduce using rule 36 (typeSpecifier)
    COMMA      reduce using rule 36 (typeSpecifier)
    DPROGRAM   reduce using rule 36 (typeSpecifier)
    DSTACK     reduce using rule 36 (typeSpecifier)
    F32        reduce using rule 36 (typeSpecifier)
    F32A       reduce using rule 36 (typeSpecifier)
    F64        reduce using rule 36 (typeSpecifier)
    F64A       reduce using rule 36 (typeSpecifier)
    FLOAT      reduce using rule 36 (typeSpecifier)
    FUNC       reduce using rule 36 (typeSpecifier)
    I32        reduce using rule 36 (typeSpecifier)
    I32A       reduce using rule 36 (typeSpecifier)
    I64        reduce using rule 36 (typeSpecifier)
    I64A       reduce using rule 36 (typeSpecifier)
    IDENT      reduce using rule 36 (typeSpecifier)
    IF         reduce using rule 36 (typeSpecifier)
    INT        reduce using rule 36 (typeSpecifier)
    LBRACE     reduce using rule 36 (typeSpecifier)
    PACKAGE    reduce using rule 36 (typeSpecifier)
    RBRACE     reduce using rule 36 (typeSpecifier)
    RPAREN     reduce using rule 36 (typeSpecifier)
    SFUNC      reduce using rule 36 (typeSpecifier)
    SPACKAGE   reduce using rule 36 (typeSpecifier)
    SSTRUCT    reduce using rule 36 (typeSpecifier)
    STEP       reduce using rule 36 (typeSpecifier)
    STR        reduce using rule 36 (typeSpecifier)
    STRING     reduce using rule 36 (typeSpecifier)
    TYPSTRUCT  reduce using rule 36 (typeSpecifier)
    VAR        reduce using rule 36 (typeSpecifier)
    WHILE      reduce using rule 36 (typeSpecifier)

state 34 // VAR IDENT BYTE

   37 typeSpecifier: BYTE .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 37 (typeSpecifier)
    AFF        reduce using rule 37 (typeSpecifier)
    ASSIGN     reduce using rule 37 (typeSpecifier)
    BOOL       reduce using rule 37 (typeSpecifier)
    BOOLA      reduce using rule 37 (typeSpecifier)
    BYTE       reduce using rule 37 (typeSpecifier)
    BYTEA      reduce using rule 37 (typeSpecifier)
    CASSIGN    reduce using rule 37 (typeSpecifier)
    COMMA      reduce using rule 37 (typeSpecifier)
    DPROGRAM   reduce using rule 37 (typeSpecifier)
    DSTACK     reduce using rule 37 (typeSpecifier)
    F32        reduce using rule 37 (typeSpecifier)
    F32A       reduce using rule 37 (typeSpecifier)
    F64        reduce using rule 37 (typeSpecifier)
    F64A       reduce using rule 37 (typeSpecifier)
    FLOAT      reduce using rule 37 (typeSpecifier)
    FUNC       reduce using rule 37 (typeSpecifier)
    I32        reduce using rule 37 (typeSpecifier)
    I32A       reduce using rule 37 (typeSpecifier)
    I64        reduce using rule 37 (typeSpecifier)
    I64A       reduce using rule 37 (typeSpecifier)
    IDENT      reduce using rule 37 (typeSpecifier)
    IF         reduce using rule 37 (typeSpecifier)
    INT        reduce using rule 37 (typeSpecifier)
    LBRACE     reduce using rule 37 (typeSpecifier)
    PACKAGE    reduce using rule 37 (typeSpecifier)
    RBRACE     reduce using rule 37 (typeSpecifier)
    RPAREN     reduce using rule 37 (typeSpecifier)
    SFUNC      reduce using rule 37 (typeSpecifier)
    SPACKAGE   reduce using rule 37 (typeSpecifier)
    SSTRUCT    reduce using rule 37 (typeSpecifier)
    STEP       reduce using rule 37 (typeSpecifier)
    STR        reduce using rule 37 (typeSpecifier)
    STRING     reduce using rule 37 (typeSpecifier)
    TYPSTRUCT  reduce using rule 37 (typeSpecifier)
    VAR        reduce using rule 37 (typeSpecifier)
    WHILE      reduce using rule 37 (typeSpecifier)

state 35 // VAR IDENT BOOLA

   38 typeSpecifier: BOOLA .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 38 (typeSpecifier)
    AFF        reduce using rule 38 (typeSpecifier)
    ASSIGN     reduce using rule 38 (typeSpecifier)
    BOOL       reduce using rule 38 (typeSpecifier)
    BOOLA      reduce using rule 38 (typeSpecifier)
    BYTE       reduce using rule 38 (typeSpecifier)
    BYTEA      reduce using rule 38 (typeSpecifier)
    CASSIGN    reduce using rule 38 (typeSpecifier)
    COMMA      reduce using rule 38 (typeSpecifier)
    DPROGRAM   reduce using rule 38 (typeSpecifier)
    DSTACK     reduce using rule 38 (typeSpecifier)
    F32        reduce using rule 38 (typeSpecifier)
    F32A       reduce using rule 38 (typeSpecifier)
    F64        reduce using rule 38 (typeSpecifier)
    F64A       reduce using rule 38 (typeSpecifier)
    FLOAT      reduce using rule 38 (typeSpecifier)
    FUNC       reduce using rule 38 (typeSpecifier)
    I32        reduce using rule 38 (typeSpecifier)
    I32A       reduce using rule 38 (typeSpecifier)
    I64        reduce using rule 38 (typeSpecifier)
    I64A       reduce using rule 38 (typeSpecifier)
    IDENT      reduce using rule 38 (typeSpecifier)
    IF         reduce using rule 38 (typeSpecifier)
    INT        reduce using rule 38 (typeSpecifier)
    LBRACE     reduce using rule 38 (typeSpecifier)
    PACKAGE    reduce using rule 38 (typeSpecifier)
    RBRACE     reduce using rule 38 (typeSpecifier)
    RPAREN     reduce using rule 38 (typeSpecifier)
    SFUNC      reduce using rule 38 (typeSpecifier)
    SPACKAGE   reduce using rule 38 (typeSpecifier)
    SSTRUCT    reduce using rule 38 (typeSpecifier)
    STEP       reduce using rule 38 (typeSpecifier)
    STR        reduce using rule 38 (typeSpecifier)
    STRING     reduce using rule 38 (typeSpecifier)
    TYPSTRUCT  reduce using rule 38 (typeSpecifier)
    VAR        reduce using rule 38 (typeSpecifier)
    WHILE      reduce using rule 38 (typeSpecifier)

state 36 // VAR IDENT BYTEA

   39 typeSpecifier: BYTEA .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 39 (typeSpecifier)
    AFF        reduce using rule 39 (typeSpecifier)
    ASSIGN     reduce using rule 39 (typeSpecifier)
    BOOL       reduce using rule 39 (typeSpecifier)
    BOOLA      reduce using rule 39 (typeSpecifier)
    BYTE       reduce using rule 39 (typeSpecifier)
    BYTEA      reduce using rule 39 (typeSpecifier)
    CASSIGN    reduce using rule 39 (typeSpecifier)
    COMMA      reduce using rule 39 (typeSpecifier)
    DPROGRAM   reduce using rule 39 (typeSpecifier)
    DSTACK     reduce using rule 39 (typeSpecifier)
    F32        reduce using rule 39 (typeSpecifier)
    F32A       reduce using rule 39 (typeSpecifier)
    F64        reduce using rule 39 (typeSpecifier)
    F64A       reduce using rule 39 (typeSpecifier)
    FLOAT      reduce using rule 39 (typeSpecifier)
    FUNC       reduce using rule 39 (typeSpecifier)
    I32        reduce using rule 39 (typeSpecifier)
    I32A       reduce using rule 39 (typeSpecifier)
    I64        reduce using rule 39 (typeSpecifier)
    I64A       reduce using rule 39 (typeSpecifier)
    IDENT      reduce using rule 39 (typeSpecifier)
    IF         reduce using rule 39 (typeSpecifier)
    INT        reduce using rule 39 (typeSpecifier)
    LBRACE     reduce using rule 39 (typeSpecifier)
    PACKAGE    reduce using rule 39 (typeSpecifier)
    RBRACE     reduce using rule 39 (typeSpecifier)
    RPAREN     reduce using rule 39 (typeSpecifier)
    SFUNC      reduce using rule 39 (typeSpecifier)
    SPACKAGE   reduce using rule 39 (typeSpecifier)
    SSTRUCT    reduce using rule 39 (typeSpecifier)
    STEP       reduce using rule 39 (typeSpecifier)
    STR        reduce using rule 39 (typeSpecifier)
    STRING     reduce using rule 39 (typeSpecifier)
    TYPSTRUCT  reduce using rule 39 (typeSpecifier)
    VAR        reduce using rule 39 (typeSpecifier)
    WHILE      reduce using rule 39 (typeSpecifier)

state 37 // VAR IDENT I32A

   40 typeSpecifier: I32A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 40 (typeSpecifier)
    AFF        reduce using rule 40 (typeSpecifier)
    ASSIGN     reduce using rule 40 (typeSpecifier)
    BOOL       reduce using rule 40 (typeSpecifier)
    BOOLA      reduce using rule 40 (typeSpecifier)
    BYTE       reduce using rule 40 (typeSpecifier)
    BYTEA      reduce using rule 40 (typeSpecifier)
    CASSIGN    reduce using rule 40 (typeSpecifier)
    COMMA      reduce using rule 40 (typeSpecifier)
    DPROGRAM   reduce using rule 40 (typeSpecifier)
    DSTACK     reduce using rule 40 (typeSpecifier)
    F32        reduce using rule 40 (typeSpecifier)
    F32A       reduce using rule 40 (typeSpecifier)
    F64        reduce using rule 40 (typeSpecifier)
    F64A       reduce using rule 40 (typeSpecifier)
    FLOAT      reduce using rule 40 (typeSpecifier)
    FUNC       reduce using rule 40 (typeSpecifier)
    I32        reduce using rule 40 (typeSpecifier)
    I32A       reduce using rule 40 (typeSpecifier)
    I64        reduce using rule 40 (typeSpecifier)
    I64A       reduce using rule 40 (typeSpecifier)
    IDENT      reduce using rule 40 (typeSpecifier)
    IF         reduce using rule 40 (typeSpecifier)
    INT        reduce using rule 40 (typeSpecifier)
    LBRACE     reduce using rule 40 (typeSpecifier)
    PACKAGE    reduce using rule 40 (typeSpecifier)
    RBRACE     reduce using rule 40 (typeSpecifier)
    RPAREN     reduce using rule 40 (typeSpecifier)
    SFUNC      reduce using rule 40 (typeSpecifier)
    SPACKAGE   reduce using rule 40 (typeSpecifier)
    SSTRUCT    reduce using rule 40 (typeSpecifier)
    STEP       reduce using rule 40 (typeSpecifier)
    STR        reduce using rule 40 (typeSpecifier)
    STRING     reduce using rule 40 (typeSpecifier)
    TYPSTRUCT  reduce using rule 40 (typeSpecifier)
    VAR        reduce using rule 40 (typeSpecifier)
    WHILE      reduce using rule 40 (typeSpecifier)

state 38 // VAR IDENT I64A

   41 typeSpecifier: I64A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 41 (typeSpecifier)
    AFF        reduce using rule 41 (typeSpecifier)
    ASSIGN     reduce using rule 41 (typeSpecifier)
    BOOL       reduce using rule 41 (typeSpecifier)
    BOOLA      reduce using rule 41 (typeSpecifier)
    BYTE       reduce using rule 41 (typeSpecifier)
    BYTEA      reduce using rule 41 (typeSpecifier)
    CASSIGN    reduce using rule 41 (typeSpecifier)
    COMMA      reduce using rule 41 (typeSpecifier)
    DPROGRAM   reduce using rule 41 (typeSpecifier)
    DSTACK     reduce using rule 41 (typeSpecifier)
    F32        reduce using rule 41 (typeSpecifier)
    F32A       reduce using rule 41 (typeSpecifier)
    F64        reduce using rule 41 (typeSpecifier)
    F64A       reduce using rule 41 (typeSpecifier)
    FLOAT      reduce using rule 41 (typeSpecifier)
    FUNC       reduce using rule 41 (typeSpecifier)
    I32        reduce using rule 41 (typeSpecifier)
    I32A       reduce using rule 41 (typeSpecifier)
    I64        reduce using rule 41 (typeSpecifier)
    I64A       reduce using rule 41 (typeSpecifier)
    IDENT      reduce using rule 41 (typeSpecifier)
    IF         reduce using rule 41 (typeSpecifier)
    INT        reduce using rule 41 (typeSpecifier)
    LBRACE     reduce using rule 41 (typeSpecifier)
    PACKAGE    reduce using rule 41 (typeSpecifier)
    RBRACE     reduce using rule 41 (typeSpecifier)
    RPAREN     reduce using rule 41 (typeSpecifier)
    SFUNC      reduce using rule 41 (typeSpecifier)
    SPACKAGE   reduce using rule 41 (typeSpecifier)
    SSTRUCT    reduce using rule 41 (typeSpecifier)
    STEP       reduce using rule 41 (typeSpecifier)
    STR        reduce using rule 41 (typeSpecifier)
    STRING     reduce using rule 41 (typeSpecifier)
    TYPSTRUCT  reduce using rule 41 (typeSpecifier)
    VAR        reduce using rule 41 (typeSpecifier)
    WHILE      reduce using rule 41 (typeSpecifier)

state 39 // VAR IDENT F32A

   42 typeSpecifier: F32A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 42 (typeSpecifier)
    AFF        reduce using rule 42 (typeSpecifier)
    ASSIGN     reduce using rule 42 (typeSpecifier)
    BOOL       reduce using rule 42 (typeSpecifier)
    BOOLA      reduce using rule 42 (typeSpecifier)
    BYTE       reduce using rule 42 (typeSpecifier)
    BYTEA      reduce using rule 42 (typeSpecifier)
    CASSIGN    reduce using rule 42 (typeSpecifier)
    COMMA      reduce using rule 42 (typeSpecifier)
    DPROGRAM   reduce using rule 42 (typeSpecifier)
    DSTACK     reduce using rule 42 (typeSpecifier)
    F32        reduce using rule 42 (typeSpecifier)
    F32A       reduce using rule 42 (typeSpecifier)
    F64        reduce using rule 42 (typeSpecifier)
    F64A       reduce using rule 42 (typeSpecifier)
    FLOAT      reduce using rule 42 (typeSpecifier)
    FUNC       reduce using rule 42 (typeSpecifier)
    I32        reduce using rule 42 (typeSpecifier)
    I32A       reduce using rule 42 (typeSpecifier)
    I64        reduce using rule 42 (typeSpecifier)
    I64A       reduce using rule 42 (typeSpecifier)
    IDENT      reduce using rule 42 (typeSpecifier)
    IF         reduce using rule 42 (typeSpecifier)
    INT        reduce using rule 42 (typeSpecifier)
    LBRACE     reduce using rule 42 (typeSpecifier)
    PACKAGE    reduce using rule 42 (typeSpecifier)
    RBRACE     reduce using rule 42 (typeSpecifier)
    RPAREN     reduce using rule 42 (typeSpecifier)
    SFUNC      reduce using rule 42 (typeSpecifier)
    SPACKAGE   reduce using rule 42 (typeSpecifier)
    SSTRUCT    reduce using rule 42 (typeSpecifier)
    STEP       reduce using rule 42 (typeSpecifier)
    STR        reduce using rule 42 (typeSpecifier)
    STRING     reduce using rule 42 (typeSpecifier)
    TYPSTRUCT  reduce using rule 42 (typeSpecifier)
    VAR        reduce using rule 42 (typeSpecifier)
    WHILE      reduce using rule 42 (typeSpecifier)

state 40 // VAR IDENT F64A

   43 typeSpecifier: F64A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 43 (typeSpecifier)
    AFF        reduce using rule 43 (typeSpecifier)
    ASSIGN     reduce using rule 43 (typeSpecifier)
    BOOL       reduce using rule 43 (typeSpecifier)
    BOOLA      reduce using rule 43 (typeSpecifier)
    BYTE       reduce using rule 43 (typeSpecifier)
    BYTEA      reduce using rule 43 (typeSpecifier)
    CASSIGN    reduce using rule 43 (typeSpecifier)
    COMMA      reduce using rule 43 (typeSpecifier)
    DPROGRAM   reduce using rule 43 (typeSpecifier)
    DSTACK     reduce using rule 43 (typeSpecifier)
    F32        reduce using rule 43 (typeSpecifier)
    F32A       reduce using rule 43 (typeSpecifier)
    F64        reduce using rule 43 (typeSpecifier)
    F64A       reduce using rule 43 (typeSpecifier)
    FLOAT      reduce using rule 43 (typeSpecifier)
    FUNC       reduce using rule 43 (typeSpecifier)
    I32        reduce using rule 43 (typeSpecifier)
    I32A       reduce using rule 43 (typeSpecifier)
    I64        reduce using rule 43 (typeSpecifier)
    I64A       reduce using rule 43 (typeSpecifier)
    IDENT      reduce using rule 43 (typeSpecifier)
    IF         reduce using rule 43 (typeSpecifier)
    INT        reduce using rule 43 (typeSpecifier)
    LBRACE     reduce using rule 43 (typeSpecifier)
    PACKAGE    reduce using rule 43 (typeSpecifier)
    RBRACE     reduce using rule 43 (typeSpecifier)
    RPAREN     reduce using rule 43 (typeSpecifier)
    SFUNC      reduce using rule 43 (typeSpecifier)
    SPACKAGE   reduce using rule 43 (typeSpecifier)
    SSTRUCT    reduce using rule 43 (typeSpecifier)
    STEP       reduce using rule 43 (typeSpecifier)
    STR        reduce using rule 43 (typeSpecifier)
    STRING     reduce using rule 43 (typeSpecifier)
    TYPSTRUCT  reduce using rule 43 (typeSpecifier)
    VAR        reduce using rule 43 (typeSpecifier)
    WHILE      reduce using rule 43 (typeSpecifier)

state 41 // VAR IDENT STR

   44 typeSpecifier: STR .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 44 (typeSpecifier)
    AFF        reduce using rule 44 (typeSpecifier)
    ASSIGN     reduce using rule 44 (typeSpecifier)
    BOOL       reduce using rule 44 (typeSpecifier)
    BOOLA      reduce using rule 44 (typeSpecifier)
    BYTE       reduce using rule 44 (typeSpecifier)
    BYTEA      reduce using rule 44 (typeSpecifier)
    CASSIGN    reduce using rule 44 (typeSpecifier)
    COMMA      reduce using rule 44 (typeSpecifier)
    DPROGRAM   reduce using rule 44 (typeSpecifier)
    DSTACK     reduce using rule 44 (typeSpecifier)
    F32        reduce using rule 44 (typeSpecifier)
    F32A       reduce using rule 44 (typeSpecifier)
    F64        reduce using rule 44 (typeSpecifier)
    F64A       reduce using rule 44 (typeSpecifier)
    FLOAT      reduce using rule 44 (typeSpecifier)
    FUNC       reduce using rule 44 (typeSpecifier)
    I32        reduce using rule 44 (typeSpecifier)
    I32A       reduce using rule 44 (typeSpecifier)
    I64        reduce using rule 44 (typeSpecifier)
    I64A       reduce using rule 44 (typeSpecifier)
    IDENT      reduce using rule 44 (typeSpecifier)
    IF         reduce using rule 44 (typeSpecifier)
    INT        reduce using rule 44 (typeSpecifier)
    LBRACE     reduce using rule 44 (typeSpecifier)
    PACKAGE    reduce using rule 44 (typeSpecifier)
    RBRACE     reduce using rule 44 (typeSpecifier)
    RPAREN     reduce using rule 44 (typeSpecifier)
    SFUNC      reduce using rule 44 (typeSpecifier)
    SPACKAGE   reduce using rule 44 (typeSpecifier)
    SSTRUCT    reduce using rule 44 (typeSpecifier)
    STEP       reduce using rule 44 (typeSpecifier)
    STR        reduce using rule 44 (typeSpecifier)
    STRING     reduce using rule 44 (typeSpecifier)
    TYPSTRUCT  reduce using rule 44 (typeSpecifier)
    VAR        reduce using rule 44 (typeSpecifier)
    WHILE      reduce using rule 44 (typeSpecifier)

state 42 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE DPROGRAM BOOLEAN [AFF]

   63 functionStatements: LBRACE expressionsAndStatements . RBRACE
   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 137
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 43 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE RBRACE

   64 functionStatements: LBRACE RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 64 (functionStatements)
    AFF        reduce using rule 64 (functionStatements)
    DPROGRAM   reduce using rule 64 (functionStatements)
    DSTACK     reduce using rule 64 (functionStatements)
    FUNC       reduce using rule 64 (functionStatements)
    PACKAGE    reduce using rule 64 (functionStatements)
    RBRACE     reduce using rule 64 (functionStatements)
    SFUNC      reduce using rule 64 (functionStatements)
    SPACKAGE   reduce using rule 64 (functionStatements)
    SSTRUCT    reduce using rule 64 (functionStatements)
    STEP       reduce using rule 64 (functionStatements)
    TYPSTRUCT  reduce using rule 64 (functionStatements)
    VAR        reduce using rule 64 (functionStatements)

state 44 // SFUNC IDENT LBRACE IDENT LPAREN RPAREN [AFF]

   65 expressionsAndStatements: nonAssignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]
  117 argumentsList: nonAssignExpression .  [ASSIGN, CASSIGN, COMMA]

    AFF       reduce using rule 65 (expressionsAndStatements)
    ASSIGN    reduce using rule 117 (argumentsList)
    BOOL      reduce using rule 65 (expressionsAndStatements)
    BOOLA     reduce using rule 65 (expressionsAndStatements)
    BYTE      reduce using rule 65 (expressionsAndStatements)
    BYTEA     reduce using rule 65 (expressionsAndStatements)
    CASSIGN   reduce using rule 117 (argumentsList)
    COMMA     reduce using rule 117 (argumentsList)
    DPROGRAM  reduce using rule 65 (expressionsAndStatements)
    DSTACK    reduce using rule 65 (expressionsAndStatements)
    F32       reduce using rule 65 (expressionsAndStatements)
    F32A      reduce using rule 65 (expressionsAndStatements)
    F64       reduce using rule 65 (expressionsAndStatements)
    F64A      reduce using rule 65 (expressionsAndStatements)
    FLOAT     reduce using rule 65 (expressionsAndStatements)
    I32       reduce using rule 65 (expressionsAndStatements)
    I32A      reduce using rule 65 (expressionsAndStatements)
    I64       reduce using rule 65 (expressionsAndStatements)
    I64A      reduce using rule 65 (expressionsAndStatements)
    IDENT     reduce using rule 65 (expressionsAndStatements)
    IF        reduce using rule 65 (expressionsAndStatements)
    INT       reduce using rule 65 (expressionsAndStatements)
    RBRACE    reduce using rule 65 (expressionsAndStatements)
    SFUNC     reduce using rule 65 (expressionsAndStatements)
    SPACKAGE  reduce using rule 65 (expressionsAndStatements)
    SSTRUCT   reduce using rule 65 (expressionsAndStatements)
    STEP      reduce using rule 65 (expressionsAndStatements)
    STR       reduce using rule 65 (expressionsAndStatements)
    STRING    reduce using rule 65 (expressionsAndStatements)
    VAR       reduce using rule 65 (expressionsAndStatements)
    WHILE     reduce using rule 65 (expressionsAndStatements)

state 45 // SFUNC IDENT LBRACE VAR IDENT BOOL [AFF]

   66 expressionsAndStatements: assignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 66 (expressionsAndStatements)
    BOOL      reduce using rule 66 (expressionsAndStatements)
    BOOLA     reduce using rule 66 (expressionsAndStatements)
    BYTE      reduce using rule 66 (expressionsAndStatements)
    BYTEA     reduce using rule 66 (expressionsAndStatements)
    DPROGRAM  reduce using rule 66 (expressionsAndStatements)
    DSTACK    reduce using rule 66 (expressionsAndStatements)
    F32       reduce using rule 66 (expressionsAndStatements)
    F32A      reduce using rule 66 (expressionsAndStatements)
    F64       reduce using rule 66 (expressionsAndStatements)
    F64A      reduce using rule 66 (expressionsAndStatements)
    FLOAT     reduce using rule 66 (expressionsAndStatements)
    I32       reduce using rule 66 (expressionsAndStatements)
    I32A      reduce using rule 66 (expressionsAndStatements)
    I64       reduce using rule 66 (expressionsAndStatements)
    I64A      reduce using rule 66 (expressionsAndStatements)
    IDENT     reduce using rule 66 (expressionsAndStatements)
    IF        reduce using rule 66 (expressionsAndStatements)
    INT       reduce using rule 66 (expressionsAndStatements)
    RBRACE    reduce using rule 66 (expressionsAndStatements)
    SFUNC     reduce using rule 66 (expressionsAndStatements)
    SPACKAGE  reduce using rule 66 (expressionsAndStatements)
    SSTRUCT   reduce using rule 66 (expressionsAndStatements)
    STEP      reduce using rule 66 (expressionsAndStatements)
    STR       reduce using rule 66 (expressionsAndStatements)
    STRING    reduce using rule 66 (expressionsAndStatements)
    VAR       reduce using rule 66 (expressionsAndStatements)
    WHILE     reduce using rule 66 (expressionsAndStatements)

state 46 // SFUNC IDENT LBRACE VAR IDENT IDENT [AFF]

   67 expressionsAndStatements: statement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 67 (expressionsAndStatements)
    BOOL      reduce using rule 67 (expressionsAndStatements)
    BOOLA     reduce using rule 67 (expressionsAndStatements)
    BYTE      reduce using rule 67 (expressionsAndStatements)
    BYTEA     reduce using rule 67 (expressionsAndStatements)
    DPROGRAM  reduce using rule 67 (expressionsAndStatements)
    DSTACK    reduce using rule 67 (expressionsAndStatements)
    F32       reduce using rule 67 (expressionsAndStatements)
    F32A      reduce using rule 67 (expressionsAndStatements)
    F64       reduce using rule 67 (expressionsAndStatements)
    F64A      reduce using rule 67 (expressionsAndStatements)
    FLOAT     reduce using rule 67 (expressionsAndStatements)
    I32       reduce using rule 67 (expressionsAndStatements)
    I32A      reduce using rule 67 (expressionsAndStatements)
    I64       reduce using rule 67 (expressionsAndStatements)
    I64A      reduce using rule 67 (expressionsAndStatements)
    IDENT     reduce using rule 67 (expressionsAndStatements)
    IF        reduce using rule 67 (expressionsAndStatements)
    INT       reduce using rule 67 (expressionsAndStatements)
    RBRACE    reduce using rule 67 (expressionsAndStatements)
    SFUNC     reduce using rule 67 (expressionsAndStatements)
    SPACKAGE  reduce using rule 67 (expressionsAndStatements)
    SSTRUCT   reduce using rule 67 (expressionsAndStatements)
    STEP      reduce using rule 67 (expressionsAndStatements)
    STR       reduce using rule 67 (expressionsAndStatements)
    STRING    reduce using rule 67 (expressionsAndStatements)
    VAR       reduce using rule 67 (expressionsAndStatements)
    WHILE     reduce using rule 67 (expressionsAndStatements)

state 47 // SFUNC IDENT LBRACE SFUNC IDENT [AFF]

   68 expressionsAndStatements: selector .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 68 (expressionsAndStatements)
    BOOL      reduce using rule 68 (expressionsAndStatements)
    BOOLA     reduce using rule 68 (expressionsAndStatements)
    BYTE      reduce using rule 68 (expressionsAndStatements)
    BYTEA     reduce using rule 68 (expressionsAndStatements)
    DPROGRAM  reduce using rule 68 (expressionsAndStatements)
    DSTACK    reduce using rule 68 (expressionsAndStatements)
    F32       reduce using rule 68 (expressionsAndStatements)
    F32A      reduce using rule 68 (expressionsAndStatements)
    F64       reduce using rule 68 (expressionsAndStatements)
    F64A      reduce using rule 68 (expressionsAndStatements)
    FLOAT     reduce using rule 68 (expressionsAndStatements)
    I32       reduce using rule 68 (expressionsAndStatements)
    I32A      reduce using rule 68 (expressionsAndStatements)
    I64       reduce using rule 68 (expressionsAndStatements)
    I64A      reduce using rule 68 (expressionsAndStatements)
    IDENT     reduce using rule 68 (expressionsAndStatements)
    IF        reduce using rule 68 (expressionsAndStatements)
    INT       reduce using rule 68 (expressionsAndStatements)
    RBRACE    reduce using rule 68 (expressionsAndStatements)
    SFUNC     reduce using rule 68 (expressionsAndStatements)
    SPACKAGE  reduce using rule 68 (expressionsAndStatements)
    SSTRUCT   reduce using rule 68 (expressionsAndStatements)
    STEP      reduce using rule 68 (expressionsAndStatements)
    STR       reduce using rule 68 (expressionsAndStatements)
    STRING    reduce using rule 68 (expressionsAndStatements)
    VAR       reduce using rule 68 (expressionsAndStatements)
    WHILE     reduce using rule 68 (expressionsAndStatements)

state 48 // SFUNC IDENT LBRACE STEP INT [AFF]

   69 expressionsAndStatements: stepping .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 69 (expressionsAndStatements)
    BOOL      reduce using rule 69 (expressionsAndStatements)
    BOOLA     reduce using rule 69 (expressionsAndStatements)
    BYTE      reduce using rule 69 (expressionsAndStatements)
    BYTEA     reduce using rule 69 (expressionsAndStatements)
    DPROGRAM  reduce using rule 69 (expressionsAndStatements)
    DSTACK    reduce using rule 69 (expressionsAndStatements)
    F32       reduce using rule 69 (expressionsAndStatements)
    F32A      reduce using rule 69 (expressionsAndStatements)
    F64       reduce using rule 69 (expressionsAndStatements)
    F64A      reduce using rule 69 (expressionsAndStatements)
    FLOAT     reduce using rule 69 (expressionsAndStatements)
    I32       reduce using rule 69 (expressionsAndStatements)
    I32A      reduce using rule 69 (expressionsAndStatements)
    I64       reduce using rule 69 (expressionsAndStatements)
    I64A      reduce using rule 69 (expressionsAndStatements)
    IDENT     reduce using rule 69 (expressionsAndStatements)
    IF        reduce using rule 69 (expressionsAndStatements)
    INT       reduce using rule 69 (expressionsAndStatements)
    RBRACE    reduce using rule 69 (expressionsAndStatements)
    SFUNC     reduce using rule 69 (expressionsAndStatements)
    SPACKAGE  reduce using rule 69 (expressionsAndStatements)
    SSTRUCT   reduce using rule 69 (expressionsAndStatements)
    STEP      reduce using rule 69 (expressionsAndStatements)
    STR       reduce using rule 69 (expressionsAndStatements)
    STRING    reduce using rule 69 (expressionsAndStatements)
    VAR       reduce using rule 69 (expressionsAndStatements)
    WHILE     reduce using rule 69 (expressionsAndStatements)

state 49 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN [AFF]

   70 expressionsAndStatements: debugging .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 70 (expressionsAndStatements)
    BOOL      reduce using rule 70 (expressionsAndStatements)
    BOOLA     reduce using rule 70 (expressionsAndStatements)
    BYTE      reduce using rule 70 (expressionsAndStatements)
    BYTEA     reduce using rule 70 (expressionsAndStatements)
    DPROGRAM  reduce using rule 70 (expressionsAndStatements)
    DSTACK    reduce using rule 70 (expressionsAndStatements)
    F32       reduce using rule 70 (expressionsAndStatements)
    F32A      reduce using rule 70 (expressionsAndStatements)
    F64       reduce using rule 70 (expressionsAndStatements)
    F64A      reduce using rule 70 (expressionsAndStatements)
    FLOAT     reduce using rule 70 (expressionsAndStatements)
    I32       reduce using rule 70 (expressionsAndStatements)
    I32A      reduce using rule 70 (expressionsAndStatements)
    I64       reduce using rule 70 (expressionsAndStatements)
    I64A      reduce using rule 70 (expressionsAndStatements)
    IDENT     reduce using rule 70 (expressionsAndStatements)
    IF        reduce using rule 70 (expressionsAndStatements)
    INT       reduce using rule 70 (expressionsAndStatements)
    RBRACE    reduce using rule 70 (expressionsAndStatements)
    SFUNC     reduce using rule 70 (expressionsAndStatements)
    SPACKAGE  reduce using rule 70 (expressionsAndStatements)
    SSTRUCT   reduce using rule 70 (expressionsAndStatements)
    STEP      reduce using rule 70 (expressionsAndStatements)
    STR       reduce using rule 70 (expressionsAndStatements)
    STRING    reduce using rule 70 (expressionsAndStatements)
    VAR       reduce using rule 70 (expressionsAndStatements)
    WHILE     reduce using rule 70 (expressionsAndStatements)

state 50 // SFUNC IDENT LBRACE AFF FUNC IDENT [AFF]

   71 expressionsAndStatements: affordance .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 71 (expressionsAndStatements)
    BOOL      reduce using rule 71 (expressionsAndStatements)
    BOOLA     reduce using rule 71 (expressionsAndStatements)
    BYTE      reduce using rule 71 (expressionsAndStatements)
    BYTEA     reduce using rule 71 (expressionsAndStatements)
    DPROGRAM  reduce using rule 71 (expressionsAndStatements)
    DSTACK    reduce using rule 71 (expressionsAndStatements)
    F32       reduce using rule 71 (expressionsAndStatements)
    F32A      reduce using rule 71 (expressionsAndStatements)
    F64       reduce using rule 71 (expressionsAndStatements)
    F64A      reduce using rule 71 (expressionsAndStatements)
    FLOAT     reduce using rule 71 (expressionsAndStatements)
    I32       reduce using rule 71 (expressionsAndStatements)
    I32A      reduce using rule 71 (expressionsAndStatements)
    I64       reduce using rule 71 (expressionsAndStatements)
    I64A      reduce using rule 71 (expressionsAndStatements)
    IDENT     reduce using rule 71 (expressionsAndStatements)
    IF        reduce using rule 71 (expressionsAndStatements)
    INT       reduce using rule 71 (expressionsAndStatements)
    RBRACE    reduce using rule 71 (expressionsAndStatements)
    SFUNC     reduce using rule 71 (expressionsAndStatements)
    SPACKAGE  reduce using rule 71 (expressionsAndStatements)
    SSTRUCT   reduce using rule 71 (expressionsAndStatements)
    STEP      reduce using rule 71 (expressionsAndStatements)
    STR       reduce using rule 71 (expressionsAndStatements)
    STRING    reduce using rule 71 (expressionsAndStatements)
    VAR       reduce using rule 71 (expressionsAndStatements)
    WHILE     reduce using rule 71 (expressionsAndStatements)

state 51 // SFUNC IDENT LBRACE VAR

   79 assignExpression: VAR . IDENT typeSpecifier definitionAssignment
  100 statement: VAR . IDENT IDENT

    IDENT  shift, and goto state 130

state 52 // SFUNC IDENT LBRACE FLOAT [ASSIGN]

   80 assignExpression: argumentsList . assignOperator IDENT arguments
  118 argumentsList: argumentsList . COMMA argument
  119 argumentsList: argumentsList . COMMA nonAssignExpression

    ASSIGN   shift, and goto state 125
    CASSIGN  shift, and goto state 126
    COMMA    shift, and goto state 65

    assignOperator  goto state 127

state 53 // SFUNC IDENT LBRACE IDENT

   81 nonAssignExpression: IDENT . arguments
  112 argument: IDENT .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 112 (argument)
    CASSIGN  reduce using rule 112 (argument)
    COMMA    reduce using rule 112 (argument)
    LPAREN   shift, and goto state 90
    RBRACE   reduce using rule 112 (argument)
    RPAREN   reduce using rule 112 (argument)

    arguments  goto state 88

state 54 // SFUNC IDENT LBRACE IF

   84 statement: IF . nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements RBRACE elseStatement
   87 statement: IF . IDENT $@8 LBRACE $@9 expressionsAndStatements RBRACE elseStatement
   90 statement: IF . BOOLEAN $@10 LBRACE $@11 expressionsAndStatements RBRACE elseStatement

    BOOLEAN  shift, and goto state 100
    IDENT    shift, and goto state 98

    nonAssignExpression  goto state 99

state 55 // SFUNC IDENT LBRACE WHILE

   93 statement: WHILE . nonAssignExpression $@12 LBRACE $@13 expressionsAndStatements RBRACE
   96 statement: WHILE . IDENT $@14 LBRACE $@15 expressionsAndStatements RBRACE
   99 statement: WHILE . BOOLEAN $@16 LBRACE $@17 expressionsAndStatements RBRACE

    BOOLEAN  shift, and goto state 70
    IDENT    shift, and goto state 68

    nonAssignExpression  goto state 69

state 56 // SFUNC IDENT LBRACE INT

  109 argument: INT .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 109 (argument)
    AFF        reduce using rule 109 (argument)
    ASSIGN     reduce using rule 109 (argument)
    BOOL       reduce using rule 109 (argument)
    BOOLA      reduce using rule 109 (argument)
    BYTE       reduce using rule 109 (argument)
    BYTEA      reduce using rule 109 (argument)
    CASSIGN    reduce using rule 109 (argument)
    COMMA      reduce using rule 109 (argument)
    DPROGRAM   reduce using rule 109 (argument)
    DSTACK     reduce using rule 109 (argument)
    F32        reduce using rule 109 (argument)
    F32A       reduce using rule 109 (argument)
    F64        reduce using rule 109 (argument)
    F64A       reduce using rule 109 (argument)
    FLOAT      reduce using rule 109 (argument)
    FUNC       reduce using rule 109 (argument)
    I32        reduce using rule 109 (argument)
    I32A       reduce using rule 109 (argument)
    I64        reduce using rule 109 (argument)
    I64A       reduce using rule 109 (argument)
    IDENT      reduce using rule 109 (argument)
    IF         reduce using rule 109 (argument)
    INT        reduce using rule 109 (argument)
    PACKAGE    reduce using rule 109 (argument)
    RBRACE     reduce using rule 109 (argument)
    RPAREN     reduce using rule 109 (argument)
    SFUNC      reduce using rule 109 (argument)
    SPACKAGE   reduce using rule 109 (argument)
    SSTRUCT    reduce using rule 109 (argument)
    STEP       reduce using rule 109 (argument)
    STR        reduce using rule 109 (argument)
    STRING     reduce using rule 109 (argument)
    TYPSTRUCT  reduce using rule 109 (argument)
    VAR        reduce using rule 109 (argument)
    WHILE      reduce using rule 109 (argument)

state 57 // SFUNC IDENT LBRACE FLOAT

  110 argument: FLOAT .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 110 (argument)
    AFF        reduce using rule 110 (argument)
    ASSIGN     reduce using rule 110 (argument)
    BOOL       reduce using rule 110 (argument)
    BOOLA      reduce using rule 110 (argument)
    BYTE       reduce using rule 110 (argument)
    BYTEA      reduce using rule 110 (argument)
    CASSIGN    reduce using rule 110 (argument)
    COMMA      reduce using rule 110 (argument)
    DPROGRAM   reduce using rule 110 (argument)
    DSTACK     reduce using rule 110 (argument)
    F32        reduce using rule 110 (argument)
    F32A       reduce using rule 110 (argument)
    F64        reduce using rule 110 (argument)
    F64A       reduce using rule 110 (argument)
    FLOAT      reduce using rule 110 (argument)
    FUNC       reduce using rule 110 (argument)
    I32        reduce using rule 110 (argument)
    I32A       reduce using rule 110 (argument)
    I64        reduce using rule 110 (argument)
    I64A       reduce using rule 110 (argument)
    IDENT      reduce using rule 110 (argument)
    IF         reduce using rule 110 (argument)
    INT        reduce using rule 110 (argument)
    PACKAGE    reduce using rule 110 (argument)
    RBRACE     reduce using rule 110 (argument)
    RPAREN     reduce using rule 110 (argument)
    SFUNC      reduce using rule 110 (argument)
    SPACKAGE   reduce using rule 110 (argument)
    SSTRUCT    reduce using rule 110 (argument)
    STEP       reduce using rule 110 (argument)
    STR        reduce using rule 110 (argument)
    STRING     reduce using rule 110 (argument)
    TYPSTRUCT  reduce using rule 110 (argument)
    VAR        reduce using rule 110 (argument)
    WHILE      reduce using rule 110 (argument)

state 58 // SFUNC IDENT LBRACE STRING

  111 argument: STRING .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 111 (argument)
    AFF        reduce using rule 111 (argument)
    ASSIGN     reduce using rule 111 (argument)
    BOOL       reduce using rule 111 (argument)
    BOOLA      reduce using rule 111 (argument)
    BYTE       reduce using rule 111 (argument)
    BYTEA      reduce using rule 111 (argument)
    CASSIGN    reduce using rule 111 (argument)
    COMMA      reduce using rule 111 (argument)
    DPROGRAM   reduce using rule 111 (argument)
    DSTACK     reduce using rule 111 (argument)
    F32        reduce using rule 111 (argument)
    F32A       reduce using rule 111 (argument)
    F64        reduce using rule 111 (argument)
    F64A       reduce using rule 111 (argument)
    FLOAT      reduce using rule 111 (argument)
    FUNC       reduce using rule 111 (argument)
    I32        reduce using rule 111 (argument)
    I32A       reduce using rule 111 (argument)
    I64        reduce using rule 111 (argument)
    I64A       reduce using rule 111 (argument)
    IDENT      reduce using rule 111 (argument)
    IF         reduce using rule 111 (argument)
    INT        reduce using rule 111 (argument)
    PACKAGE    reduce using rule 111 (argument)
    RBRACE     reduce using rule 111 (argument)
    RPAREN     reduce using rule 111 (argument)
    SFUNC      reduce using rule 111 (argument)
    SPACKAGE   reduce using rule 111 (argument)
    SSTRUCT    reduce using rule 111 (argument)
    STEP       reduce using rule 111 (argument)
    STR        reduce using rule 111 (argument)
    STRING     reduce using rule 111 (argument)
    TYPSTRUCT  reduce using rule 111 (argument)
    VAR        reduce using rule 111 (argument)
    WHILE      reduce using rule 111 (argument)

state 59 // SFUNC IDENT LBRACE BOOL [LBRACE]

  113 argument: typeSpecifier . LBRACE argumentsList RBRACE

    LBRACE  shift, and goto state 61

state 60 // SFUNC IDENT LBRACE FLOAT [ASSIGN]

  116 argumentsList: argument .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 116 (argumentsList)
    CASSIGN  reduce using rule 116 (argumentsList)
    COMMA    reduce using rule 116 (argumentsList)
    RBRACE   reduce using rule 116 (argumentsList)
    RPAREN   reduce using rule 116 (argumentsList)

state 61 // SFUNC IDENT LBRACE BOOL LBRACE

  113 argument: typeSpecifier LBRACE . argumentsList RBRACE

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 53
    INT     shift, and goto state 56
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument             goto state 60
    argumentsList        goto state 62
    nonAssignExpression  goto state 63
    typeSpecifier        goto state 59

state 62 // SFUNC IDENT LBRACE BOOL LBRACE FLOAT [COMMA]

  113 argument: typeSpecifier LBRACE argumentsList . RBRACE
  118 argumentsList: argumentsList . COMMA argument
  119 argumentsList: argumentsList . COMMA nonAssignExpression

    COMMA   shift, and goto state 65
    RBRACE  shift, and goto state 64

state 63 // SFUNC IDENT LBRACE BOOL LBRACE IDENT LPAREN RPAREN [COMMA]

  117 argumentsList: nonAssignExpression .  [COMMA, RBRACE, RPAREN]

    COMMA   reduce using rule 117 (argumentsList)
    RBRACE  reduce using rule 117 (argumentsList)
    RPAREN  reduce using rule 117 (argumentsList)

state 64 // SFUNC IDENT LBRACE BOOL LBRACE FLOAT RBRACE

  113 argument: typeSpecifier LBRACE argumentsList RBRACE .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 113 (argument)
    AFF        reduce using rule 113 (argument)
    ASSIGN     reduce using rule 113 (argument)
    BOOL       reduce using rule 113 (argument)
    BOOLA      reduce using rule 113 (argument)
    BYTE       reduce using rule 113 (argument)
    BYTEA      reduce using rule 113 (argument)
    CASSIGN    reduce using rule 113 (argument)
    COMMA      reduce using rule 113 (argument)
    DPROGRAM   reduce using rule 113 (argument)
    DSTACK     reduce using rule 113 (argument)
    F32        reduce using rule 113 (argument)
    F32A       reduce using rule 113 (argument)
    F64        reduce using rule 113 (argument)
    F64A       reduce using rule 113 (argument)
    FLOAT      reduce using rule 113 (argument)
    FUNC       reduce using rule 113 (argument)
    I32        reduce using rule 113 (argument)
    I32A       reduce using rule 113 (argument)
    I64        reduce using rule 113 (argument)
    I64A       reduce using rule 113 (argument)
    IDENT      reduce using rule 113 (argument)
    IF         reduce using rule 113 (argument)
    INT        reduce using rule 113 (argument)
    PACKAGE    reduce using rule 113 (argument)
    RBRACE     reduce using rule 113 (argument)
    RPAREN     reduce using rule 113 (argument)
    SFUNC      reduce using rule 113 (argument)
    SPACKAGE   reduce using rule 113 (argument)
    SSTRUCT    reduce using rule 113 (argument)
    STEP       reduce using rule 113 (argument)
    STR        reduce using rule 113 (argument)
    STRING     reduce using rule 113 (argument)
    TYPSTRUCT  reduce using rule 113 (argument)
    VAR        reduce using rule 113 (argument)
    WHILE      reduce using rule 113 (argument)

state 65 // SFUNC IDENT LBRACE FLOAT COMMA

  118 argumentsList: argumentsList COMMA . argument
  119 argumentsList: argumentsList COMMA . nonAssignExpression

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 53
    INT     shift, and goto state 56
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument             goto state 66
    nonAssignExpression  goto state 67
    typeSpecifier        goto state 59

state 66 // SFUNC IDENT LBRACE FLOAT COMMA FLOAT [ASSIGN]

  118 argumentsList: argumentsList COMMA argument .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 118 (argumentsList)
    CASSIGN  reduce using rule 118 (argumentsList)
    COMMA    reduce using rule 118 (argumentsList)
    RBRACE   reduce using rule 118 (argumentsList)
    RPAREN   reduce using rule 118 (argumentsList)

state 67 // SFUNC IDENT LBRACE FLOAT COMMA IDENT LPAREN RPAREN [ASSIGN]

  119 argumentsList: argumentsList COMMA nonAssignExpression .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 119 (argumentsList)
    CASSIGN  reduce using rule 119 (argumentsList)
    COMMA    reduce using rule 119 (argumentsList)
    RBRACE   reduce using rule 119 (argumentsList)
    RPAREN   reduce using rule 119 (argumentsList)

state 68 // SFUNC IDENT LBRACE WHILE IDENT

   81 nonAssignExpression: IDENT . arguments
   96 statement: WHILE IDENT . $@14 LBRACE $@15 expressionsAndStatements RBRACE
   94 $@14: .  [LBRACE]

    LBRACE  reduce using rule 94 ($@14)
    LPAREN  shift, and goto state 90

    $@14       goto state 89
    arguments  goto state 88

state 69 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN [LBRACE]

   93 statement: WHILE nonAssignExpression . $@12 LBRACE $@13 expressionsAndStatements RBRACE
   91 $@12: .  [LBRACE]

    LBRACE  reduce using rule 91 ($@12)

    $@12  goto state 83

state 70 // SFUNC IDENT LBRACE WHILE BOOLEAN

   99 statement: WHILE BOOLEAN . $@16 LBRACE $@17 expressionsAndStatements RBRACE
   97 $@16: .  [LBRACE]

    LBRACE  reduce using rule 97 ($@16)

    $@16  goto state 71

state 71 // SFUNC IDENT LBRACE WHILE BOOLEAN [LBRACE]

   99 statement: WHILE BOOLEAN $@16 . LBRACE $@17 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 72

state 72 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE

   99 statement: WHILE BOOLEAN $@16 LBRACE . $@17 expressionsAndStatements RBRACE
   98 $@17: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 98 ($@17)
    BOOL      reduce using rule 98 ($@17)
    BOOLA     reduce using rule 98 ($@17)
    BYTE      reduce using rule 98 ($@17)
    BYTEA     reduce using rule 98 ($@17)
    DPROGRAM  reduce using rule 98 ($@17)
    DSTACK    reduce using rule 98 ($@17)
    F32       reduce using rule 98 ($@17)
    F32A      reduce using rule 98 ($@17)
    F64       reduce using rule 98 ($@17)
    F64A      reduce using rule 98 ($@17)
    FLOAT     reduce using rule 98 ($@17)
    I32       reduce using rule 98 ($@17)
    I32A      reduce using rule 98 ($@17)
    I64       reduce using rule 98 ($@17)
    I64A      reduce using rule 98 ($@17)
    IDENT     reduce using rule 98 ($@17)
    IF        reduce using rule 98 ($@17)
    INT       reduce using rule 98 ($@17)
    SFUNC     reduce using rule 98 ($@17)
    SPACKAGE  reduce using rule 98 ($@17)
    SSTRUCT   reduce using rule 98 ($@17)
    STEP      reduce using rule 98 ($@17)
    STR       reduce using rule 98 ($@17)
    STRING    reduce using rule 98 ($@17)
    VAR       reduce using rule 98 ($@17)
    WHILE     reduce using rule 98 ($@17)

    $@17  goto state 73

state 73 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE [AFF]

   99 statement: WHILE BOOLEAN $@16 LBRACE $@17 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 74
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 74 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
   99 statement: WHILE BOOLEAN $@16 LBRACE $@17 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 82
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 75 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN IDENT LPAREN RPAREN [AFF]

   72 expressionsAndStatements: expressionsAndStatements nonAssignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]
  117 argumentsList: nonAssignExpression .  [ASSIGN, CASSIGN, COMMA]

    AFF       reduce using rule 72 (expressionsAndStatements)
    ASSIGN    reduce using rule 117 (argumentsList)
    BOOL      reduce using rule 72 (expressionsAndStatements)
    BOOLA     reduce using rule 72 (expressionsAndStatements)
    BYTE      reduce using rule 72 (expressionsAndStatements)
    BYTEA     reduce using rule 72 (expressionsAndStatements)
    CASSIGN   reduce using rule 117 (argumentsList)
    COMMA     reduce using rule 117 (argumentsList)
    DPROGRAM  reduce using rule 72 (expressionsAndStatements)
    DSTACK    reduce using rule 72 (expressionsAndStatements)
    F32       reduce using rule 72 (expressionsAndStatements)
    F32A      reduce using rule 72 (expressionsAndStatements)
    F64       reduce using rule 72 (expressionsAndStatements)
    F64A      reduce using rule 72 (expressionsAndStatements)
    FLOAT     reduce using rule 72 (expressionsAndStatements)
    I32       reduce using rule 72 (expressionsAndStatements)
    I32A      reduce using rule 72 (expressionsAndStatements)
    I64       reduce using rule 72 (expressionsAndStatements)
    I64A      reduce using rule 72 (expressionsAndStatements)
    IDENT     reduce using rule 72 (expressionsAndStatements)
    IF        reduce using rule 72 (expressionsAndStatements)
    INT       reduce using rule 72 (expressionsAndStatements)
    RBRACE    reduce using rule 72 (expressionsAndStatements)
    SFUNC     reduce using rule 72 (expressionsAndStatements)
    SPACKAGE  reduce using rule 72 (expressionsAndStatements)
    SSTRUCT   reduce using rule 72 (expressionsAndStatements)
    STEP      reduce using rule 72 (expressionsAndStatements)
    STR       reduce using rule 72 (expressionsAndStatements)
    STRING    reduce using rule 72 (expressionsAndStatements)
    VAR       reduce using rule 72 (expressionsAndStatements)
    WHILE     reduce using rule 72 (expressionsAndStatements)

state 76 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN VAR IDENT BOOL [AFF]

   73 expressionsAndStatements: expressionsAndStatements assignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 73 (expressionsAndStatements)
    BOOL      reduce using rule 73 (expressionsAndStatements)
    BOOLA     reduce using rule 73 (expressionsAndStatements)
    BYTE      reduce using rule 73 (expressionsAndStatements)
    BYTEA     reduce using rule 73 (expressionsAndStatements)
    DPROGRAM  reduce using rule 73 (expressionsAndStatements)
    DSTACK    reduce using rule 73 (expressionsAndStatements)
    F32       reduce using rule 73 (expressionsAndStatements)
    F32A      reduce using rule 73 (expressionsAndStatements)
    F64       reduce using rule 73 (expressionsAndStatements)
    F64A      reduce using rule 73 (expressionsAndStatements)
    FLOAT     reduce using rule 73 (expressionsAndStatements)
    I32       reduce using rule 73 (expressionsAndStatements)
    I32A      reduce using rule 73 (expressionsAndStatements)
    I64       reduce using rule 73 (expressionsAndStatements)
    I64A      reduce using rule 73 (expressionsAndStatements)
    IDENT     reduce using rule 73 (expressionsAndStatements)
    IF        reduce using rule 73 (expressionsAndStatements)
    INT       reduce using rule 73 (expressionsAndStatements)
    RBRACE    reduce using rule 73 (expressionsAndStatements)
    SFUNC     reduce using rule 73 (expressionsAndStatements)
    SPACKAGE  reduce using rule 73 (expressionsAndStatements)
    SSTRUCT   reduce using rule 73 (expressionsAndStatements)
    STEP      reduce using rule 73 (expressionsAndStatements)
    STR       reduce using rule 73 (expressionsAndStatements)
    STRING    reduce using rule 73 (expressionsAndStatements)
    VAR       reduce using rule 73 (expressionsAndStatements)
    WHILE     reduce using rule 73 (expressionsAndStatements)

state 77 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN VAR IDENT IDENT [AFF]

   74 expressionsAndStatements: expressionsAndStatements statement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 74 (expressionsAndStatements)
    BOOL      reduce using rule 74 (expressionsAndStatements)
    BOOLA     reduce using rule 74 (expressionsAndStatements)
    BYTE      reduce using rule 74 (expressionsAndStatements)
    BYTEA     reduce using rule 74 (expressionsAndStatements)
    DPROGRAM  reduce using rule 74 (expressionsAndStatements)
    DSTACK    reduce using rule 74 (expressionsAndStatements)
    F32       reduce using rule 74 (expressionsAndStatements)
    F32A      reduce using rule 74 (expressionsAndStatements)
    F64       reduce using rule 74 (expressionsAndStatements)
    F64A      reduce using rule 74 (expressionsAndStatements)
    FLOAT     reduce using rule 74 (expressionsAndStatements)
    I32       reduce using rule 74 (expressionsAndStatements)
    I32A      reduce using rule 74 (expressionsAndStatements)
    I64       reduce using rule 74 (expressionsAndStatements)
    I64A      reduce using rule 74 (expressionsAndStatements)
    IDENT     reduce using rule 74 (expressionsAndStatements)
    IF        reduce using rule 74 (expressionsAndStatements)
    INT       reduce using rule 74 (expressionsAndStatements)
    RBRACE    reduce using rule 74 (expressionsAndStatements)
    SFUNC     reduce using rule 74 (expressionsAndStatements)
    SPACKAGE  reduce using rule 74 (expressionsAndStatements)
    SSTRUCT   reduce using rule 74 (expressionsAndStatements)
    STEP      reduce using rule 74 (expressionsAndStatements)
    STR       reduce using rule 74 (expressionsAndStatements)
    STRING    reduce using rule 74 (expressionsAndStatements)
    VAR       reduce using rule 74 (expressionsAndStatements)
    WHILE     reduce using rule 74 (expressionsAndStatements)

state 78 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN SFUNC IDENT [AFF]

   75 expressionsAndStatements: expressionsAndStatements selector .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 75 (expressionsAndStatements)
    BOOL      reduce using rule 75 (expressionsAndStatements)
    BOOLA     reduce using rule 75 (expressionsAndStatements)
    BYTE      reduce using rule 75 (expressionsAndStatements)
    BYTEA     reduce using rule 75 (expressionsAndStatements)
    DPROGRAM  reduce using rule 75 (expressionsAndStatements)
    DSTACK    reduce using rule 75 (expressionsAndStatements)
    F32       reduce using rule 75 (expressionsAndStatements)
    F32A      reduce using rule 75 (expressionsAndStatements)
    F64       reduce using rule 75 (expressionsAndStatements)
    F64A      reduce using rule 75 (expressionsAndStatements)
    FLOAT     reduce using rule 75 (expressionsAndStatements)
    I32       reduce using rule 75 (expressionsAndStatements)
    I32A      reduce using rule 75 (expressionsAndStatements)
    I64       reduce using rule 75 (expressionsAndStatements)
    I64A      reduce using rule 75 (expressionsAndStatements)
    IDENT     reduce using rule 75 (expressionsAndStatements)
    IF        reduce using rule 75 (expressionsAndStatements)
    INT       reduce using rule 75 (expressionsAndStatements)
    RBRACE    reduce using rule 75 (expressionsAndStatements)
    SFUNC     reduce using rule 75 (expressionsAndStatements)
    SPACKAGE  reduce using rule 75 (expressionsAndStatements)
    SSTRUCT   reduce using rule 75 (expressionsAndStatements)
    STEP      reduce using rule 75 (expressionsAndStatements)
    STR       reduce using rule 75 (expressionsAndStatements)
    STRING    reduce using rule 75 (expressionsAndStatements)
    VAR       reduce using rule 75 (expressionsAndStatements)
    WHILE     reduce using rule 75 (expressionsAndStatements)

state 79 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN STEP INT [AFF]

   76 expressionsAndStatements: expressionsAndStatements stepping .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 76 (expressionsAndStatements)
    BOOL      reduce using rule 76 (expressionsAndStatements)
    BOOLA     reduce using rule 76 (expressionsAndStatements)
    BYTE      reduce using rule 76 (expressionsAndStatements)
    BYTEA     reduce using rule 76 (expressionsAndStatements)
    DPROGRAM  reduce using rule 76 (expressionsAndStatements)
    DSTACK    reduce using rule 76 (expressionsAndStatements)
    F32       reduce using rule 76 (expressionsAndStatements)
    F32A      reduce using rule 76 (expressionsAndStatements)
    F64       reduce using rule 76 (expressionsAndStatements)
    F64A      reduce using rule 76 (expressionsAndStatements)
    FLOAT     reduce using rule 76 (expressionsAndStatements)
    I32       reduce using rule 76 (expressionsAndStatements)
    I32A      reduce using rule 76 (expressionsAndStatements)
    I64       reduce using rule 76 (expressionsAndStatements)
    I64A      reduce using rule 76 (expressionsAndStatements)
    IDENT     reduce using rule 76 (expressionsAndStatements)
    IF        reduce using rule 76 (expressionsAndStatements)
    INT       reduce using rule 76 (expressionsAndStatements)
    RBRACE    reduce using rule 76 (expressionsAndStatements)
    SFUNC     reduce using rule 76 (expressionsAndStatements)
    SPACKAGE  reduce using rule 76 (expressionsAndStatements)
    SSTRUCT   reduce using rule 76 (expressionsAndStatements)
    STEP      reduce using rule 76 (expressionsAndStatements)
    STR       reduce using rule 76 (expressionsAndStatements)
    STRING    reduce using rule 76 (expressionsAndStatements)
    VAR       reduce using rule 76 (expressionsAndStatements)
    WHILE     reduce using rule 76 (expressionsAndStatements)

state 80 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN DPROGRAM BOOLEAN [AFF]

   77 expressionsAndStatements: expressionsAndStatements debugging .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 77 (expressionsAndStatements)
    BOOL      reduce using rule 77 (expressionsAndStatements)
    BOOLA     reduce using rule 77 (expressionsAndStatements)
    BYTE      reduce using rule 77 (expressionsAndStatements)
    BYTEA     reduce using rule 77 (expressionsAndStatements)
    DPROGRAM  reduce using rule 77 (expressionsAndStatements)
    DSTACK    reduce using rule 77 (expressionsAndStatements)
    F32       reduce using rule 77 (expressionsAndStatements)
    F32A      reduce using rule 77 (expressionsAndStatements)
    F64       reduce using rule 77 (expressionsAndStatements)
    F64A      reduce using rule 77 (expressionsAndStatements)
    FLOAT     reduce using rule 77 (expressionsAndStatements)
    I32       reduce using rule 77 (expressionsAndStatements)
    I32A      reduce using rule 77 (expressionsAndStatements)
    I64       reduce using rule 77 (expressionsAndStatements)
    I64A      reduce using rule 77 (expressionsAndStatements)
    IDENT     reduce using rule 77 (expressionsAndStatements)
    IF        reduce using rule 77 (expressionsAndStatements)
    INT       reduce using rule 77 (expressionsAndStatements)
    RBRACE    reduce using rule 77 (expressionsAndStatements)
    SFUNC     reduce using rule 77 (expressionsAndStatements)
    SPACKAGE  reduce using rule 77 (expressionsAndStatements)
    SSTRUCT   reduce using rule 77 (expressionsAndStatements)
    STEP      reduce using rule 77 (expressionsAndStatements)
    STR       reduce using rule 77 (expressionsAndStatements)
    STRING    reduce using rule 77 (expressionsAndStatements)
    VAR       reduce using rule 77 (expressionsAndStatements)
    WHILE     reduce using rule 77 (expressionsAndStatements)

state 81 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN AFF FUNC IDENT [AFF]

   78 expressionsAndStatements: expressionsAndStatements affordance .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 78 (expressionsAndStatements)
    BOOL      reduce using rule 78 (expressionsAndStatements)
    BOOLA     reduce using rule 78 (expressionsAndStatements)
    BYTE      reduce using rule 78 (expressionsAndStatements)
    BYTEA     reduce using rule 78 (expressionsAndStatements)
    DPROGRAM  reduce using rule 78 (expressionsAndStatements)
    DSTACK    reduce using rule 78 (expressionsAndStatements)
    F32       reduce using rule 78 (expressionsAndStatements)
    F32A      reduce using rule 78 (expressionsAndStatements)
    F64       reduce using rule 78 (expressionsAndStatements)
    F64A      reduce using rule 78 (expressionsAndStatements)
    FLOAT     reduce using rule 78 (expressionsAndStatements)
    I32       reduce using rule 78 (expressionsAndStatements)
    I32A      reduce using rule 78 (expressionsAndStatements)
    I64       reduce using rule 78 (expressionsAndStatements)
    I64A      reduce using rule 78 (expressionsAndStatements)
    IDENT     reduce using rule 78 (expressionsAndStatements)
    IF        reduce using rule 78 (expressionsAndStatements)
    INT       reduce using rule 78 (expressionsAndStatements)
    RBRACE    reduce using rule 78 (expressionsAndStatements)
    SFUNC     reduce using rule 78 (expressionsAndStatements)
    SPACKAGE  reduce using rule 78 (expressionsAndStatements)
    SSTRUCT   reduce using rule 78 (expressionsAndStatements)
    STEP      reduce using rule 78 (expressionsAndStatements)
    STR       reduce using rule 78 (expressionsAndStatements)
    STRING    reduce using rule 78 (expressionsAndStatements)
    VAR       reduce using rule 78 (expressionsAndStatements)
    WHILE     reduce using rule 78 (expressionsAndStatements)

state 82 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE

   99 statement: WHILE BOOLEAN $@16 LBRACE $@17 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 99 (statement)
    BOOL      reduce using rule 99 (statement)
    BOOLA     reduce using rule 99 (statement)
    BYTE      reduce using rule 99 (statement)
    BYTEA     reduce using rule 99 (statement)
    DPROGRAM  reduce using rule 99 (statement)
    DSTACK    reduce using rule 99 (statement)
    F32       reduce using rule 99 (statement)
    F32A      reduce using rule 99 (statement)
    F64       reduce using rule 99 (statement)
    F64A      reduce using rule 99 (statement)
    FLOAT     reduce using rule 99 (statement)
    I32       reduce using rule 99 (statement)
    I32A      reduce using rule 99 (statement)
    I64       reduce using rule 99 (statement)
    I64A      reduce using rule 99 (statement)
    IDENT     reduce using rule 99 (statement)
    IF        reduce using rule 99 (statement)
    INT       reduce using rule 99 (statement)
    RBRACE    reduce using rule 99 (statement)
    SFUNC     reduce using rule 99 (statement)
    SPACKAGE  reduce using rule 99 (statement)
    SSTRUCT   reduce using rule 99 (statement)
    STEP      reduce using rule 99 (statement)
    STR       reduce using rule 99 (statement)
    STRING    reduce using rule 99 (statement)
    VAR       reduce using rule 99 (statement)
    WHILE     reduce using rule 99 (statement)

state 83 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN [LBRACE]

   93 statement: WHILE nonAssignExpression $@12 . LBRACE $@13 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 84

state 84 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE

   93 statement: WHILE nonAssignExpression $@12 LBRACE . $@13 expressionsAndStatements RBRACE
   92 $@13: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 92 ($@13)
    BOOL      reduce using rule 92 ($@13)
    BOOLA     reduce using rule 92 ($@13)
    BYTE      reduce using rule 92 ($@13)
    BYTEA     reduce using rule 92 ($@13)
    DPROGRAM  reduce using rule 92 ($@13)
    DSTACK    reduce using rule 92 ($@13)
    F32       reduce using rule 92 ($@13)
    F32A      reduce using rule 92 ($@13)
    F64       reduce using rule 92 ($@13)
    F64A      reduce using rule 92 ($@13)
    FLOAT     reduce using rule 92 ($@13)
    I32       reduce using rule 92 ($@13)
    I32A      reduce using rule 92 ($@13)
    I64       reduce using rule 92 ($@13)
    I64A      reduce using rule 92 ($@13)
    IDENT     reduce using rule 92 ($@13)
    IF        reduce using rule 92 ($@13)
    INT       reduce using rule 92 ($@13)
    SFUNC     reduce using rule 92 ($@13)
    SPACKAGE  reduce using rule 92 ($@13)
    SSTRUCT   reduce using rule 92 ($@13)
    STEP      reduce using rule 92 ($@13)
    STR       reduce using rule 92 ($@13)
    STRING    reduce using rule 92 ($@13)
    VAR       reduce using rule 92 ($@13)
    WHILE     reduce using rule 92 ($@13)

    $@13  goto state 85

state 85 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE [AFF]

   93 statement: WHILE nonAssignExpression $@12 LBRACE $@13 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 86
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 86 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
   93 statement: WHILE nonAssignExpression $@12 LBRACE $@13 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 87
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 87 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE DPROGRAM BOOLEAN RBRACE

   93 statement: WHILE nonAssignExpression $@12 LBRACE $@13 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 93 (statement)
    BOOL      reduce using rule 93 (statement)
    BOOLA     reduce using rule 93 (statement)
    BYTE      reduce using rule 93 (statement)
    BYTEA     reduce using rule 93 (statement)
    DPROGRAM  reduce using rule 93 (statement)
    DSTACK    reduce using rule 93 (statement)
    F32       reduce using rule 93 (statement)
    F32A      reduce using rule 93 (statement)
    F64       reduce using rule 93 (statement)
    F64A      reduce using rule 93 (statement)
    FLOAT     reduce using rule 93 (statement)
    I32       reduce using rule 93 (statement)
    I32A      reduce using rule 93 (statement)
    I64       reduce using rule 93 (statement)
    I64A      reduce using rule 93 (statement)
    IDENT     reduce using rule 93 (statement)
    IF        reduce using rule 93 (statement)
    INT       reduce using rule 93 (statement)
    RBRACE    reduce using rule 93 (statement)
    SFUNC     reduce using rule 93 (statement)
    SPACKAGE  reduce using rule 93 (statement)
    SSTRUCT   reduce using rule 93 (statement)
    STEP      reduce using rule 93 (statement)
    STR       reduce using rule 93 (statement)
    STRING    reduce using rule 93 (statement)
    VAR       reduce using rule 93 (statement)
    WHILE     reduce using rule 93 (statement)

state 88 // SFUNC IDENT LBRACE IDENT LPAREN RPAREN [AFF]

   81 nonAssignExpression: IDENT arguments .  [AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 81 (nonAssignExpression)
    ASSIGN    reduce using rule 81 (nonAssignExpression)
    BOOL      reduce using rule 81 (nonAssignExpression)
    BOOLA     reduce using rule 81 (nonAssignExpression)
    BYTE      reduce using rule 81 (nonAssignExpression)
    BYTEA     reduce using rule 81 (nonAssignExpression)
    CASSIGN   reduce using rule 81 (nonAssignExpression)
    COMMA     reduce using rule 81 (nonAssignExpression)
    DPROGRAM  reduce using rule 81 (nonAssignExpression)
    DSTACK    reduce using rule 81 (nonAssignExpression)
    F32       reduce using rule 81 (nonAssignExpression)
    F32A      reduce using rule 81 (nonAssignExpression)
    F64       reduce using rule 81 (nonAssignExpression)
    F64A      reduce using rule 81 (nonAssignExpression)
    FLOAT     reduce using rule 81 (nonAssignExpression)
    I32       reduce using rule 81 (nonAssignExpression)
    I32A      reduce using rule 81 (nonAssignExpression)
    I64       reduce using rule 81 (nonAssignExpression)
    I64A      reduce using rule 81 (nonAssignExpression)
    IDENT     reduce using rule 81 (nonAssignExpression)
    IF        reduce using rule 81 (nonAssignExpression)
    INT       reduce using rule 81 (nonAssignExpression)
    LBRACE    reduce using rule 81 (nonAssignExpression)
    RBRACE    reduce using rule 81 (nonAssignExpression)
    RPAREN    reduce using rule 81 (nonAssignExpression)
    SFUNC     reduce using rule 81 (nonAssignExpression)
    SPACKAGE  reduce using rule 81 (nonAssignExpression)
    SSTRUCT   reduce using rule 81 (nonAssignExpression)
    STEP      reduce using rule 81 (nonAssignExpression)
    STR       reduce using rule 81 (nonAssignExpression)
    STRING    reduce using rule 81 (nonAssignExpression)
    VAR       reduce using rule 81 (nonAssignExpression)
    WHILE     reduce using rule 81 (nonAssignExpression)

state 89 // SFUNC IDENT LBRACE WHILE IDENT [LBRACE]

   96 statement: WHILE IDENT $@14 . LBRACE $@15 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 94

state 90 // SFUNC IDENT LBRACE IDENT LPAREN

  114 arguments: LPAREN . argumentsList RPAREN
  115 arguments: LPAREN . RPAREN

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 53
    INT     shift, and goto state 56
    RPAREN  shift, and goto state 92
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument             goto state 60
    argumentsList        goto state 91
    nonAssignExpression  goto state 63
    typeSpecifier        goto state 59

state 91 // SFUNC IDENT LBRACE IDENT LPAREN FLOAT [COMMA]

  114 arguments: LPAREN argumentsList . RPAREN
  118 argumentsList: argumentsList . COMMA argument
  119 argumentsList: argumentsList . COMMA nonAssignExpression

    COMMA   shift, and goto state 65
    RPAREN  shift, and goto state 93

state 92 // SFUNC IDENT LBRACE IDENT LPAREN RPAREN

  115 arguments: LPAREN RPAREN .  [AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 115 (arguments)
    ASSIGN    reduce using rule 115 (arguments)
    BOOL      reduce using rule 115 (arguments)
    BOOLA     reduce using rule 115 (arguments)
    BYTE      reduce using rule 115 (arguments)
    BYTEA     reduce using rule 115 (arguments)
    CASSIGN   reduce using rule 115 (arguments)
    COMMA     reduce using rule 115 (arguments)
    DPROGRAM  reduce using rule 115 (arguments)
    DSTACK    reduce using rule 115 (arguments)
    F32       reduce using rule 115 (arguments)
    F32A      reduce using rule 115 (arguments)
    F64       reduce using rule 115 (arguments)
    F64A      reduce using rule 115 (arguments)
    FLOAT     reduce using rule 115 (arguments)
    I32       reduce using rule 115 (arguments)
    I32A      reduce using rule 115 (arguments)
    I64       reduce using rule 115 (arguments)
    I64A      reduce using rule 115 (arguments)
    IDENT     reduce using rule 115 (arguments)
    IF        reduce using rule 115 (arguments)
    INT       reduce using rule 115 (arguments)
    LBRACE    reduce using rule 115 (arguments)
    RBRACE    reduce using rule 115 (arguments)
    RPAREN    reduce using rule 115 (arguments)
    SFUNC     reduce using rule 115 (arguments)
    SPACKAGE  reduce using rule 115 (arguments)
    SSTRUCT   reduce using rule 115 (arguments)
    STEP      reduce using rule 115 (arguments)
    STR       reduce using rule 115 (arguments)
    STRING    reduce using rule 115 (arguments)
    VAR       reduce using rule 115 (arguments)
    WHILE     reduce using rule 115 (arguments)

state 93 // SFUNC IDENT LBRACE IDENT LPAREN FLOAT RPAREN

  114 arguments: LPAREN argumentsList RPAREN .  [AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 114 (arguments)
    ASSIGN    reduce using rule 114 (arguments)
    BOOL      reduce using rule 114 (arguments)
    BOOLA     reduce using rule 114 (arguments)
    BYTE      reduce using rule 114 (arguments)
    BYTEA     reduce using rule 114 (arguments)
    CASSIGN   reduce using rule 114 (arguments)
    COMMA     reduce using rule 114 (arguments)
    DPROGRAM  reduce using rule 114 (arguments)
    DSTACK    reduce using rule 114 (arguments)
    F32       reduce using rule 114 (arguments)
    F32A      reduce using rule 114 (arguments)
    F64       reduce using rule 114 (arguments)
    F64A      reduce using rule 114 (arguments)
    FLOAT     reduce using rule 114 (arguments)
    I32       reduce using rule 114 (arguments)
    I32A      reduce using rule 114 (arguments)
    I64       reduce using rule 114 (arguments)
    I64A      reduce using rule 114 (arguments)
    IDENT     reduce using rule 114 (arguments)
    IF        reduce using rule 114 (arguments)
    INT       reduce using rule 114 (arguments)
    LBRACE    reduce using rule 114 (arguments)
    RBRACE    reduce using rule 114 (arguments)
    RPAREN    reduce using rule 114 (arguments)
    SFUNC     reduce using rule 114 (arguments)
    SPACKAGE  reduce using rule 114 (arguments)
    SSTRUCT   reduce using rule 114 (arguments)
    STEP      reduce using rule 114 (arguments)
    STR       reduce using rule 114 (arguments)
    STRING    reduce using rule 114 (arguments)
    VAR       reduce using rule 114 (arguments)
    WHILE     reduce using rule 114 (arguments)

state 94 // SFUNC IDENT LBRACE WHILE IDENT LBRACE

   96 statement: WHILE IDENT $@14 LBRACE . $@15 expressionsAndStatements RBRACE
   95 $@15: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 95 ($@15)
    BOOL      reduce using rule 95 ($@15)
    BOOLA     reduce using rule 95 ($@15)
    BYTE      reduce using rule 95 ($@15)
    BYTEA     reduce using rule 95 ($@15)
    DPROGRAM  reduce using rule 95 ($@15)
    DSTACK    reduce using rule 95 ($@15)
    F32       reduce using rule 95 ($@15)
    F32A      reduce using rule 95 ($@15)
    F64       reduce using rule 95 ($@15)
    F64A      reduce using rule 95 ($@15)
    FLOAT     reduce using rule 95 ($@15)
    I32       reduce using rule 95 ($@15)
    I32A      reduce using rule 95 ($@15)
    I64       reduce using rule 95 ($@15)
    I64A      reduce using rule 95 ($@15)
    IDENT     reduce using rule 95 ($@15)
    IF        reduce using rule 95 ($@15)
    INT       reduce using rule 95 ($@15)
    SFUNC     reduce using rule 95 ($@15)
    SPACKAGE  reduce using rule 95 ($@15)
    SSTRUCT   reduce using rule 95 ($@15)
    STEP      reduce using rule 95 ($@15)
    STR       reduce using rule 95 ($@15)
    STRING    reduce using rule 95 ($@15)
    VAR       reduce using rule 95 ($@15)
    WHILE     reduce using rule 95 ($@15)

    $@15  goto state 95

state 95 // SFUNC IDENT LBRACE WHILE IDENT LBRACE [AFF]

   96 statement: WHILE IDENT $@14 LBRACE $@15 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 96
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 96 // SFUNC IDENT LBRACE WHILE IDENT LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
   96 statement: WHILE IDENT $@14 LBRACE $@15 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 97
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 97 // SFUNC IDENT LBRACE WHILE IDENT LBRACE DPROGRAM BOOLEAN RBRACE

   96 statement: WHILE IDENT $@14 LBRACE $@15 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 96 (statement)
    BOOL      reduce using rule 96 (statement)
    BOOLA     reduce using rule 96 (statement)
    BYTE      reduce using rule 96 (statement)
    BYTEA     reduce using rule 96 (statement)
    DPROGRAM  reduce using rule 96 (statement)
    DSTACK    reduce using rule 96 (statement)
    F32       reduce using rule 96 (statement)
    F32A      reduce using rule 96 (statement)
    F64       reduce using rule 96 (statement)
    F64A      reduce using rule 96 (statement)
    FLOAT     reduce using rule 96 (statement)
    I32       reduce using rule 96 (statement)
    I32A      reduce using rule 96 (statement)
    I64       reduce using rule 96 (statement)
    I64A      reduce using rule 96 (statement)
    IDENT     reduce using rule 96 (statement)
    IF        reduce using rule 96 (statement)
    INT       reduce using rule 96 (statement)
    RBRACE    reduce using rule 96 (statement)
    SFUNC     reduce using rule 96 (statement)
    SPACKAGE  reduce using rule 96 (statement)
    SSTRUCT   reduce using rule 96 (statement)
    STEP      reduce using rule 96 (statement)
    STR       reduce using rule 96 (statement)
    STRING    reduce using rule 96 (statement)
    VAR       reduce using rule 96 (statement)
    WHILE     reduce using rule 96 (statement)

state 98 // SFUNC IDENT LBRACE IF IDENT

   81 nonAssignExpression: IDENT . arguments
   87 statement: IF IDENT . $@8 LBRACE $@9 expressionsAndStatements RBRACE elseStatement
   85 $@8: .  [LBRACE]

    LBRACE  reduce using rule 85 ($@8)
    LPAREN  shift, and goto state 90

    $@8        goto state 119
    arguments  goto state 88

state 99 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN [LBRACE]

   84 statement: IF nonAssignExpression . $@6 LBRACE $@7 expressionsAndStatements RBRACE elseStatement
   82 $@6: .  [LBRACE]

    LBRACE  reduce using rule 82 ($@6)

    $@6  goto state 113

state 100 // SFUNC IDENT LBRACE IF BOOLEAN

   90 statement: IF BOOLEAN . $@10 LBRACE $@11 expressionsAndStatements RBRACE elseStatement
   88 $@10: .  [LBRACE]

    LBRACE  reduce using rule 88 ($@10)

    $@10  goto state 101

state 101 // SFUNC IDENT LBRACE IF BOOLEAN [LBRACE]

   90 statement: IF BOOLEAN $@10 . LBRACE $@11 expressionsAndStatements RBRACE elseStatement

    LBRACE  shift, and goto state 102

state 102 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE

   90 statement: IF BOOLEAN $@10 LBRACE . $@11 expressionsAndStatements RBRACE elseStatement
   89 $@11: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 89 ($@11)
    BOOL      reduce using rule 89 ($@11)
    BOOLA     reduce using rule 89 ($@11)
    BYTE      reduce using rule 89 ($@11)
    BYTEA     reduce using rule 89 ($@11)
    DPROGRAM  reduce using rule 89 ($@11)
    DSTACK    reduce using rule 89 ($@11)
    F32       reduce using rule 89 ($@11)
    F32A      reduce using rule 89 ($@11)
    F64       reduce using rule 89 ($@11)
    F64A      reduce using rule 89 ($@11)
    FLOAT     reduce using rule 89 ($@11)
    I32       reduce using rule 89 ($@11)
    I32A      reduce using rule 89 ($@11)
    I64       reduce using rule 89 ($@11)
    I64A      reduce using rule 89 ($@11)
    IDENT     reduce using rule 89 ($@11)
    IF        reduce using rule 89 ($@11)
    INT       reduce using rule 89 ($@11)
    SFUNC     reduce using rule 89 ($@11)
    SPACKAGE  reduce using rule 89 ($@11)
    SSTRUCT   reduce using rule 89 ($@11)
    STEP      reduce using rule 89 ($@11)
    STR       reduce using rule 89 ($@11)
    STRING    reduce using rule 89 ($@11)
    VAR       reduce using rule 89 ($@11)
    WHILE     reduce using rule 89 ($@11)

    $@11  goto state 103

state 103 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE [AFF]

   90 statement: IF BOOLEAN $@10 LBRACE $@11 . expressionsAndStatements RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 104
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 104 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
   90 statement: IF BOOLEAN $@10 LBRACE $@11 expressionsAndStatements . RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 105
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 105 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE

   90 statement: IF BOOLEAN $@10 LBRACE $@11 expressionsAndStatements RBRACE . elseStatement
  101 elseStatement: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 101 (elseStatement)
    BOOL      reduce using rule 101 (elseStatement)
    BOOLA     reduce using rule 101 (elseStatement)
    BYTE      reduce using rule 101 (elseStatement)
    BYTEA     reduce using rule 101 (elseStatement)
    DPROGRAM  reduce using rule 101 (elseStatement)
    DSTACK    reduce using rule 101 (elseStatement)
    ELSE      shift, and goto state 107
    F32       reduce using rule 101 (elseStatement)
    F32A      reduce using rule 101 (elseStatement)
    F64       reduce using rule 101 (elseStatement)
    F64A      reduce using rule 101 (elseStatement)
    FLOAT     reduce using rule 101 (elseStatement)
    I32       reduce using rule 101 (elseStatement)
    I32A      reduce using rule 101 (elseStatement)
    I64       reduce using rule 101 (elseStatement)
    I64A      reduce using rule 101 (elseStatement)
    IDENT     reduce using rule 101 (elseStatement)
    IF        reduce using rule 101 (elseStatement)
    INT       reduce using rule 101 (elseStatement)
    RBRACE    reduce using rule 101 (elseStatement)
    SFUNC     reduce using rule 101 (elseStatement)
    SPACKAGE  reduce using rule 101 (elseStatement)
    SSTRUCT   reduce using rule 101 (elseStatement)
    STEP      reduce using rule 101 (elseStatement)
    STR       reduce using rule 101 (elseStatement)
    STRING    reduce using rule 101 (elseStatement)
    VAR       reduce using rule 101 (elseStatement)
    WHILE     reduce using rule 101 (elseStatement)

    elseStatement  goto state 106

state 106 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE [AFF]

   90 statement: IF BOOLEAN $@10 LBRACE $@11 expressionsAndStatements RBRACE elseStatement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 90 (statement)
    BOOL      reduce using rule 90 (statement)
    BOOLA     reduce using rule 90 (statement)
    BYTE      reduce using rule 90 (statement)
    BYTEA     reduce using rule 90 (statement)
    DPROGRAM  reduce using rule 90 (statement)
    DSTACK    reduce using rule 90 (statement)
    F32       reduce using rule 90 (statement)
    F32A      reduce using rule 90 (statement)
    F64       reduce using rule 90 (statement)
    F64A      reduce using rule 90 (statement)
    FLOAT     reduce using rule 90 (statement)
    I32       reduce using rule 90 (statement)
    I32A      reduce using rule 90 (statement)
    I64       reduce using rule 90 (statement)
    I64A      reduce using rule 90 (statement)
    IDENT     reduce using rule 90 (statement)
    IF        reduce using rule 90 (statement)
    INT       reduce using rule 90 (statement)
    RBRACE    reduce using rule 90 (statement)
    SFUNC     reduce using rule 90 (statement)
    SPACKAGE  reduce using rule 90 (statement)
    SSTRUCT   reduce using rule 90 (statement)
    STEP      reduce using rule 90 (statement)
    STR       reduce using rule 90 (statement)
    STRING    reduce using rule 90 (statement)
    VAR       reduce using rule 90 (statement)
    WHILE     reduce using rule 90 (statement)

state 107 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE ELSE

  104 elseStatement: ELSE . $@18 LBRACE $@19 expressionsAndStatements RBRACE
  102 $@18: .  [LBRACE]

    LBRACE  reduce using rule 102 ($@18)

    $@18  goto state 108

state 108 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE ELSE [LBRACE]

  104 elseStatement: ELSE $@18 . LBRACE $@19 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 109

state 109 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE ELSE LBRACE

  104 elseStatement: ELSE $@18 LBRACE . $@19 expressionsAndStatements RBRACE
  103 $@19: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 103 ($@19)
    BOOL      reduce using rule 103 ($@19)
    BOOLA     reduce using rule 103 ($@19)
    BYTE      reduce using rule 103 ($@19)
    BYTEA     reduce using rule 103 ($@19)
    DPROGRAM  reduce using rule 103 ($@19)
    DSTACK    reduce using rule 103 ($@19)
    F32       reduce using rule 103 ($@19)
    F32A      reduce using rule 103 ($@19)
    F64       reduce using rule 103 ($@19)
    F64A      reduce using rule 103 ($@19)
    FLOAT     reduce using rule 103 ($@19)
    I32       reduce using rule 103 ($@19)
    I32A      reduce using rule 103 ($@19)
    I64       reduce using rule 103 ($@19)
    I64A      reduce using rule 103 ($@19)
    IDENT     reduce using rule 103 ($@19)
    IF        reduce using rule 103 ($@19)
    INT       reduce using rule 103 ($@19)
    SFUNC     reduce using rule 103 ($@19)
    SPACKAGE  reduce using rule 103 ($@19)
    SSTRUCT   reduce using rule 103 ($@19)
    STEP      reduce using rule 103 ($@19)
    STR       reduce using rule 103 ($@19)
    STRING    reduce using rule 103 ($@19)
    VAR       reduce using rule 103 ($@19)
    WHILE     reduce using rule 103 ($@19)

    $@19  goto state 110

state 110 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE ELSE LBRACE [AFF]

  104 elseStatement: ELSE $@18 LBRACE $@19 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 111
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 111 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE ELSE LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
  104 elseStatement: ELSE $@18 LBRACE $@19 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 112
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 112 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE DPROGRAM BOOLEAN RBRACE ELSE LBRACE DPROGRAM BOOLEAN RBRACE

  104 elseStatement: ELSE $@18 LBRACE $@19 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 104 (elseStatement)
    BOOL      reduce using rule 104 (elseStatement)
    BOOLA     reduce using rule 104 (elseStatement)
    BYTE      reduce using rule 104 (elseStatement)
    BYTEA     reduce using rule 104 (elseStatement)
    DPROGRAM  reduce using rule 104 (elseStatement)
    DSTACK    reduce using rule 104 (elseStatement)
    F32       reduce using rule 104 (elseStatement)
    F32A      reduce using rule 104 (elseStatement)
    F64       reduce using rule 104 (elseStatement)
    F64A      reduce using rule 104 (elseStatement)
    FLOAT     reduce using rule 104 (elseStatement)
    I32       reduce using rule 104 (elseStatement)
    I32A      reduce using rule 104 (elseStatement)
    I64       reduce using rule 104 (elseStatement)
    I64A      reduce using rule 104 (elseStatement)
    IDENT     reduce using rule 104 (elseStatement)
    IF        reduce using rule 104 (elseStatement)
    INT       reduce using rule 104 (elseStatement)
    RBRACE    reduce using rule 104 (elseStatement)
    SFUNC     reduce using rule 104 (elseStatement)
    SPACKAGE  reduce using rule 104 (elseStatement)
    SSTRUCT   reduce using rule 104 (elseStatement)
    STEP      reduce using rule 104 (elseStatement)
    STR       reduce using rule 104 (elseStatement)
    STRING    reduce using rule 104 (elseStatement)
    VAR       reduce using rule 104 (elseStatement)
    WHILE     reduce using rule 104 (elseStatement)

state 113 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN [LBRACE]

   84 statement: IF nonAssignExpression $@6 . LBRACE $@7 expressionsAndStatements RBRACE elseStatement

    LBRACE  shift, and goto state 114

state 114 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE

   84 statement: IF nonAssignExpression $@6 LBRACE . $@7 expressionsAndStatements RBRACE elseStatement
   83 $@7: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 83 ($@7)
    BOOL      reduce using rule 83 ($@7)
    BOOLA     reduce using rule 83 ($@7)
    BYTE      reduce using rule 83 ($@7)
    BYTEA     reduce using rule 83 ($@7)
    DPROGRAM  reduce using rule 83 ($@7)
    DSTACK    reduce using rule 83 ($@7)
    F32       reduce using rule 83 ($@7)
    F32A      reduce using rule 83 ($@7)
    F64       reduce using rule 83 ($@7)
    F64A      reduce using rule 83 ($@7)
    FLOAT     reduce using rule 83 ($@7)
    I32       reduce using rule 83 ($@7)
    I32A      reduce using rule 83 ($@7)
    I64       reduce using rule 83 ($@7)
    I64A      reduce using rule 83 ($@7)
    IDENT     reduce using rule 83 ($@7)
    IF        reduce using rule 83 ($@7)
    INT       reduce using rule 83 ($@7)
    SFUNC     reduce using rule 83 ($@7)
    SPACKAGE  reduce using rule 83 ($@7)
    SSTRUCT   reduce using rule 83 ($@7)
    STEP      reduce using rule 83 ($@7)
    STR       reduce using rule 83 ($@7)
    STRING    reduce using rule 83 ($@7)
    VAR       reduce using rule 83 ($@7)
    WHILE     reduce using rule 83 ($@7)

    $@7  goto state 115

state 115 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE [AFF]

   84 statement: IF nonAssignExpression $@6 LBRACE $@7 . expressionsAndStatements RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 116
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 116 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
   84 statement: IF nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements . RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 117
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 117 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE DPROGRAM BOOLEAN RBRACE

   84 statement: IF nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements RBRACE . elseStatement
  101 elseStatement: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 101 (elseStatement)
    BOOL      reduce using rule 101 (elseStatement)
    BOOLA     reduce using rule 101 (elseStatement)
    BYTE      reduce using rule 101 (elseStatement)
    BYTEA     reduce using rule 101 (elseStatement)
    DPROGRAM  reduce using rule 101 (elseStatement)
    DSTACK    reduce using rule 101 (elseStatement)
    ELSE      shift, and goto state 107
    F32       reduce using rule 101 (elseStatement)
    F32A      reduce using rule 101 (elseStatement)
    F64       reduce using rule 101 (elseStatement)
    F64A      reduce using rule 101 (elseStatement)
    FLOAT     reduce using rule 101 (elseStatement)
    I32       reduce using rule 101 (elseStatement)
    I32A      reduce using rule 101 (elseStatement)
    I64       reduce using rule 101 (elseStatement)
    I64A      reduce using rule 101 (elseStatement)
    IDENT     reduce using rule 101 (elseStatement)
    IF        reduce using rule 101 (elseStatement)
    INT       reduce using rule 101 (elseStatement)
    RBRACE    reduce using rule 101 (elseStatement)
    SFUNC     reduce using rule 101 (elseStatement)
    SPACKAGE  reduce using rule 101 (elseStatement)
    SSTRUCT   reduce using rule 101 (elseStatement)
    STEP      reduce using rule 101 (elseStatement)
    STR       reduce using rule 101 (elseStatement)
    STRING    reduce using rule 101 (elseStatement)
    VAR       reduce using rule 101 (elseStatement)
    WHILE     reduce using rule 101 (elseStatement)

    elseStatement  goto state 118

state 118 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE DPROGRAM BOOLEAN RBRACE [AFF]

   84 statement: IF nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements RBRACE elseStatement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 84 (statement)
    BOOL      reduce using rule 84 (statement)
    BOOLA     reduce using rule 84 (statement)
    BYTE      reduce using rule 84 (statement)
    BYTEA     reduce using rule 84 (statement)
    DPROGRAM  reduce using rule 84 (statement)
    DSTACK    reduce using rule 84 (statement)
    F32       reduce using rule 84 (statement)
    F32A      reduce using rule 84 (statement)
    F64       reduce using rule 84 (statement)
    F64A      reduce using rule 84 (statement)
    FLOAT     reduce using rule 84 (statement)
    I32       reduce using rule 84 (statement)
    I32A      reduce using rule 84 (statement)
    I64       reduce using rule 84 (statement)
    I64A      reduce using rule 84 (statement)
    IDENT     reduce using rule 84 (statement)
    IF        reduce using rule 84 (statement)
    INT       reduce using rule 84 (statement)
    RBRACE    reduce using rule 84 (statement)
    SFUNC     reduce using rule 84 (statement)
    SPACKAGE  reduce using rule 84 (statement)
    SSTRUCT   reduce using rule 84 (statement)
    STEP      reduce using rule 84 (statement)
    STR       reduce using rule 84 (statement)
    STRING    reduce using rule 84 (statement)
    VAR       reduce using rule 84 (statement)
    WHILE     reduce using rule 84 (statement)

state 119 // SFUNC IDENT LBRACE IF IDENT [LBRACE]

   87 statement: IF IDENT $@8 . LBRACE $@9 expressionsAndStatements RBRACE elseStatement

    LBRACE  shift, and goto state 120

state 120 // SFUNC IDENT LBRACE IF IDENT LBRACE

   87 statement: IF IDENT $@8 LBRACE . $@9 expressionsAndStatements RBRACE elseStatement
   86 $@9: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 86 ($@9)
    BOOL      reduce using rule 86 ($@9)
    BOOLA     reduce using rule 86 ($@9)
    BYTE      reduce using rule 86 ($@9)
    BYTEA     reduce using rule 86 ($@9)
    DPROGRAM  reduce using rule 86 ($@9)
    DSTACK    reduce using rule 86 ($@9)
    F32       reduce using rule 86 ($@9)
    F32A      reduce using rule 86 ($@9)
    F64       reduce using rule 86 ($@9)
    F64A      reduce using rule 86 ($@9)
    FLOAT     reduce using rule 86 ($@9)
    I32       reduce using rule 86 ($@9)
    I32A      reduce using rule 86 ($@9)
    I64       reduce using rule 86 ($@9)
    I64A      reduce using rule 86 ($@9)
    IDENT     reduce using rule 86 ($@9)
    IF        reduce using rule 86 ($@9)
    INT       reduce using rule 86 ($@9)
    SFUNC     reduce using rule 86 ($@9)
    SPACKAGE  reduce using rule 86 ($@9)
    SSTRUCT   reduce using rule 86 ($@9)
    STEP      reduce using rule 86 ($@9)
    STR       reduce using rule 86 ($@9)
    STRING    reduce using rule 86 ($@9)
    VAR       reduce using rule 86 ($@9)
    WHILE     reduce using rule 86 ($@9)

    $@9  goto state 121

state 121 // SFUNC IDENT LBRACE IF IDENT LBRACE [AFF]

   87 statement: IF IDENT $@8 LBRACE $@9 . expressionsAndStatements RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 122
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 122 // SFUNC IDENT LBRACE IF IDENT LBRACE DPROGRAM BOOLEAN [AFF]

   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance
   87 statement: IF IDENT $@8 LBRACE $@9 expressionsAndStatements . RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 123
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 123 // SFUNC IDENT LBRACE IF IDENT LBRACE DPROGRAM BOOLEAN RBRACE

   87 statement: IF IDENT $@8 LBRACE $@9 expressionsAndStatements RBRACE . elseStatement
  101 elseStatement: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 101 (elseStatement)
    BOOL      reduce using rule 101 (elseStatement)
    BOOLA     reduce using rule 101 (elseStatement)
    BYTE      reduce using rule 101 (elseStatement)
    BYTEA     reduce using rule 101 (elseStatement)
    DPROGRAM  reduce using rule 101 (elseStatement)
    DSTACK    reduce using rule 101 (elseStatement)
    ELSE      shift, and goto state 107
    F32       reduce using rule 101 (elseStatement)
    F32A      reduce using rule 101 (elseStatement)
    F64       reduce using rule 101 (elseStatement)
    F64A      reduce using rule 101 (elseStatement)
    FLOAT     reduce using rule 101 (elseStatement)
    I32       reduce using rule 101 (elseStatement)
    I32A      reduce using rule 101 (elseStatement)
    I64       reduce using rule 101 (elseStatement)
    I64A      reduce using rule 101 (elseStatement)
    IDENT     reduce using rule 101 (elseStatement)
    IF        reduce using rule 101 (elseStatement)
    INT       reduce using rule 101 (elseStatement)
    RBRACE    reduce using rule 101 (elseStatement)
    SFUNC     reduce using rule 101 (elseStatement)
    SPACKAGE  reduce using rule 101 (elseStatement)
    SSTRUCT   reduce using rule 101 (elseStatement)
    STEP      reduce using rule 101 (elseStatement)
    STR       reduce using rule 101 (elseStatement)
    STRING    reduce using rule 101 (elseStatement)
    VAR       reduce using rule 101 (elseStatement)
    WHILE     reduce using rule 101 (elseStatement)

    elseStatement  goto state 124

state 124 // SFUNC IDENT LBRACE IF IDENT LBRACE DPROGRAM BOOLEAN RBRACE [AFF]

   87 statement: IF IDENT $@8 LBRACE $@9 expressionsAndStatements RBRACE elseStatement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 87 (statement)
    BOOL      reduce using rule 87 (statement)
    BOOLA     reduce using rule 87 (statement)
    BYTE      reduce using rule 87 (statement)
    BYTEA     reduce using rule 87 (statement)
    DPROGRAM  reduce using rule 87 (statement)
    DSTACK    reduce using rule 87 (statement)
    F32       reduce using rule 87 (statement)
    F32A      reduce using rule 87 (statement)
    F64       reduce using rule 87 (statement)
    F64A      reduce using rule 87 (statement)
    FLOAT     reduce using rule 87 (statement)
    I32       reduce using rule 87 (statement)
    I32A      reduce using rule 87 (statement)
    I64       reduce using rule 87 (statement)
    I64A      reduce using rule 87 (statement)
    IDENT     reduce using rule 87 (statement)
    IF        reduce using rule 87 (statement)
    INT       reduce using rule 87 (statement)
    RBRACE    reduce using rule 87 (statement)
    SFUNC     reduce using rule 87 (statement)
    SPACKAGE  reduce using rule 87 (statement)
    SSTRUCT   reduce using rule 87 (statement)
    STEP      reduce using rule 87 (statement)
    STR       reduce using rule 87 (statement)
    STRING    reduce using rule 87 (statement)
    VAR       reduce using rule 87 (statement)
    WHILE     reduce using rule 87 (statement)

state 125 // VAR IDENT BOOL ASSIGN

   30 assignOperator: ASSIGN .  [BOOL, BOOLA, BYTE, BYTEA, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, INT, STR, STRING]

    BOOL    reduce using rule 30 (assignOperator)
    BOOLA   reduce using rule 30 (assignOperator)
    BYTE    reduce using rule 30 (assignOperator)
    BYTEA   reduce using rule 30 (assignOperator)
    F32     reduce using rule 30 (assignOperator)
    F32A    reduce using rule 30 (assignOperator)
    F64     reduce using rule 30 (assignOperator)
    F64A    reduce using rule 30 (assignOperator)
    FLOAT   reduce using rule 30 (assignOperator)
    I32     reduce using rule 30 (assignOperator)
    I32A    reduce using rule 30 (assignOperator)
    I64     reduce using rule 30 (assignOperator)
    I64A    reduce using rule 30 (assignOperator)
    IDENT   reduce using rule 30 (assignOperator)
    INT     reduce using rule 30 (assignOperator)
    STR     reduce using rule 30 (assignOperator)
    STRING  reduce using rule 30 (assignOperator)

state 126 // VAR IDENT BOOL CASSIGN

   31 assignOperator: CASSIGN .  [BOOL, BOOLA, BYTE, BYTEA, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, INT, STR, STRING]

    BOOL    reduce using rule 31 (assignOperator)
    BOOLA   reduce using rule 31 (assignOperator)
    BYTE    reduce using rule 31 (assignOperator)
    BYTEA   reduce using rule 31 (assignOperator)
    F32     reduce using rule 31 (assignOperator)
    F32A    reduce using rule 31 (assignOperator)
    F64     reduce using rule 31 (assignOperator)
    F64A    reduce using rule 31 (assignOperator)
    FLOAT   reduce using rule 31 (assignOperator)
    I32     reduce using rule 31 (assignOperator)
    I32A    reduce using rule 31 (assignOperator)
    I64     reduce using rule 31 (assignOperator)
    I64A    reduce using rule 31 (assignOperator)
    IDENT   reduce using rule 31 (assignOperator)
    INT     reduce using rule 31 (assignOperator)
    STR     reduce using rule 31 (assignOperator)
    STRING  reduce using rule 31 (assignOperator)

state 127 // SFUNC IDENT LBRACE FLOAT ASSIGN [IDENT]

   80 assignExpression: argumentsList assignOperator . IDENT arguments

    IDENT  shift, and goto state 128

state 128 // SFUNC IDENT LBRACE FLOAT ASSIGN IDENT

   80 assignExpression: argumentsList assignOperator IDENT . arguments

    LPAREN  shift, and goto state 90

    arguments  goto state 129

state 129 // SFUNC IDENT LBRACE FLOAT ASSIGN IDENT LPAREN RPAREN [AFF]

   80 assignExpression: argumentsList assignOperator IDENT arguments .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 80 (assignExpression)
    BOOL      reduce using rule 80 (assignExpression)
    BOOLA     reduce using rule 80 (assignExpression)
    BYTE      reduce using rule 80 (assignExpression)
    BYTEA     reduce using rule 80 (assignExpression)
    DPROGRAM  reduce using rule 80 (assignExpression)
    DSTACK    reduce using rule 80 (assignExpression)
    F32       reduce using rule 80 (assignExpression)
    F32A      reduce using rule 80 (assignExpression)
    F64       reduce using rule 80 (assignExpression)
    F64A      reduce using rule 80 (assignExpression)
    FLOAT     reduce using rule 80 (assignExpression)
    I32       reduce using rule 80 (assignExpression)
    I32A      reduce using rule 80 (assignExpression)
    I64       reduce using rule 80 (assignExpression)
    I64A      reduce using rule 80 (assignExpression)
    IDENT     reduce using rule 80 (assignExpression)
    IF        reduce using rule 80 (assignExpression)
    INT       reduce using rule 80 (assignExpression)
    RBRACE    reduce using rule 80 (assignExpression)
    SFUNC     reduce using rule 80 (assignExpression)
    SPACKAGE  reduce using rule 80 (assignExpression)
    SSTRUCT   reduce using rule 80 (assignExpression)
    STEP      reduce using rule 80 (assignExpression)
    STR       reduce using rule 80 (assignExpression)
    STRING    reduce using rule 80 (assignExpression)
    VAR       reduce using rule 80 (assignExpression)
    WHILE     reduce using rule 80 (assignExpression)

state 130 // SFUNC IDENT LBRACE VAR IDENT

   79 assignExpression: VAR IDENT . typeSpecifier definitionAssignment
  100 statement: VAR IDENT . IDENT

    BOOL   shift, and goto state 33
    BOOLA  shift, and goto state 35
    BYTE   shift, and goto state 34
    BYTEA  shift, and goto state 36
    F32    shift, and goto state 31
    F32A   shift, and goto state 39
    F64    shift, and goto state 32
    F64A   shift, and goto state 40
    I32    shift, and goto state 29
    I32A   shift, and goto state 37
    I64    shift, and goto state 30
    I64A   shift, and goto state 38
    IDENT  shift, and goto state 132
    STR    shift, and goto state 41

    typeSpecifier  goto state 131

state 131 // SFUNC IDENT LBRACE VAR IDENT BOOL [AFF]

   79 assignExpression: VAR IDENT typeSpecifier . definitionAssignment
   46 definitionAssignment: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 46 (definitionAssignment)
    ASSIGN    shift, and goto state 125
    BOOL      reduce using rule 46 (definitionAssignment)
    BOOLA     reduce using rule 46 (definitionAssignment)
    BYTE      reduce using rule 46 (definitionAssignment)
    BYTEA     reduce using rule 46 (definitionAssignment)
    CASSIGN   shift, and goto state 126
    DPROGRAM  reduce using rule 46 (definitionAssignment)
    DSTACK    reduce using rule 46 (definitionAssignment)
    F32       reduce using rule 46 (definitionAssignment)
    F32A      reduce using rule 46 (definitionAssignment)
    F64       reduce using rule 46 (definitionAssignment)
    F64A      reduce using rule 46 (definitionAssignment)
    FLOAT     reduce using rule 46 (definitionAssignment)
    I32       reduce using rule 46 (definitionAssignment)
    I32A      reduce using rule 46 (definitionAssignment)
    I64       reduce using rule 46 (definitionAssignment)
    I64A      reduce using rule 46 (definitionAssignment)
    IDENT     reduce using rule 46 (definitionAssignment)
    IF        reduce using rule 46 (definitionAssignment)
    INT       reduce using rule 46 (definitionAssignment)
    RBRACE    reduce using rule 46 (definitionAssignment)
    SFUNC     reduce using rule 46 (definitionAssignment)
    SPACKAGE  reduce using rule 46 (definitionAssignment)
    SSTRUCT   reduce using rule 46 (definitionAssignment)
    STEP      reduce using rule 46 (definitionAssignment)
    STR       reduce using rule 46 (definitionAssignment)
    STRING    reduce using rule 46 (definitionAssignment)
    VAR       reduce using rule 46 (definitionAssignment)
    WHILE     reduce using rule 46 (definitionAssignment)

    assignOperator        goto state 133
    definitionAssignment  goto state 134

state 132 // SFUNC IDENT LBRACE VAR IDENT IDENT

  100 statement: VAR IDENT IDENT .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 100 (statement)
    BOOL      reduce using rule 100 (statement)
    BOOLA     reduce using rule 100 (statement)
    BYTE      reduce using rule 100 (statement)
    BYTEA     reduce using rule 100 (statement)
    DPROGRAM  reduce using rule 100 (statement)
    DSTACK    reduce using rule 100 (statement)
    F32       reduce using rule 100 (statement)
    F32A      reduce using rule 100 (statement)
    F64       reduce using rule 100 (statement)
    F64A      reduce using rule 100 (statement)
    FLOAT     reduce using rule 100 (statement)
    I32       reduce using rule 100 (statement)
    I32A      reduce using rule 100 (statement)
    I64       reduce using rule 100 (statement)
    I64A      reduce using rule 100 (statement)
    IDENT     reduce using rule 100 (statement)
    IF        reduce using rule 100 (statement)
    INT       reduce using rule 100 (statement)
    RBRACE    reduce using rule 100 (statement)
    SFUNC     reduce using rule 100 (statement)
    SPACKAGE  reduce using rule 100 (statement)
    SSTRUCT   reduce using rule 100 (statement)
    STEP      reduce using rule 100 (statement)
    STR       reduce using rule 100 (statement)
    STRING    reduce using rule 100 (statement)
    VAR       reduce using rule 100 (statement)
    WHILE     reduce using rule 100 (statement)

state 133 // VAR IDENT BOOL ASSIGN [BOOL]

   47 definitionAssignment: assignOperator . argument

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 136
    INT     shift, and goto state 56
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument       goto state 135
    typeSpecifier  goto state 59

state 134 // SFUNC IDENT LBRACE VAR IDENT BOOL [AFF]

   79 assignExpression: VAR IDENT typeSpecifier definitionAssignment .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 79 (assignExpression)
    BOOL      reduce using rule 79 (assignExpression)
    BOOLA     reduce using rule 79 (assignExpression)
    BYTE      reduce using rule 79 (assignExpression)
    BYTEA     reduce using rule 79 (assignExpression)
    DPROGRAM  reduce using rule 79 (assignExpression)
    DSTACK    reduce using rule 79 (assignExpression)
    F32       reduce using rule 79 (assignExpression)
    F32A      reduce using rule 79 (assignExpression)
    F64       reduce using rule 79 (assignExpression)
    F64A      reduce using rule 79 (assignExpression)
    FLOAT     reduce using rule 79 (assignExpression)
    I32       reduce using rule 79 (assignExpression)
    I32A      reduce using rule 79 (assignExpression)
    I64       reduce using rule 79 (assignExpression)
    I64A      reduce using rule 79 (assignExpression)
    IDENT     reduce using rule 79 (assignExpression)
    IF        reduce using rule 79 (assignExpression)
    INT       reduce using rule 79 (assignExpression)
    RBRACE    reduce using rule 79 (assignExpression)
    SFUNC     reduce using rule 79 (assignExpression)
    SPACKAGE  reduce using rule 79 (assignExpression)
    SSTRUCT   reduce using rule 79 (assignExpression)
    STEP      reduce using rule 79 (assignExpression)
    STR       reduce using rule 79 (assignExpression)
    STRING    reduce using rule 79 (assignExpression)
    VAR       reduce using rule 79 (assignExpression)
    WHILE     reduce using rule 79 (assignExpression)

state 135 // VAR IDENT BOOL ASSIGN FLOAT [$end]

   47 definitionAssignment: assignOperator argument .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 47 (definitionAssignment)
    AFF        reduce using rule 47 (definitionAssignment)
    BOOL       reduce using rule 47 (definitionAssignment)
    BOOLA      reduce using rule 47 (definitionAssignment)
    BYTE       reduce using rule 47 (definitionAssignment)
    BYTEA      reduce using rule 47 (definitionAssignment)
    DPROGRAM   reduce using rule 47 (definitionAssignment)
    DSTACK     reduce using rule 47 (definitionAssignment)
    F32        reduce using rule 47 (definitionAssignment)
    F32A       reduce using rule 47 (definitionAssignment)
    F64        reduce using rule 47 (definitionAssignment)
    F64A       reduce using rule 47 (definitionAssignment)
    FLOAT      reduce using rule 47 (definitionAssignment)
    FUNC       reduce using rule 47 (definitionAssignment)
    I32        reduce using rule 47 (definitionAssignment)
    I32A       reduce using rule 47 (definitionAssignment)
    I64        reduce using rule 47 (definitionAssignment)
    I64A       reduce using rule 47 (definitionAssignment)
    IDENT      reduce using rule 47 (definitionAssignment)
    IF         reduce using rule 47 (definitionAssignment)
    INT        reduce using rule 47 (definitionAssignment)
    PACKAGE    reduce using rule 47 (definitionAssignment)
    RBRACE     reduce using rule 47 (definitionAssignment)
    SFUNC      reduce using rule 47 (definitionAssignment)
    SPACKAGE   reduce using rule 47 (definitionAssignment)
    SSTRUCT    reduce using rule 47 (definitionAssignment)
    STEP       reduce using rule 47 (definitionAssignment)
    STR        reduce using rule 47 (definitionAssignment)
    STRING     reduce using rule 47 (definitionAssignment)
    TYPSTRUCT  reduce using rule 47 (definitionAssignment)
    VAR        reduce using rule 47 (definitionAssignment)
    WHILE      reduce using rule 47 (definitionAssignment)

state 136 // VAR IDENT BOOL ASSIGN IDENT

  112 argument: IDENT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 112 (argument)
    AFF        reduce using rule 112 (argument)
    BOOL       reduce using rule 112 (argument)
    BOOLA      reduce using rule 112 (argument)
    BYTE       reduce using rule 112 (argument)
    BYTEA      reduce using rule 112 (argument)
    DPROGRAM   reduce using rule 112 (argument)
    DSTACK     reduce using rule 112 (argument)
    F32        reduce using rule 112 (argument)
    F32A       reduce using rule 112 (argument)
    F64        reduce using rule 112 (argument)
    F64A       reduce using rule 112 (argument)
    FLOAT      reduce using rule 112 (argument)
    FUNC       reduce using rule 112 (argument)
    I32        reduce using rule 112 (argument)
    I32A       reduce using rule 112 (argument)
    I64        reduce using rule 112 (argument)
    I64A       reduce using rule 112 (argument)
    IDENT      reduce using rule 112 (argument)
    IF         reduce using rule 112 (argument)
    INT        reduce using rule 112 (argument)
    PACKAGE    reduce using rule 112 (argument)
    RBRACE     reduce using rule 112 (argument)
    SFUNC      reduce using rule 112 (argument)
    SPACKAGE   reduce using rule 112 (argument)
    SSTRUCT    reduce using rule 112 (argument)
    STEP       reduce using rule 112 (argument)
    STR        reduce using rule 112 (argument)
    STRING     reduce using rule 112 (argument)
    TYPSTRUCT  reduce using rule 112 (argument)
    VAR        reduce using rule 112 (argument)
    WHILE      reduce using rule 112 (argument)

state 137 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE DPROGRAM BOOLEAN RBRACE

   63 functionStatements: LBRACE expressionsAndStatements RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 63 (functionStatements)
    AFF        reduce using rule 63 (functionStatements)
    DPROGRAM   reduce using rule 63 (functionStatements)
    DSTACK     reduce using rule 63 (functionStatements)
    FUNC       reduce using rule 63 (functionStatements)
    PACKAGE    reduce using rule 63 (functionStatements)
    RBRACE     reduce using rule 63 (functionStatements)
    SFUNC      reduce using rule 63 (functionStatements)
    SPACKAGE   reduce using rule 63 (functionStatements)
    SSTRUCT    reduce using rule 63 (functionStatements)
    STEP       reduce using rule 63 (functionStatements)
    TYPSTRUCT  reduce using rule 63 (functionStatements)
    VAR        reduce using rule 63 (functionStatements)

state 138 // FUNC IDENT LPAREN IDENT BOOL [COMMA]

   56 functionParameters: LPAREN parameters . RPAREN
   62 parameters: parameters . COMMA parameter

    COMMA   shift, and goto state 144
    RPAREN  shift, and goto state 143

state 139 // FUNC IDENT LPAREN RPAREN

   57 functionParameters: LPAREN RPAREN .  [LBRACE, LPAREN]

    LBRACE  reduce using rule 57 (functionParameters)
    LPAREN  reduce using rule 57 (functionParameters)

state 140 // FUNC IDENT LPAREN IDENT

   60 parameter: IDENT . typeSpecifier

    BOOL   shift, and goto state 33
    BOOLA  shift, and goto state 35
    BYTE   shift, and goto state 34
    BYTEA  shift, and goto state 36
    F32    shift, and goto state 31
    F32A   shift, and goto state 39
    F64    shift, and goto state 32
    F64A   shift, and goto state 40
    I32    shift, and goto state 29
    I32A   shift, and goto state 37
    I64    shift, and goto state 30
    I64A   shift, and goto state 38
    STR    shift, and goto state 41

    typeSpecifier  goto state 142

state 141 // FUNC IDENT LPAREN IDENT BOOL [COMMA]

   61 parameters: parameter .  [COMMA, RPAREN]

    COMMA   reduce using rule 61 (parameters)
    RPAREN  reduce using rule 61 (parameters)

state 142 // FUNC IDENT LPAREN IDENT BOOL [COMMA]

   60 parameter: IDENT typeSpecifier .  [COMMA, IDENT, RBRACE, RPAREN]

    COMMA   reduce using rule 60 (parameter)
    IDENT   reduce using rule 60 (parameter)
    RBRACE  reduce using rule 60 (parameter)
    RPAREN  reduce using rule 60 (parameter)

state 143 // FUNC IDENT LPAREN IDENT BOOL RPAREN

   56 functionParameters: LPAREN parameters RPAREN .  [LBRACE, LPAREN]

    LBRACE  reduce using rule 56 (functionParameters)
    LPAREN  reduce using rule 56 (functionParameters)

state 144 // FUNC IDENT LPAREN IDENT BOOL COMMA

   62 parameters: parameters COMMA . parameter

    IDENT  shift, and goto state 140

    parameter  goto state 145

state 145 // FUNC IDENT LPAREN IDENT BOOL COMMA IDENT BOOL [COMMA]

   62 parameters: parameters COMMA parameter .  [COMMA, RPAREN]

    COMMA   reduce using rule 62 (parameters)
    RPAREN  reduce using rule 62 (parameters)

state 146 // TYPSTRUCT IDENT

   55 structDeclaration: TYPSTRUCT IDENT . $@4 STRUCT structFields
   54 $@4: .  [STRUCT]

    STRUCT  reduce using rule 54 ($@4)

    $@4  goto state 147

state 147 // TYPSTRUCT IDENT [STRUCT]

   55 structDeclaration: TYPSTRUCT IDENT $@4 . STRUCT structFields

    STRUCT  shift, and goto state 148

state 148 // TYPSTRUCT IDENT STRUCT

   55 structDeclaration: TYPSTRUCT IDENT $@4 STRUCT . structFields

    LBRACE  shift, and goto state 149

    structFields  goto state 150

state 149 // TYPSTRUCT IDENT STRUCT LBRACE

   52 structFields: LBRACE . fields RBRACE
   53 structFields: LBRACE . RBRACE

    IDENT   shift, and goto state 140
    RBRACE  shift, and goto state 153

    fields     goto state 152
    parameter  goto state 151

state 150 // TYPSTRUCT IDENT STRUCT LBRACE RBRACE [$end]

   55 structDeclaration: TYPSTRUCT IDENT $@4 STRUCT structFields .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 55 (structDeclaration)
    AFF        reduce using rule 55 (structDeclaration)
    DPROGRAM   reduce using rule 55 (structDeclaration)
    DSTACK     reduce using rule 55 (structDeclaration)
    FUNC       reduce using rule 55 (structDeclaration)
    PACKAGE    reduce using rule 55 (structDeclaration)
    RBRACE     reduce using rule 55 (structDeclaration)
    SFUNC      reduce using rule 55 (structDeclaration)
    SPACKAGE   reduce using rule 55 (structDeclaration)
    SSTRUCT    reduce using rule 55 (structDeclaration)
    STEP       reduce using rule 55 (structDeclaration)
    TYPSTRUCT  reduce using rule 55 (structDeclaration)
    VAR        reduce using rule 55 (structDeclaration)

state 151 // SSTRUCT IDENT LBRACE IDENT BOOL [IDENT]

   50 fields: parameter .  [IDENT, RBRACE]

    IDENT   reduce using rule 50 (fields)
    RBRACE  reduce using rule 50 (fields)

state 152 // TYPSTRUCT IDENT STRUCT LBRACE IDENT BOOL [IDENT]

   51 fields: fields . parameter
   52 structFields: LBRACE fields . RBRACE

    IDENT   shift, and goto state 140
    RBRACE  shift, and goto state 155

    parameter  goto state 154

state 153 // TYPSTRUCT IDENT STRUCT LBRACE RBRACE

   53 structFields: LBRACE RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 53 (structFields)
    AFF        reduce using rule 53 (structFields)
    DPROGRAM   reduce using rule 53 (structFields)
    DSTACK     reduce using rule 53 (structFields)
    FUNC       reduce using rule 53 (structFields)
    PACKAGE    reduce using rule 53 (structFields)
    RBRACE     reduce using rule 53 (structFields)
    SFUNC      reduce using rule 53 (structFields)
    SPACKAGE   reduce using rule 53 (structFields)
    SSTRUCT    reduce using rule 53 (structFields)
    STEP       reduce using rule 53 (structFields)
    TYPSTRUCT  reduce using rule 53 (structFields)
    VAR        reduce using rule 53 (structFields)

state 154 // SSTRUCT IDENT LBRACE IDENT BOOL IDENT BOOL [IDENT]

   51 fields: fields parameter .  [IDENT, RBRACE]

    IDENT   reduce using rule 51 (fields)
    RBRACE  reduce using rule 51 (fields)

state 155 // TYPSTRUCT IDENT STRUCT LBRACE IDENT BOOL RBRACE

   52 structFields: LBRACE fields RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 52 (structFields)
    AFF        reduce using rule 52 (structFields)
    DPROGRAM   reduce using rule 52 (structFields)
    DSTACK     reduce using rule 52 (structFields)
    FUNC       reduce using rule 52 (structFields)
    PACKAGE    reduce using rule 52 (structFields)
    RBRACE     reduce using rule 52 (structFields)
    SFUNC      reduce using rule 52 (structFields)
    SPACKAGE   reduce using rule 52 (structFields)
    SSTRUCT    reduce using rule 52 (structFields)
    STEP       reduce using rule 52 (structFields)
    TYPSTRUCT  reduce using rule 52 (structFields)
    VAR        reduce using rule 52 (structFields)

state 156 // VAR IDENT

   48 definitionDeclaration: VAR IDENT . typeSpecifier definitionAssignment
   49 definitionDeclaration: VAR IDENT . IDENT

    BOOL   shift, and goto state 33
    BOOLA  shift, and goto state 35
    BYTE   shift, and goto state 34
    BYTEA  shift, and goto state 36
    F32    shift, and goto state 31
    F32A   shift, and goto state 39
    F64    shift, and goto state 32
    F64A   shift, and goto state 40
    I32    shift, and goto state 29
    I32A   shift, and goto state 37
    I64    shift, and goto state 30
    I64A   shift, and goto state 38
    IDENT  shift, and goto state 158
    STR    shift, and goto state 41

    typeSpecifier  goto state 157

state 157 // VAR IDENT BOOL [$end]

   48 definitionDeclaration: VAR IDENT typeSpecifier . definitionAssignment
   46 definitionAssignment: .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 46 (definitionAssignment)
    AFF        reduce using rule 46 (definitionAssignment)
    ASSIGN     shift, and goto state 125
    CASSIGN    shift, and goto state 126
    DPROGRAM   reduce using rule 46 (definitionAssignment)
    DSTACK     reduce using rule 46 (definitionAssignment)
    FUNC       reduce using rule 46 (definitionAssignment)
    PACKAGE    reduce using rule 46 (definitionAssignment)
    RBRACE     reduce using rule 46 (definitionAssignment)
    SFUNC      reduce using rule 46 (definitionAssignment)
    SPACKAGE   reduce using rule 46 (definitionAssignment)
    SSTRUCT    reduce using rule 46 (definitionAssignment)
    STEP       reduce using rule 46 (definitionAssignment)
    TYPSTRUCT  reduce using rule 46 (definitionAssignment)
    VAR        reduce using rule 46 (definitionAssignment)

    assignOperator        goto state 133
    definitionAssignment  goto state 159

state 158 // VAR IDENT IDENT

   49 definitionDeclaration: VAR IDENT IDENT .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 49 (definitionDeclaration)
    AFF        reduce using rule 49 (definitionDeclaration)
    DPROGRAM   reduce using rule 49 (definitionDeclaration)
    DSTACK     reduce using rule 49 (definitionDeclaration)
    FUNC       reduce using rule 49 (definitionDeclaration)
    PACKAGE    reduce using rule 49 (definitionDeclaration)
    RBRACE     reduce using rule 49 (definitionDeclaration)
    SFUNC      reduce using rule 49 (definitionDeclaration)
    SPACKAGE   reduce using rule 49 (definitionDeclaration)
    SSTRUCT    reduce using rule 49 (definitionDeclaration)
    STEP       reduce using rule 49 (definitionDeclaration)
    TYPSTRUCT  reduce using rule 49 (definitionDeclaration)
    VAR        reduce using rule 49 (definitionDeclaration)

state 159 // VAR IDENT BOOL [$end]

   48 definitionDeclaration: VAR IDENT typeSpecifier definitionAssignment .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 48 (definitionDeclaration)
    AFF        reduce using rule 48 (definitionDeclaration)
    DPROGRAM   reduce using rule 48 (definitionDeclaration)
    DSTACK     reduce using rule 48 (definitionDeclaration)
    FUNC       reduce using rule 48 (definitionDeclaration)
    PACKAGE    reduce using rule 48 (definitionDeclaration)
    RBRACE     reduce using rule 48 (definitionDeclaration)
    SFUNC      reduce using rule 48 (definitionDeclaration)
    SPACKAGE   reduce using rule 48 (definitionDeclaration)
    SSTRUCT    reduce using rule 48 (definitionDeclaration)
    STEP       reduce using rule 48 (definitionDeclaration)
    TYPSTRUCT  reduce using rule 48 (definitionDeclaration)
    VAR        reduce using rule 48 (definitionDeclaration)

state 160 // PACKAGE IDENT

   45 packageDeclaration: PACKAGE IDENT .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 45 (packageDeclaration)
    AFF        reduce using rule 45 (packageDeclaration)
    DPROGRAM   reduce using rule 45 (packageDeclaration)
    DSTACK     reduce using rule 45 (packageDeclaration)
    FUNC       reduce using rule 45 (packageDeclaration)
    PACKAGE    reduce using rule 45 (packageDeclaration)
    RBRACE     reduce using rule 45 (packageDeclaration)
    SFUNC      reduce using rule 45 (packageDeclaration)
    SPACKAGE   reduce using rule 45 (packageDeclaration)
    SSTRUCT    reduce using rule 45 (packageDeclaration)
    STEP       reduce using rule 45 (packageDeclaration)
    TYPSTRUCT  reduce using rule 45 (packageDeclaration)
    VAR        reduce using rule 45 (packageDeclaration)

state 161 // SSTRUCT IDENT

   29 selector: SSTRUCT IDENT . $@3 selectorFields
   28 $@3: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 28 ($@3)
    AFF        reduce using rule 28 ($@3)
    BOOL       reduce using rule 28 ($@3)
    BOOLA      reduce using rule 28 ($@3)
    BYTE       reduce using rule 28 ($@3)
    BYTEA      reduce using rule 28 ($@3)
    DPROGRAM   reduce using rule 28 ($@3)
    DSTACK     reduce using rule 28 ($@3)
    F32        reduce using rule 28 ($@3)
    F32A       reduce using rule 28 ($@3)
    F64        reduce using rule 28 ($@3)
    F64A       reduce using rule 28 ($@3)
    FLOAT      reduce using rule 28 ($@3)
    FUNC       reduce using rule 28 ($@3)
    I32        reduce using rule 28 ($@3)
    I32A       reduce using rule 28 ($@3)
    I64        reduce using rule 28 ($@3)
    I64A       reduce using rule 28 ($@3)
    IDENT      reduce using rule 28 ($@3)
    IF         reduce using rule 28 ($@3)
    INT        reduce using rule 28 ($@3)
    LBRACE     reduce using rule 28 ($@3)
    PACKAGE    reduce using rule 28 ($@3)
    RBRACE     reduce using rule 28 ($@3)
    SFUNC      reduce using rule 28 ($@3)
    SPACKAGE   reduce using rule 28 ($@3)
    SSTRUCT    reduce using rule 28 ($@3)
    STEP       reduce using rule 28 ($@3)
    STR        reduce using rule 28 ($@3)
    STRING     reduce using rule 28 ($@3)
    TYPSTRUCT  reduce using rule 28 ($@3)
    VAR        reduce using rule 28 ($@3)
    WHILE      reduce using rule 28 ($@3)

    $@3  goto state 162

state 162 // SSTRUCT IDENT [$end]

   29 selector: SSTRUCT IDENT $@3 . selectorFields
   22 selectorFields: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 22 (selectorFields)
    AFF        reduce using rule 22 (selectorFields)
    BOOL       reduce using rule 22 (selectorFields)
    BOOLA      reduce using rule 22 (selectorFields)
    BYTE       reduce using rule 22 (selectorFields)
    BYTEA      reduce using rule 22 (selectorFields)
    DPROGRAM   reduce using rule 22 (selectorFields)
    DSTACK     reduce using rule 22 (selectorFields)
    F32        reduce using rule 22 (selectorFields)
    F32A       reduce using rule 22 (selectorFields)
    F64        reduce using rule 22 (selectorFields)
    F64A       reduce using rule 22 (selectorFields)
    FLOAT      reduce using rule 22 (selectorFields)
    FUNC       reduce using rule 22 (selectorFields)
    I32        reduce using rule 22 (selectorFields)
    I32A       reduce using rule 22 (selectorFields)
    I64        reduce using rule 22 (selectorFields)
    I64A       reduce using rule 22 (selectorFields)
    IDENT      reduce using rule 22 (selectorFields)
    IF         reduce using rule 22 (selectorFields)
    INT        reduce using rule 22 (selectorFields)
    LBRACE     shift, and goto state 163
    PACKAGE    reduce using rule 22 (selectorFields)
    RBRACE     reduce using rule 22 (selectorFields)
    SFUNC      reduce using rule 22 (selectorFields)
    SPACKAGE   reduce using rule 22 (selectorFields)
    SSTRUCT    reduce using rule 22 (selectorFields)
    STEP       reduce using rule 22 (selectorFields)
    STR        reduce using rule 22 (selectorFields)
    STRING     reduce using rule 22 (selectorFields)
    TYPSTRUCT  reduce using rule 22 (selectorFields)
    VAR        reduce using rule 22 (selectorFields)
    WHILE      reduce using rule 22 (selectorFields)

    selectorFields  goto state 164

state 163 // SSTRUCT IDENT LBRACE

   23 selectorFields: LBRACE . fields RBRACE

    IDENT  shift, and goto state 140

    fields     goto state 165
    parameter  goto state 151

state 164 // SSTRUCT IDENT [$end]

   29 selector: SSTRUCT IDENT $@3 selectorFields .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 29 (selector)
    AFF        reduce using rule 29 (selector)
    BOOL       reduce using rule 29 (selector)
    BOOLA      reduce using rule 29 (selector)
    BYTE       reduce using rule 29 (selector)
    BYTEA      reduce using rule 29 (selector)
    DPROGRAM   reduce using rule 29 (selector)
    DSTACK     reduce using rule 29 (selector)
    F32        reduce using rule 29 (selector)
    F32A       reduce using rule 29 (selector)
    F64        reduce using rule 29 (selector)
    F64A       reduce using rule 29 (selector)
    FLOAT      reduce using rule 29 (selector)
    FUNC       reduce using rule 29 (selector)
    I32        reduce using rule 29 (selector)
    I32A       reduce using rule 29 (selector)
    I64        reduce using rule 29 (selector)
    I64A       reduce using rule 29 (selector)
    IDENT      reduce using rule 29 (selector)
    IF         reduce using rule 29 (selector)
    INT        reduce using rule 29 (selector)
    PACKAGE    reduce using rule 29 (selector)
    RBRACE     reduce using rule 29 (selector)
    SFUNC      reduce using rule 29 (selector)
    SPACKAGE   reduce using rule 29 (selector)
    SSTRUCT    reduce using rule 29 (selector)
    STEP       reduce using rule 29 (selector)
    STR        reduce using rule 29 (selector)
    STRING     reduce using rule 29 (selector)
    TYPSTRUCT  reduce using rule 29 (selector)
    VAR        reduce using rule 29 (selector)
    WHILE      reduce using rule 29 (selector)

state 165 // SSTRUCT IDENT LBRACE IDENT BOOL [IDENT]

   23 selectorFields: LBRACE fields . RBRACE
   51 fields: fields . parameter

    IDENT   shift, and goto state 140
    RBRACE  shift, and goto state 166

    parameter  goto state 154

state 166 // SSTRUCT IDENT LBRACE IDENT BOOL RBRACE

   23 selectorFields: LBRACE fields RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 23 (selectorFields)
    AFF        reduce using rule 23 (selectorFields)
    BOOL       reduce using rule 23 (selectorFields)
    BOOLA      reduce using rule 23 (selectorFields)
    BYTE       reduce using rule 23 (selectorFields)
    BYTEA      reduce using rule 23 (selectorFields)
    DPROGRAM   reduce using rule 23 (selectorFields)
    DSTACK     reduce using rule 23 (selectorFields)
    F32        reduce using rule 23 (selectorFields)
    F32A       reduce using rule 23 (selectorFields)
    F64        reduce using rule 23 (selectorFields)
    F64A       reduce using rule 23 (selectorFields)
    FLOAT      reduce using rule 23 (selectorFields)
    FUNC       reduce using rule 23 (selectorFields)
    I32        reduce using rule 23 (selectorFields)
    I32A       reduce using rule 23 (selectorFields)
    I64        reduce using rule 23 (selectorFields)
    I64A       reduce using rule 23 (selectorFields)
    IDENT      reduce using rule 23 (selectorFields)
    IF         reduce using rule 23 (selectorFields)
    INT        reduce using rule 23 (selectorFields)
    PACKAGE    reduce using rule 23 (selectorFields)
    RBRACE     reduce using rule 23 (selectorFields)
    SFUNC      reduce using rule 23 (selectorFields)
    SPACKAGE   reduce using rule 23 (selectorFields)
    SSTRUCT    reduce using rule 23 (selectorFields)
    STEP       reduce using rule 23 (selectorFields)
    STR        reduce using rule 23 (selectorFields)
    STRING     reduce using rule 23 (selectorFields)
    TYPSTRUCT  reduce using rule 23 (selectorFields)
    VAR        reduce using rule 23 (selectorFields)
    WHILE      reduce using rule 23 (selectorFields)

state 167 // SFUNC IDENT

   27 selector: SFUNC IDENT . $@2 selectorExpressionsAndStatements
   26 $@2: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 26 ($@2)
    AFF        reduce using rule 26 ($@2)
    BOOL       reduce using rule 26 ($@2)
    BOOLA      reduce using rule 26 ($@2)
    BYTE       reduce using rule 26 ($@2)
    BYTEA      reduce using rule 26 ($@2)
    DPROGRAM   reduce using rule 26 ($@2)
    DSTACK     reduce using rule 26 ($@2)
    F32        reduce using rule 26 ($@2)
    F32A       reduce using rule 26 ($@2)
    F64        reduce using rule 26 ($@2)
    F64A       reduce using rule 26 ($@2)
    FLOAT      reduce using rule 26 ($@2)
    FUNC       reduce using rule 26 ($@2)
    I32        reduce using rule 26 ($@2)
    I32A       reduce using rule 26 ($@2)
    I64        reduce using rule 26 ($@2)
    I64A       reduce using rule 26 ($@2)
    IDENT      reduce using rule 26 ($@2)
    IF         reduce using rule 26 ($@2)
    INT        reduce using rule 26 ($@2)
    LBRACE     reduce using rule 26 ($@2)
    PACKAGE    reduce using rule 26 ($@2)
    RBRACE     reduce using rule 26 ($@2)
    SFUNC      reduce using rule 26 ($@2)
    SPACKAGE   reduce using rule 26 ($@2)
    SSTRUCT    reduce using rule 26 ($@2)
    STEP       reduce using rule 26 ($@2)
    STR        reduce using rule 26 ($@2)
    STRING     reduce using rule 26 ($@2)
    TYPSTRUCT  reduce using rule 26 ($@2)
    VAR        reduce using rule 26 ($@2)
    WHILE      reduce using rule 26 ($@2)

    $@2  goto state 168

state 168 // SFUNC IDENT [$end]

   27 selector: SFUNC IDENT $@2 . selectorExpressionsAndStatements
   20 selectorExpressionsAndStatements: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 20 (selectorExpressionsAndStatements)
    AFF        reduce using rule 20 (selectorExpressionsAndStatements)
    BOOL       reduce using rule 20 (selectorExpressionsAndStatements)
    BOOLA      reduce using rule 20 (selectorExpressionsAndStatements)
    BYTE       reduce using rule 20 (selectorExpressionsAndStatements)
    BYTEA      reduce using rule 20 (selectorExpressionsAndStatements)
    DPROGRAM   reduce using rule 20 (selectorExpressionsAndStatements)
    DSTACK     reduce using rule 20 (selectorExpressionsAndStatements)
    F32        reduce using rule 20 (selectorExpressionsAndStatements)
    F32A       reduce using rule 20 (selectorExpressionsAndStatements)
    F64        reduce using rule 20 (selectorExpressionsAndStatements)
    F64A       reduce using rule 20 (selectorExpressionsAndStatements)
    FLOAT      reduce using rule 20 (selectorExpressionsAndStatements)
    FUNC       reduce using rule 20 (selectorExpressionsAndStatements)
    I32        reduce using rule 20 (selectorExpressionsAndStatements)
    I32A       reduce using rule 20 (selectorExpressionsAndStatements)
    I64        reduce using rule 20 (selectorExpressionsAndStatements)
    I64A       reduce using rule 20 (selectorExpressionsAndStatements)
    IDENT      reduce using rule 20 (selectorExpressionsAndStatements)
    IF         reduce using rule 20 (selectorExpressionsAndStatements)
    INT        reduce using rule 20 (selectorExpressionsAndStatements)
    LBRACE     shift, and goto state 169
    PACKAGE    reduce using rule 20 (selectorExpressionsAndStatements)
    RBRACE     reduce using rule 20 (selectorExpressionsAndStatements)
    SFUNC      reduce using rule 20 (selectorExpressionsAndStatements)
    SPACKAGE   reduce using rule 20 (selectorExpressionsAndStatements)
    SSTRUCT    reduce using rule 20 (selectorExpressionsAndStatements)
    STEP       reduce using rule 20 (selectorExpressionsAndStatements)
    STR        reduce using rule 20 (selectorExpressionsAndStatements)
    STRING     reduce using rule 20 (selectorExpressionsAndStatements)
    TYPSTRUCT  reduce using rule 20 (selectorExpressionsAndStatements)
    VAR        reduce using rule 20 (selectorExpressionsAndStatements)
    WHILE      reduce using rule 20 (selectorExpressionsAndStatements)

    selectorExpressionsAndStatements  goto state 170

state 169 // SFUNC IDENT LBRACE

   21 selectorExpressionsAndStatements: LBRACE . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 171
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 170 // SFUNC IDENT [$end]

   27 selector: SFUNC IDENT $@2 selectorExpressionsAndStatements .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 27 (selector)
    AFF        reduce using rule 27 (selector)
    BOOL       reduce using rule 27 (selector)
    BOOLA      reduce using rule 27 (selector)
    BYTE       reduce using rule 27 (selector)
    BYTEA      reduce using rule 27 (selector)
    DPROGRAM   reduce using rule 27 (selector)
    DSTACK     reduce using rule 27 (selector)
    F32        reduce using rule 27 (selector)
    F32A       reduce using rule 27 (selector)
    F64        reduce using rule 27 (selector)
    F64A       reduce using rule 27 (selector)
    FLOAT      reduce using rule 27 (selector)
    FUNC       reduce using rule 27 (selector)
    I32        reduce using rule 27 (selector)
    I32A       reduce using rule 27 (selector)
    I64        reduce using rule 27 (selector)
    I64A       reduce using rule 27 (selector)
    IDENT      reduce using rule 27 (selector)
    IF         reduce using rule 27 (selector)
    INT        reduce using rule 27 (selector)
    PACKAGE    reduce using rule 27 (selector)
    RBRACE     reduce using rule 27 (selector)
    SFUNC      reduce using rule 27 (selector)
    SPACKAGE   reduce using rule 27 (selector)
    SSTRUCT    reduce using rule 27 (selector)
    STEP       reduce using rule 27 (selector)
    STR        reduce using rule 27 (selector)
    STRING     reduce using rule 27 (selector)
    TYPSTRUCT  reduce using rule 27 (selector)
    VAR        reduce using rule 27 (selector)
    WHILE      reduce using rule 27 (selector)

state 171 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN [AFF]

   21 selectorExpressionsAndStatements: LBRACE expressionsAndStatements . RBRACE
   72 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   73 expressionsAndStatements: expressionsAndStatements . assignExpression
   74 expressionsAndStatements: expressionsAndStatements . statement
   75 expressionsAndStatements: expressionsAndStatements . selector
   76 expressionsAndStatements: expressionsAndStatements . stepping
   77 expressionsAndStatements: expressionsAndStatements . debugging
   78 expressionsAndStatements: expressionsAndStatements . affordance

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 172
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 172 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN RBRACE

   21 selectorExpressionsAndStatements: LBRACE expressionsAndStatements RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 21 (selectorExpressionsAndStatements)
    AFF        reduce using rule 21 (selectorExpressionsAndStatements)
    BOOL       reduce using rule 21 (selectorExpressionsAndStatements)
    BOOLA      reduce using rule 21 (selectorExpressionsAndStatements)
    BYTE       reduce using rule 21 (selectorExpressionsAndStatements)
    BYTEA      reduce using rule 21 (selectorExpressionsAndStatements)
    DPROGRAM   reduce using rule 21 (selectorExpressionsAndStatements)
    DSTACK     reduce using rule 21 (selectorExpressionsAndStatements)
    F32        reduce using rule 21 (selectorExpressionsAndStatements)
    F32A       reduce using rule 21 (selectorExpressionsAndStatements)
    F64        reduce using rule 21 (selectorExpressionsAndStatements)
    F64A       reduce using rule 21 (selectorExpressionsAndStatements)
    FLOAT      reduce using rule 21 (selectorExpressionsAndStatements)
    FUNC       reduce using rule 21 (selectorExpressionsAndStatements)
    I32        reduce using rule 21 (selectorExpressionsAndStatements)
    I32A       reduce using rule 21 (selectorExpressionsAndStatements)
    I64        reduce using rule 21 (selectorExpressionsAndStatements)
    I64A       reduce using rule 21 (selectorExpressionsAndStatements)
    IDENT      reduce using rule 21 (selectorExpressionsAndStatements)
    IF         reduce using rule 21 (selectorExpressionsAndStatements)
    INT        reduce using rule 21 (selectorExpressionsAndStatements)
    PACKAGE    reduce using rule 21 (selectorExpressionsAndStatements)
    RBRACE     reduce using rule 21 (selectorExpressionsAndStatements)
    SFUNC      reduce using rule 21 (selectorExpressionsAndStatements)
    SPACKAGE   reduce using rule 21 (selectorExpressionsAndStatements)
    SSTRUCT    reduce using rule 21 (selectorExpressionsAndStatements)
    STEP       reduce using rule 21 (selectorExpressionsAndStatements)
    STR        reduce using rule 21 (selectorExpressionsAndStatements)
    STRING     reduce using rule 21 (selectorExpressionsAndStatements)
    TYPSTRUCT  reduce using rule 21 (selectorExpressionsAndStatements)
    VAR        reduce using rule 21 (selectorExpressionsAndStatements)
    WHILE      reduce using rule 21 (selectorExpressionsAndStatements)

state 173 // SPACKAGE IDENT

   25 selector: SPACKAGE IDENT . $@1 selectorLines
   24 $@1: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 24 ($@1)
    AFF        reduce using rule 24 ($@1)
    BOOL       reduce using rule 24 ($@1)
    BOOLA      reduce using rule 24 ($@1)
    BYTE       reduce using rule 24 ($@1)
    BYTEA      reduce using rule 24 ($@1)
    DPROGRAM   reduce using rule 24 ($@1)
    DSTACK     reduce using rule 24 ($@1)
    F32        reduce using rule 24 ($@1)
    F32A       reduce using rule 24 ($@1)
    F64        reduce using rule 24 ($@1)
    F64A       reduce using rule 24 ($@1)
    FLOAT      reduce using rule 24 ($@1)
    FUNC       reduce using rule 24 ($@1)
    I32        reduce using rule 24 ($@1)
    I32A       reduce using rule 24 ($@1)
    I64        reduce using rule 24 ($@1)
    I64A       reduce using rule 24 ($@1)
    IDENT      reduce using rule 24 ($@1)
    IF         reduce using rule 24 ($@1)
    INT        reduce using rule 24 ($@1)
    LBRACE     reduce using rule 24 ($@1)
    PACKAGE    reduce using rule 24 ($@1)
    RBRACE     reduce using rule 24 ($@1)
    SFUNC      reduce using rule 24 ($@1)
    SPACKAGE   reduce using rule 24 ($@1)
    SSTRUCT    reduce using rule 24 ($@1)
    STEP       reduce using rule 24 ($@1)
    STR        reduce using rule 24 ($@1)
    STRING     reduce using rule 24 ($@1)
    TYPSTRUCT  reduce using rule 24 ($@1)
    VAR        reduce using rule 24 ($@1)
    WHILE      reduce using rule 24 ($@1)

    $@1  goto state 174

state 174 // SPACKAGE IDENT [$end]

   25 selector: SPACKAGE IDENT $@1 . selectorLines
   11 selectorLines: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 11 (selectorLines)
    AFF        reduce using rule 11 (selectorLines)
    BOOL       reduce using rule 11 (selectorLines)
    BOOLA      reduce using rule 11 (selectorLines)
    BYTE       reduce using rule 11 (selectorLines)
    BYTEA      reduce using rule 11 (selectorLines)
    DPROGRAM   reduce using rule 11 (selectorLines)
    DSTACK     reduce using rule 11 (selectorLines)
    F32        reduce using rule 11 (selectorLines)
    F32A       reduce using rule 11 (selectorLines)
    F64        reduce using rule 11 (selectorLines)
    F64A       reduce using rule 11 (selectorLines)
    FLOAT      reduce using rule 11 (selectorLines)
    FUNC       reduce using rule 11 (selectorLines)
    I32        reduce using rule 11 (selectorLines)
    I32A       reduce using rule 11 (selectorLines)
    I64        reduce using rule 11 (selectorLines)
    I64A       reduce using rule 11 (selectorLines)
    IDENT      reduce using rule 11 (selectorLines)
    IF         reduce using rule 11 (selectorLines)
    INT        reduce using rule 11 (selectorLines)
    LBRACE     shift, and goto state 175
    PACKAGE    reduce using rule 11 (selectorLines)
    RBRACE     reduce using rule 11 (selectorLines)
    SFUNC      reduce using rule 11 (selectorLines)
    SPACKAGE   reduce using rule 11 (selectorLines)
    SSTRUCT    reduce using rule 11 (selectorLines)
    STEP       reduce using rule 11 (selectorLines)
    STR        reduce using rule 11 (selectorLines)
    STRING     reduce using rule 11 (selectorLines)
    TYPSTRUCT  reduce using rule 11 (selectorLines)
    VAR        reduce using rule 11 (selectorLines)
    WHILE      reduce using rule 11 (selectorLines)

    selectorLines  goto state 176

state 175 // SPACKAGE IDENT LBRACE

   12 selectorLines: LBRACE . lines RBRACE
    1 lines: .  [AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    AFF        reduce using rule 1 (lines)
    DPROGRAM   reduce using rule 1 (lines)
    DSTACK     reduce using rule 1 (lines)
    FUNC       reduce using rule 1 (lines)
    PACKAGE    reduce using rule 1 (lines)
    RBRACE     reduce using rule 1 (lines)
    SFUNC      reduce using rule 1 (lines)
    SPACKAGE   reduce using rule 1 (lines)
    SSTRUCT    reduce using rule 1 (lines)
    STEP       reduce using rule 1 (lines)
    TYPSTRUCT  reduce using rule 1 (lines)
    VAR        reduce using rule 1 (lines)

    lines  goto state 177

state 176 // SPACKAGE IDENT [$end]

   25 selector: SPACKAGE IDENT $@1 selectorLines .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 25 (selector)
    AFF        reduce using rule 25 (selector)
    BOOL       reduce using rule 25 (selector)
    BOOLA      reduce using rule 25 (selector)
    BYTE       reduce using rule 25 (selector)
    BYTEA      reduce using rule 25 (selector)
    DPROGRAM   reduce using rule 25 (selector)
    DSTACK     reduce using rule 25 (selector)
    F32        reduce using rule 25 (selector)
    F32A       reduce using rule 25 (selector)
    F64        reduce using rule 25 (selector)
    F64A       reduce using rule 25 (selector)
    FLOAT      reduce using rule 25 (selector)
    FUNC       reduce using rule 25 (selector)
    I32        reduce using rule 25 (selector)
    I32A       reduce using rule 25 (selector)
    I64        reduce using rule 25 (selector)
    I64A       reduce using rule 25 (selector)
    IDENT      reduce using rule 25 (selector)
    IF         reduce using rule 25 (selector)
    INT        reduce using rule 25 (selector)
    PACKAGE    reduce using rule 25 (selector)
    RBRACE     reduce using rule 25 (selector)
    SFUNC      reduce using rule 25 (selector)
    SPACKAGE   reduce using rule 25 (selector)
    SSTRUCT    reduce using rule 25 (selector)
    STEP       reduce using rule 25 (selector)
    STR        reduce using rule 25 (selector)
    STRING     reduce using rule 25 (selector)
    TYPSTRUCT  reduce using rule 25 (selector)
    VAR        reduce using rule 25 (selector)
    WHILE      reduce using rule 25 (selector)

state 177 // SPACKAGE IDENT LBRACE [AFF]

    2 lines: lines . line
   12 selectorLines: LBRACE lines . RBRACE

    AFF        shift, and goto state 11
    DPROGRAM   shift, and goto state 14
    DSTACK     shift, and goto state 13
    FUNC       shift, and goto state 21
    PACKAGE    shift, and goto state 18
    RBRACE     shift, and goto state 178
    SFUNC      shift, and goto state 16
    SPACKAGE   shift, and goto state 15
    SSTRUCT    shift, and goto state 17
    STEP       shift, and goto state 12
    TYPSTRUCT  shift, and goto state 20
    VAR        shift, and goto state 19

    affordance             goto state 10
    debugging              goto state 9
    definitionDeclaration  goto state 3
    functionDeclaration    goto state 6
    line                   goto state 2
    packageDeclaration     goto state 5
    selector               goto state 7
    stepping               goto state 8
    structDeclaration      goto state 4

state 178 // SPACKAGE IDENT LBRACE RBRACE

   12 selectorLines: LBRACE lines RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 12 (selectorLines)
    AFF        reduce using rule 12 (selectorLines)
    BOOL       reduce using rule 12 (selectorLines)
    BOOLA      reduce using rule 12 (selectorLines)
    BYTE       reduce using rule 12 (selectorLines)
    BYTEA      reduce using rule 12 (selectorLines)
    DPROGRAM   reduce using rule 12 (selectorLines)
    DSTACK     reduce using rule 12 (selectorLines)
    F32        reduce using rule 12 (selectorLines)
    F32A       reduce using rule 12 (selectorLines)
    F64        reduce using rule 12 (selectorLines)
    F64A       reduce using rule 12 (selectorLines)
    FLOAT      reduce using rule 12 (selectorLines)
    FUNC       reduce using rule 12 (selectorLines)
    I32        reduce using rule 12 (selectorLines)
    I32A       reduce using rule 12 (selectorLines)
    I64        reduce using rule 12 (selectorLines)
    I64A       reduce using rule 12 (selectorLines)
    IDENT      reduce using rule 12 (selectorLines)
    IF         reduce using rule 12 (selectorLines)
    INT        reduce using rule 12 (selectorLines)
    PACKAGE    reduce using rule 12 (selectorLines)
    RBRACE     reduce using rule 12 (selectorLines)
    SFUNC      reduce using rule 12 (selectorLines)
    SPACKAGE   reduce using rule 12 (selectorLines)
    SSTRUCT    reduce using rule 12 (selectorLines)
    STEP       reduce using rule 12 (selectorLines)
    STR        reduce using rule 12 (selectorLines)
    STRING     reduce using rule 12 (selectorLines)
    TYPSTRUCT  reduce using rule 12 (selectorLines)
    VAR        reduce using rule 12 (selectorLines)
    WHILE      reduce using rule 12 (selectorLines)

state 179 // DPROGRAM BOOLEAN

   19 debugging: DPROGRAM BOOLEAN .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 19 (debugging)
    AFF        reduce using rule 19 (debugging)
    BOOL       reduce using rule 19 (debugging)
    BOOLA      reduce using rule 19 (debugging)
    BYTE       reduce using rule 19 (debugging)
    BYTEA      reduce using rule 19 (debugging)
    DPROGRAM   reduce using rule 19 (debugging)
    DSTACK     reduce using rule 19 (debugging)
    F32        reduce using rule 19 (debugging)
    F32A       reduce using rule 19 (debugging)
    F64        reduce using rule 19 (debugging)
    F64A       reduce using rule 19 (debugging)
    FLOAT      reduce using rule 19 (debugging)
    FUNC       reduce using rule 19 (debugging)
    I32        reduce using rule 19 (debugging)
    I32A       reduce using rule 19 (debugging)
    I64        reduce using rule 19 (debugging)
    I64A       reduce using rule 19 (debugging)
    IDENT      reduce using rule 19 (debugging)
    IF         reduce using rule 19 (debugging)
    INT        reduce using rule 19 (debugging)
    PACKAGE    reduce using rule 19 (debugging)
    RBRACE     reduce using rule 19 (debugging)
    SFUNC      reduce using rule 19 (debugging)
    SPACKAGE   reduce using rule 19 (debugging)
    SSTRUCT    reduce using rule 19 (debugging)
    STEP       reduce using rule 19 (debugging)
    STR        reduce using rule 19 (debugging)
    STRING     reduce using rule 19 (debugging)
    TYPSTRUCT  reduce using rule 19 (debugging)
    VAR        reduce using rule 19 (debugging)
    WHILE      reduce using rule 19 (debugging)

state 180 // DSTACK BOOLEAN

   18 debugging: DSTACK BOOLEAN .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 18 (debugging)
    AFF        reduce using rule 18 (debugging)
    BOOL       reduce using rule 18 (debugging)
    BOOLA      reduce using rule 18 (debugging)
    BYTE       reduce using rule 18 (debugging)
    BYTEA      reduce using rule 18 (debugging)
    DPROGRAM   reduce using rule 18 (debugging)
    DSTACK     reduce using rule 18 (debugging)
    F32        reduce using rule 18 (debugging)
    F32A       reduce using rule 18 (debugging)
    F64        reduce using rule 18 (debugging)
    F64A       reduce using rule 18 (debugging)
    FLOAT      reduce using rule 18 (debugging)
    FUNC       reduce using rule 18 (debugging)
    I32        reduce using rule 18 (debugging)
    I32A       reduce using rule 18 (debugging)
    I64        reduce using rule 18 (debugging)
    I64A       reduce using rule 18 (debugging)
    IDENT      reduce using rule 18 (debugging)
    IF         reduce using rule 18 (debugging)
    INT        reduce using rule 18 (debugging)
    PACKAGE    reduce using rule 18 (debugging)
    RBRACE     reduce using rule 18 (debugging)
    SFUNC      reduce using rule 18 (debugging)
    SPACKAGE   reduce using rule 18 (debugging)
    SSTRUCT    reduce using rule 18 (debugging)
    STEP       reduce using rule 18 (debugging)
    STR        reduce using rule 18 (debugging)
    STRING     reduce using rule 18 (debugging)
    TYPSTRUCT  reduce using rule 18 (debugging)
    VAR        reduce using rule 18 (debugging)
    WHILE      reduce using rule 18 (debugging)

state 181 // STEP INT

   17 stepping: STEP INT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 17 (stepping)
    AFF        reduce using rule 17 (stepping)
    BOOL       reduce using rule 17 (stepping)
    BOOLA      reduce using rule 17 (stepping)
    BYTE       reduce using rule 17 (stepping)
    BYTEA      reduce using rule 17 (stepping)
    DPROGRAM   reduce using rule 17 (stepping)
    DSTACK     reduce using rule 17 (stepping)
    F32        reduce using rule 17 (stepping)
    F32A       reduce using rule 17 (stepping)
    F64        reduce using rule 17 (stepping)
    F64A       reduce using rule 17 (stepping)
    FLOAT      reduce using rule 17 (stepping)
    FUNC       reduce using rule 17 (stepping)
    I32        reduce using rule 17 (stepping)
    I32A       reduce using rule 17 (stepping)
    I64        reduce using rule 17 (stepping)
    I64A       reduce using rule 17 (stepping)
    IDENT      reduce using rule 17 (stepping)
    IF         reduce using rule 17 (stepping)
    INT        reduce using rule 17 (stepping)
    PACKAGE    reduce using rule 17 (stepping)
    RBRACE     reduce using rule 17 (stepping)
    SFUNC      reduce using rule 17 (stepping)
    SPACKAGE   reduce using rule 17 (stepping)
    SSTRUCT    reduce using rule 17 (stepping)
    STEP       reduce using rule 17 (stepping)
    STR        reduce using rule 17 (stepping)
    STRING     reduce using rule 17 (stepping)
    TYPSTRUCT  reduce using rule 17 (stepping)
    VAR        reduce using rule 17 (stepping)
    WHILE      reduce using rule 17 (stepping)

state 182 // AFF FUNC

   13 affordance: AFF FUNC . IDENT
   14 affordance: AFF FUNC . IDENT LBRACE INT RBRACE
   15 affordance: AFF FUNC . IDENT LBRACE STRING RBRACE
   16 affordance: AFF FUNC . IDENT LBRACE STRING INT RBRACE

    IDENT  shift, and goto state 183

state 183 // AFF FUNC IDENT

   13 affordance: AFF FUNC IDENT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]
   14 affordance: AFF FUNC IDENT . LBRACE INT RBRACE
   15 affordance: AFF FUNC IDENT . LBRACE STRING RBRACE
   16 affordance: AFF FUNC IDENT . LBRACE STRING INT RBRACE

    $end       reduce using rule 13 (affordance)
    AFF        reduce using rule 13 (affordance)
    BOOL       reduce using rule 13 (affordance)
    BOOLA      reduce using rule 13 (affordance)
    BYTE       reduce using rule 13 (affordance)
    BYTEA      reduce using rule 13 (affordance)
    DPROGRAM   reduce using rule 13 (affordance)
    DSTACK     reduce using rule 13 (affordance)
    F32        reduce using rule 13 (affordance)
    F32A       reduce using rule 13 (affordance)
    F64        reduce using rule 13 (affordance)
    F64A       reduce using rule 13 (affordance)
    FLOAT      reduce using rule 13 (affordance)
    FUNC       reduce using rule 13 (affordance)
    I32        reduce using rule 13 (affordance)
    I32A       reduce using rule 13 (affordance)
    I64        reduce using rule 13 (affordance)
    I64A       reduce using rule 13 (affordance)
    IDENT      reduce using rule 13 (affordance)
    IF         reduce using rule 13 (affordance)
    INT        reduce using rule 13 (affordance)
    LBRACE     shift, and goto state 184
    PACKAGE    reduce using rule 13 (affordance)
    RBRACE     reduce using rule 13 (affordance)
    SFUNC      reduce using rule 13 (affordance)
    SPACKAGE   reduce using rule 13 (affordance)
    SSTRUCT    reduce using rule 13 (affordance)
    STEP       reduce using rule 13 (affordance)
    STR        reduce using rule 13 (affordance)
    STRING     reduce using rule 13 (affordance)
    TYPSTRUCT  reduce using rule 13 (affordance)
    VAR        reduce using rule 13 (affordance)
    WHILE      reduce using rule 13 (affordance)

state 184 // AFF FUNC IDENT LBRACE

   14 affordance: AFF FUNC IDENT LBRACE . INT RBRACE
   15 affordance: AFF FUNC IDENT LBRACE . STRING RBRACE
   16 affordance: AFF FUNC IDENT LBRACE . STRING INT RBRACE

    INT     shift, and goto state 185
    STRING  shift, and goto state 186

state 185 // AFF FUNC IDENT LBRACE INT

   14 affordance: AFF FUNC IDENT LBRACE INT . RBRACE

    RBRACE  shift, and goto state 190

state 186 // AFF FUNC IDENT LBRACE STRING

   15 affordance: AFF FUNC IDENT LBRACE STRING . RBRACE
   16 affordance: AFF FUNC IDENT LBRACE STRING . INT RBRACE

    INT     shift, and goto state 188
    RBRACE  shift, and goto state 187

state 187 // AFF FUNC IDENT LBRACE STRING RBRACE

   15 affordance: AFF FUNC IDENT LBRACE STRING RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 15 (affordance)
    AFF        reduce using rule 15 (affordance)
    BOOL       reduce using rule 15 (affordance)
    BOOLA      reduce using rule 15 (affordance)
    BYTE       reduce using rule 15 (affordance)
    BYTEA      reduce using rule 15 (affordance)
    DPROGRAM   reduce using rule 15 (affordance)
    DSTACK     reduce using rule 15 (affordance)
    F32        reduce using rule 15 (affordance)
    F32A       reduce using rule 15 (affordance)
    F64        reduce using rule 15 (affordance)
    F64A       reduce using rule 15 (affordance)
    FLOAT      reduce using rule 15 (affordance)
    FUNC       reduce using rule 15 (affordance)
    I32        reduce using rule 15 (affordance)
    I32A       reduce using rule 15 (affordance)
    I64        reduce using rule 15 (affordance)
    I64A       reduce using rule 15 (affordance)
    IDENT      reduce using rule 15 (affordance)
    IF         reduce using rule 15 (affordance)
    INT        reduce using rule 15 (affordance)
    PACKAGE    reduce using rule 15 (affordance)
    RBRACE     reduce using rule 15 (affordance)
    SFUNC      reduce using rule 15 (affordance)
    SPACKAGE   reduce using rule 15 (affordance)
    SSTRUCT    reduce using rule 15 (affordance)
    STEP       reduce using rule 15 (affordance)
    STR        reduce using rule 15 (affordance)
    STRING     reduce using rule 15 (affordance)
    TYPSTRUCT  reduce using rule 15 (affordance)
    VAR        reduce using rule 15 (affordance)
    WHILE      reduce using rule 15 (affordance)

state 188 // AFF FUNC IDENT LBRACE STRING INT

   16 affordance: AFF FUNC IDENT LBRACE STRING INT . RBRACE

    RBRACE  shift, and goto state 189

state 189 // AFF FUNC IDENT LBRACE STRING INT RBRACE

   16 affordance: AFF FUNC IDENT LBRACE STRING INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 16 (affordance)
    AFF        reduce using rule 16 (affordance)
    BOOL       reduce using rule 16 (affordance)
    BOOLA      reduce using rule 16 (affordance)
    BYTE       reduce using rule 16 (affordance)
    BYTEA      reduce using rule 16 (affordance)
    DPROGRAM   reduce using rule 16 (affordance)
    DSTACK     reduce using rule 16 (affordance)
    F32        reduce using rule 16 (affordance)
    F32A       reduce using rule 16 (affordance)
    F64        reduce using rule 16 (affordance)
    F64A       reduce using rule 16 (affordance)
    FLOAT      reduce using rule 16 (affordance)
    FUNC       reduce using rule 16 (affordance)
    I32        reduce using rule 16 (affordance)
    I32A       reduce using rule 16 (affordance)
    I64        reduce using rule 16 (affordance)
    I64A       reduce using rule 16 (affordance)
    IDENT      reduce using rule 16 (affordance)
    IF         reduce using rule 16 (affordance)
    INT        reduce using rule 16 (affordance)
    PACKAGE    reduce using rule 16 (affordance)
    RBRACE     reduce using rule 16 (affordance)
    SFUNC      reduce using rule 16 (affordance)
    SPACKAGE   reduce using rule 16 (affordance)
    SSTRUCT    reduce using rule 16 (affordance)
    STEP       reduce using rule 16 (affordance)
    STR        reduce using rule 16 (affordance)
    STRING     reduce using rule 16 (affordance)
    TYPSTRUCT  reduce using rule 16 (affordance)
    VAR        reduce using rule 16 (affordance)
    WHILE      reduce using rule 16 (affordance)

state 190 // AFF FUNC IDENT LBRACE INT RBRACE

   14 affordance: AFF FUNC IDENT LBRACE INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 14 (affordance)
    AFF        reduce using rule 14 (affordance)
    BOOL       reduce using rule 14 (affordance)
    BOOLA      reduce using rule 14 (affordance)
    BYTE       reduce using rule 14 (affordance)
    BYTEA      reduce using rule 14 (affordance)
    DPROGRAM   reduce using rule 14 (affordance)
    DSTACK     reduce using rule 14 (affordance)
    F32        reduce using rule 14 (affordance)
    F32A       reduce using rule 14 (affordance)
    F64        reduce using rule 14 (affordance)
    F64A       reduce using rule 14 (affordance)
    FLOAT      reduce using rule 14 (affordance)
    FUNC       reduce using rule 14 (affordance)
    I32        reduce using rule 14 (affordance)
    I32A       reduce using rule 14 (affordance)
    I64        reduce using rule 14 (affordance)
    I64A       reduce using rule 14 (affordance)
    IDENT      reduce using rule 14 (affordance)
    IF         reduce using rule 14 (affordance)
    INT        reduce using rule 14 (affordance)
    PACKAGE    reduce using rule 14 (affordance)
    RBRACE     reduce using rule 14 (affordance)
    SFUNC      reduce using rule 14 (affordance)
    SPACKAGE   reduce using rule 14 (affordance)
    SSTRUCT    reduce using rule 14 (affordance)
    STEP       reduce using rule 14 (affordance)
    STR        reduce using rule 14 (affordance)
    STRING     reduce using rule 14 (affordance)
    TYPSTRUCT  reduce using rule 14 (affordance)
    VAR        reduce using rule 14 (affordance)
    WHILE      reduce using rule 14 (affordance)

