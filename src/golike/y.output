state 0 //

    0 $accept: . lines
    1 lines: .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 1 (lines)
    AFF        reduce using rule 1 (lines)
    DPROGRAM   reduce using rule 1 (lines)
    DSTACK     reduce using rule 1 (lines)
    FUNC       reduce using rule 1 (lines)
    PACKAGE    reduce using rule 1 (lines)
    SFUNC      reduce using rule 1 (lines)
    SPACKAGE   reduce using rule 1 (lines)
    SSTRUCT    reduce using rule 1 (lines)
    STEP       reduce using rule 1 (lines)
    TYPSTRUCT  reduce using rule 1 (lines)
    VAR        reduce using rule 1 (lines)

    lines  goto state 1

state 1 // [$end]

    0 $accept: lines .  [$end]
    2 lines: lines . line

    $end       accept
    AFF        shift, and goto state 11
    DPROGRAM   shift, and goto state 14
    DSTACK     shift, and goto state 13
    FUNC       shift, and goto state 21
    PACKAGE    shift, and goto state 18
    SFUNC      shift, and goto state 16
    SPACKAGE   shift, and goto state 15
    SSTRUCT    shift, and goto state 17
    STEP       shift, and goto state 12
    TYPSTRUCT  shift, and goto state 20
    VAR        shift, and goto state 19

    affordance             goto state 10
    debugging              goto state 9
    definitionDeclaration  goto state 3
    functionDeclaration    goto state 6
    line                   goto state 2
    packageDeclaration     goto state 5
    selector               goto state 7
    stepping               goto state 8
    structDeclaration      goto state 4

state 2 // AFF EXPR [$end]

    2 lines: lines line .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 2 (lines)
    AFF        reduce using rule 2 (lines)
    DPROGRAM   reduce using rule 2 (lines)
    DSTACK     reduce using rule 2 (lines)
    FUNC       reduce using rule 2 (lines)
    PACKAGE    reduce using rule 2 (lines)
    RBRACE     reduce using rule 2 (lines)
    SFUNC      reduce using rule 2 (lines)
    SPACKAGE   reduce using rule 2 (lines)
    SSTRUCT    reduce using rule 2 (lines)
    STEP       reduce using rule 2 (lines)
    TYPSTRUCT  reduce using rule 2 (lines)
    VAR        reduce using rule 2 (lines)

state 3 // VAR IDENT BOOL [$end]

    3 line: definitionDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 3 (line)
    AFF        reduce using rule 3 (line)
    DPROGRAM   reduce using rule 3 (line)
    DSTACK     reduce using rule 3 (line)
    FUNC       reduce using rule 3 (line)
    PACKAGE    reduce using rule 3 (line)
    RBRACE     reduce using rule 3 (line)
    SFUNC      reduce using rule 3 (line)
    SPACKAGE   reduce using rule 3 (line)
    SSTRUCT    reduce using rule 3 (line)
    STEP       reduce using rule 3 (line)
    TYPSTRUCT  reduce using rule 3 (line)
    VAR        reduce using rule 3 (line)

state 4 // TYPSTRUCT IDENT STRUCT LBRACE RBRACE [$end]

    4 line: structDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 4 (line)
    AFF        reduce using rule 4 (line)
    DPROGRAM   reduce using rule 4 (line)
    DSTACK     reduce using rule 4 (line)
    FUNC       reduce using rule 4 (line)
    PACKAGE    reduce using rule 4 (line)
    RBRACE     reduce using rule 4 (line)
    SFUNC      reduce using rule 4 (line)
    SPACKAGE   reduce using rule 4 (line)
    SSTRUCT    reduce using rule 4 (line)
    STEP       reduce using rule 4 (line)
    TYPSTRUCT  reduce using rule 4 (line)
    VAR        reduce using rule 4 (line)

state 5 // PACKAGE IDENT [$end]

    5 line: packageDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 5 (line)
    AFF        reduce using rule 5 (line)
    DPROGRAM   reduce using rule 5 (line)
    DSTACK     reduce using rule 5 (line)
    FUNC       reduce using rule 5 (line)
    PACKAGE    reduce using rule 5 (line)
    RBRACE     reduce using rule 5 (line)
    SFUNC      reduce using rule 5 (line)
    SPACKAGE   reduce using rule 5 (line)
    SSTRUCT    reduce using rule 5 (line)
    STEP       reduce using rule 5 (line)
    TYPSTRUCT  reduce using rule 5 (line)
    VAR        reduce using rule 5 (line)

state 6 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE RBRACE [$end]

    6 line: functionDeclaration .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 6 (line)
    AFF        reduce using rule 6 (line)
    DPROGRAM   reduce using rule 6 (line)
    DSTACK     reduce using rule 6 (line)
    FUNC       reduce using rule 6 (line)
    PACKAGE    reduce using rule 6 (line)
    RBRACE     reduce using rule 6 (line)
    SFUNC      reduce using rule 6 (line)
    SPACKAGE   reduce using rule 6 (line)
    SSTRUCT    reduce using rule 6 (line)
    STEP       reduce using rule 6 (line)
    TYPSTRUCT  reduce using rule 6 (line)
    VAR        reduce using rule 6 (line)

state 7 // SFUNC IDENT [$end]

    7 line: selector .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 7 (line)
    AFF        reduce using rule 7 (line)
    DPROGRAM   reduce using rule 7 (line)
    DSTACK     reduce using rule 7 (line)
    FUNC       reduce using rule 7 (line)
    PACKAGE    reduce using rule 7 (line)
    RBRACE     reduce using rule 7 (line)
    SFUNC      reduce using rule 7 (line)
    SPACKAGE   reduce using rule 7 (line)
    SSTRUCT    reduce using rule 7 (line)
    STEP       reduce using rule 7 (line)
    TYPSTRUCT  reduce using rule 7 (line)
    VAR        reduce using rule 7 (line)

state 8 // STEP INT [$end]

    8 line: stepping .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 8 (line)
    AFF        reduce using rule 8 (line)
    DPROGRAM   reduce using rule 8 (line)
    DSTACK     reduce using rule 8 (line)
    FUNC       reduce using rule 8 (line)
    PACKAGE    reduce using rule 8 (line)
    RBRACE     reduce using rule 8 (line)
    SFUNC      reduce using rule 8 (line)
    SPACKAGE   reduce using rule 8 (line)
    SSTRUCT    reduce using rule 8 (line)
    STEP       reduce using rule 8 (line)
    TYPSTRUCT  reduce using rule 8 (line)
    VAR        reduce using rule 8 (line)

state 9 // DPROGRAM BOOLEAN [$end]

    9 line: debugging .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 9 (line)
    AFF        reduce using rule 9 (line)
    DPROGRAM   reduce using rule 9 (line)
    DSTACK     reduce using rule 9 (line)
    FUNC       reduce using rule 9 (line)
    PACKAGE    reduce using rule 9 (line)
    RBRACE     reduce using rule 9 (line)
    SFUNC      reduce using rule 9 (line)
    SPACKAGE   reduce using rule 9 (line)
    SSTRUCT    reduce using rule 9 (line)
    STEP       reduce using rule 9 (line)
    TYPSTRUCT  reduce using rule 9 (line)
    VAR        reduce using rule 9 (line)

state 10 // AFF EXPR [$end]

   10 line: affordance .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 10 (line)
    AFF        reduce using rule 10 (line)
    DPROGRAM   reduce using rule 10 (line)
    DSTACK     reduce using rule 10 (line)
    FUNC       reduce using rule 10 (line)
    PACKAGE    reduce using rule 10 (line)
    RBRACE     reduce using rule 10 (line)
    SFUNC      reduce using rule 10 (line)
    SPACKAGE   reduce using rule 10 (line)
    SSTRUCT    reduce using rule 10 (line)
    STEP       reduce using rule 10 (line)
    TYPSTRUCT  reduce using rule 10 (line)
    VAR        reduce using rule 10 (line)

state 11 // AFF

   13 affordance: AFF . FUNC IDENT
   14 affordance: AFF . FUNC IDENT LBRACE INT RBRACE
   15 affordance: AFF . FUNC IDENT LBRACE STRING RBRACE
   16 affordance: AFF . FUNC IDENT LBRACE STRING INT RBRACE
   17 affordance: AFF . PACKAGE IDENT
   18 affordance: AFF . PACKAGE IDENT LBRACE INT RBRACE
   19 affordance: AFF . PACKAGE IDENT LBRACE STRING RBRACE
   20 affordance: AFF . PACKAGE IDENT LBRACE STRING INT RBRACE
   21 affordance: AFF . STRUCT IDENT
   22 affordance: AFF . STRUCT IDENT LBRACE INT RBRACE
   23 affordance: AFF . STRUCT IDENT LBRACE STRING RBRACE
   24 affordance: AFF . STRUCT IDENT LBRACE STRING INT RBRACE
   25 affordance: AFF . EXPR
   26 affordance: AFF . EXPR LBRACE INT RBRACE
   27 affordance: AFF . EXPR LBRACE STRING RBRACE
   28 affordance: AFF . EXPR LBRACE STRING INT RBRACE

    EXPR     shift, and goto state 185
    FUNC     shift, and goto state 182
    PACKAGE  shift, and goto state 183
    STRUCT   shift, and goto state 184

state 12 // STEP

   29 stepping: STEP . INT

    INT  shift, and goto state 181

state 13 // DSTACK

   30 debugging: DSTACK . BOOLEAN

    BOOLEAN  shift, and goto state 180

state 14 // DPROGRAM

   31 debugging: DPROGRAM . BOOLEAN

    BOOLEAN  shift, and goto state 179

state 15 // SPACKAGE

   37 selector: SPACKAGE . IDENT $@1 selectorLines

    IDENT  shift, and goto state 173

state 16 // SFUNC

   39 selector: SFUNC . IDENT $@2 selectorExpressionsAndStatements

    IDENT  shift, and goto state 167

state 17 // SSTRUCT

   41 selector: SSTRUCT . IDENT $@3 selectorFields

    IDENT  shift, and goto state 161

state 18 // PACKAGE

   57 packageDeclaration: PACKAGE . IDENT

    IDENT  shift, and goto state 160

state 19 // VAR

   60 definitionDeclaration: VAR . IDENT typeSpecifier definitionAssignment
   61 definitionDeclaration: VAR . IDENT IDENT

    IDENT  shift, and goto state 156

state 20 // TYPSTRUCT

   67 structDeclaration: TYPSTRUCT . IDENT $@4 STRUCT structFields

    IDENT  shift, and goto state 146

state 21 // FUNC

   71 functionDeclaration: FUNC . IDENT functionParameters functionParameters $@5 functionStatements

    IDENT  shift, and goto state 22

state 22 // FUNC IDENT

   71 functionDeclaration: FUNC IDENT . functionParameters functionParameters $@5 functionStatements

    LPAREN  shift, and goto state 23

    functionParameters  goto state 24

state 23 // FUNC IDENT LPAREN

   68 functionParameters: LPAREN . parameters RPAREN
   69 functionParameters: LPAREN . RPAREN

    IDENT   shift, and goto state 140
    RPAREN  shift, and goto state 139

    parameter   goto state 141
    parameters  goto state 138

state 24 // FUNC IDENT LPAREN RPAREN [LPAREN]

   71 functionDeclaration: FUNC IDENT functionParameters . functionParameters $@5 functionStatements

    LPAREN  shift, and goto state 23

    functionParameters  goto state 25

state 25 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN [LBRACE]

   71 functionDeclaration: FUNC IDENT functionParameters functionParameters . $@5 functionStatements
   70 $@5: .  [LBRACE]

    LBRACE  reduce using rule 70 ($@5)

    $@5  goto state 26

state 26 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN [LBRACE]

   71 functionDeclaration: FUNC IDENT functionParameters functionParameters $@5 . functionStatements

    LBRACE  shift, and goto state 28

    functionStatements  goto state 27

state 27 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE RBRACE [$end]

   71 functionDeclaration: FUNC IDENT functionParameters functionParameters $@5 functionStatements .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 71 (functionDeclaration)
    AFF        reduce using rule 71 (functionDeclaration)
    DPROGRAM   reduce using rule 71 (functionDeclaration)
    DSTACK     reduce using rule 71 (functionDeclaration)
    FUNC       reduce using rule 71 (functionDeclaration)
    PACKAGE    reduce using rule 71 (functionDeclaration)
    RBRACE     reduce using rule 71 (functionDeclaration)
    SFUNC      reduce using rule 71 (functionDeclaration)
    SPACKAGE   reduce using rule 71 (functionDeclaration)
    SSTRUCT    reduce using rule 71 (functionDeclaration)
    STEP       reduce using rule 71 (functionDeclaration)
    TYPSTRUCT  reduce using rule 71 (functionDeclaration)
    VAR        reduce using rule 71 (functionDeclaration)

state 28 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE

   75 functionStatements: LBRACE . expressionsAndStatements RBRACE
   76 functionStatements: LBRACE . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 43
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 42
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 29 // VAR IDENT I32

   44 typeSpecifier: I32 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 44 (typeSpecifier)
    AFF        reduce using rule 44 (typeSpecifier)
    ASSIGN     reduce using rule 44 (typeSpecifier)
    BOOL       reduce using rule 44 (typeSpecifier)
    BOOLA      reduce using rule 44 (typeSpecifier)
    BYTE       reduce using rule 44 (typeSpecifier)
    BYTEA      reduce using rule 44 (typeSpecifier)
    CASSIGN    reduce using rule 44 (typeSpecifier)
    COMMA      reduce using rule 44 (typeSpecifier)
    DPROGRAM   reduce using rule 44 (typeSpecifier)
    DSTACK     reduce using rule 44 (typeSpecifier)
    F32        reduce using rule 44 (typeSpecifier)
    F32A       reduce using rule 44 (typeSpecifier)
    F64        reduce using rule 44 (typeSpecifier)
    F64A       reduce using rule 44 (typeSpecifier)
    FLOAT      reduce using rule 44 (typeSpecifier)
    FUNC       reduce using rule 44 (typeSpecifier)
    I32        reduce using rule 44 (typeSpecifier)
    I32A       reduce using rule 44 (typeSpecifier)
    I64        reduce using rule 44 (typeSpecifier)
    I64A       reduce using rule 44 (typeSpecifier)
    IDENT      reduce using rule 44 (typeSpecifier)
    IF         reduce using rule 44 (typeSpecifier)
    INT        reduce using rule 44 (typeSpecifier)
    LBRACE     reduce using rule 44 (typeSpecifier)
    PACKAGE    reduce using rule 44 (typeSpecifier)
    RBRACE     reduce using rule 44 (typeSpecifier)
    RPAREN     reduce using rule 44 (typeSpecifier)
    SFUNC      reduce using rule 44 (typeSpecifier)
    SPACKAGE   reduce using rule 44 (typeSpecifier)
    SSTRUCT    reduce using rule 44 (typeSpecifier)
    STEP       reduce using rule 44 (typeSpecifier)
    STR        reduce using rule 44 (typeSpecifier)
    STRING     reduce using rule 44 (typeSpecifier)
    TYPSTRUCT  reduce using rule 44 (typeSpecifier)
    VAR        reduce using rule 44 (typeSpecifier)
    WHILE      reduce using rule 44 (typeSpecifier)

state 30 // VAR IDENT I64

   45 typeSpecifier: I64 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 45 (typeSpecifier)
    AFF        reduce using rule 45 (typeSpecifier)
    ASSIGN     reduce using rule 45 (typeSpecifier)
    BOOL       reduce using rule 45 (typeSpecifier)
    BOOLA      reduce using rule 45 (typeSpecifier)
    BYTE       reduce using rule 45 (typeSpecifier)
    BYTEA      reduce using rule 45 (typeSpecifier)
    CASSIGN    reduce using rule 45 (typeSpecifier)
    COMMA      reduce using rule 45 (typeSpecifier)
    DPROGRAM   reduce using rule 45 (typeSpecifier)
    DSTACK     reduce using rule 45 (typeSpecifier)
    F32        reduce using rule 45 (typeSpecifier)
    F32A       reduce using rule 45 (typeSpecifier)
    F64        reduce using rule 45 (typeSpecifier)
    F64A       reduce using rule 45 (typeSpecifier)
    FLOAT      reduce using rule 45 (typeSpecifier)
    FUNC       reduce using rule 45 (typeSpecifier)
    I32        reduce using rule 45 (typeSpecifier)
    I32A       reduce using rule 45 (typeSpecifier)
    I64        reduce using rule 45 (typeSpecifier)
    I64A       reduce using rule 45 (typeSpecifier)
    IDENT      reduce using rule 45 (typeSpecifier)
    IF         reduce using rule 45 (typeSpecifier)
    INT        reduce using rule 45 (typeSpecifier)
    LBRACE     reduce using rule 45 (typeSpecifier)
    PACKAGE    reduce using rule 45 (typeSpecifier)
    RBRACE     reduce using rule 45 (typeSpecifier)
    RPAREN     reduce using rule 45 (typeSpecifier)
    SFUNC      reduce using rule 45 (typeSpecifier)
    SPACKAGE   reduce using rule 45 (typeSpecifier)
    SSTRUCT    reduce using rule 45 (typeSpecifier)
    STEP       reduce using rule 45 (typeSpecifier)
    STR        reduce using rule 45 (typeSpecifier)
    STRING     reduce using rule 45 (typeSpecifier)
    TYPSTRUCT  reduce using rule 45 (typeSpecifier)
    VAR        reduce using rule 45 (typeSpecifier)
    WHILE      reduce using rule 45 (typeSpecifier)

state 31 // VAR IDENT F32

   46 typeSpecifier: F32 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 46 (typeSpecifier)
    AFF        reduce using rule 46 (typeSpecifier)
    ASSIGN     reduce using rule 46 (typeSpecifier)
    BOOL       reduce using rule 46 (typeSpecifier)
    BOOLA      reduce using rule 46 (typeSpecifier)
    BYTE       reduce using rule 46 (typeSpecifier)
    BYTEA      reduce using rule 46 (typeSpecifier)
    CASSIGN    reduce using rule 46 (typeSpecifier)
    COMMA      reduce using rule 46 (typeSpecifier)
    DPROGRAM   reduce using rule 46 (typeSpecifier)
    DSTACK     reduce using rule 46 (typeSpecifier)
    F32        reduce using rule 46 (typeSpecifier)
    F32A       reduce using rule 46 (typeSpecifier)
    F64        reduce using rule 46 (typeSpecifier)
    F64A       reduce using rule 46 (typeSpecifier)
    FLOAT      reduce using rule 46 (typeSpecifier)
    FUNC       reduce using rule 46 (typeSpecifier)
    I32        reduce using rule 46 (typeSpecifier)
    I32A       reduce using rule 46 (typeSpecifier)
    I64        reduce using rule 46 (typeSpecifier)
    I64A       reduce using rule 46 (typeSpecifier)
    IDENT      reduce using rule 46 (typeSpecifier)
    IF         reduce using rule 46 (typeSpecifier)
    INT        reduce using rule 46 (typeSpecifier)
    LBRACE     reduce using rule 46 (typeSpecifier)
    PACKAGE    reduce using rule 46 (typeSpecifier)
    RBRACE     reduce using rule 46 (typeSpecifier)
    RPAREN     reduce using rule 46 (typeSpecifier)
    SFUNC      reduce using rule 46 (typeSpecifier)
    SPACKAGE   reduce using rule 46 (typeSpecifier)
    SSTRUCT    reduce using rule 46 (typeSpecifier)
    STEP       reduce using rule 46 (typeSpecifier)
    STR        reduce using rule 46 (typeSpecifier)
    STRING     reduce using rule 46 (typeSpecifier)
    TYPSTRUCT  reduce using rule 46 (typeSpecifier)
    VAR        reduce using rule 46 (typeSpecifier)
    WHILE      reduce using rule 46 (typeSpecifier)

state 32 // VAR IDENT F64

   47 typeSpecifier: F64 .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 47 (typeSpecifier)
    AFF        reduce using rule 47 (typeSpecifier)
    ASSIGN     reduce using rule 47 (typeSpecifier)
    BOOL       reduce using rule 47 (typeSpecifier)
    BOOLA      reduce using rule 47 (typeSpecifier)
    BYTE       reduce using rule 47 (typeSpecifier)
    BYTEA      reduce using rule 47 (typeSpecifier)
    CASSIGN    reduce using rule 47 (typeSpecifier)
    COMMA      reduce using rule 47 (typeSpecifier)
    DPROGRAM   reduce using rule 47 (typeSpecifier)
    DSTACK     reduce using rule 47 (typeSpecifier)
    F32        reduce using rule 47 (typeSpecifier)
    F32A       reduce using rule 47 (typeSpecifier)
    F64        reduce using rule 47 (typeSpecifier)
    F64A       reduce using rule 47 (typeSpecifier)
    FLOAT      reduce using rule 47 (typeSpecifier)
    FUNC       reduce using rule 47 (typeSpecifier)
    I32        reduce using rule 47 (typeSpecifier)
    I32A       reduce using rule 47 (typeSpecifier)
    I64        reduce using rule 47 (typeSpecifier)
    I64A       reduce using rule 47 (typeSpecifier)
    IDENT      reduce using rule 47 (typeSpecifier)
    IF         reduce using rule 47 (typeSpecifier)
    INT        reduce using rule 47 (typeSpecifier)
    LBRACE     reduce using rule 47 (typeSpecifier)
    PACKAGE    reduce using rule 47 (typeSpecifier)
    RBRACE     reduce using rule 47 (typeSpecifier)
    RPAREN     reduce using rule 47 (typeSpecifier)
    SFUNC      reduce using rule 47 (typeSpecifier)
    SPACKAGE   reduce using rule 47 (typeSpecifier)
    SSTRUCT    reduce using rule 47 (typeSpecifier)
    STEP       reduce using rule 47 (typeSpecifier)
    STR        reduce using rule 47 (typeSpecifier)
    STRING     reduce using rule 47 (typeSpecifier)
    TYPSTRUCT  reduce using rule 47 (typeSpecifier)
    VAR        reduce using rule 47 (typeSpecifier)
    WHILE      reduce using rule 47 (typeSpecifier)

state 33 // VAR IDENT BOOL

   48 typeSpecifier: BOOL .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 48 (typeSpecifier)
    AFF        reduce using rule 48 (typeSpecifier)
    ASSIGN     reduce using rule 48 (typeSpecifier)
    BOOL       reduce using rule 48 (typeSpecifier)
    BOOLA      reduce using rule 48 (typeSpecifier)
    BYTE       reduce using rule 48 (typeSpecifier)
    BYTEA      reduce using rule 48 (typeSpecifier)
    CASSIGN    reduce using rule 48 (typeSpecifier)
    COMMA      reduce using rule 48 (typeSpecifier)
    DPROGRAM   reduce using rule 48 (typeSpecifier)
    DSTACK     reduce using rule 48 (typeSpecifier)
    F32        reduce using rule 48 (typeSpecifier)
    F32A       reduce using rule 48 (typeSpecifier)
    F64        reduce using rule 48 (typeSpecifier)
    F64A       reduce using rule 48 (typeSpecifier)
    FLOAT      reduce using rule 48 (typeSpecifier)
    FUNC       reduce using rule 48 (typeSpecifier)
    I32        reduce using rule 48 (typeSpecifier)
    I32A       reduce using rule 48 (typeSpecifier)
    I64        reduce using rule 48 (typeSpecifier)
    I64A       reduce using rule 48 (typeSpecifier)
    IDENT      reduce using rule 48 (typeSpecifier)
    IF         reduce using rule 48 (typeSpecifier)
    INT        reduce using rule 48 (typeSpecifier)
    LBRACE     reduce using rule 48 (typeSpecifier)
    PACKAGE    reduce using rule 48 (typeSpecifier)
    RBRACE     reduce using rule 48 (typeSpecifier)
    RPAREN     reduce using rule 48 (typeSpecifier)
    SFUNC      reduce using rule 48 (typeSpecifier)
    SPACKAGE   reduce using rule 48 (typeSpecifier)
    SSTRUCT    reduce using rule 48 (typeSpecifier)
    STEP       reduce using rule 48 (typeSpecifier)
    STR        reduce using rule 48 (typeSpecifier)
    STRING     reduce using rule 48 (typeSpecifier)
    TYPSTRUCT  reduce using rule 48 (typeSpecifier)
    VAR        reduce using rule 48 (typeSpecifier)
    WHILE      reduce using rule 48 (typeSpecifier)

state 34 // VAR IDENT BYTE

   49 typeSpecifier: BYTE .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 49 (typeSpecifier)
    AFF        reduce using rule 49 (typeSpecifier)
    ASSIGN     reduce using rule 49 (typeSpecifier)
    BOOL       reduce using rule 49 (typeSpecifier)
    BOOLA      reduce using rule 49 (typeSpecifier)
    BYTE       reduce using rule 49 (typeSpecifier)
    BYTEA      reduce using rule 49 (typeSpecifier)
    CASSIGN    reduce using rule 49 (typeSpecifier)
    COMMA      reduce using rule 49 (typeSpecifier)
    DPROGRAM   reduce using rule 49 (typeSpecifier)
    DSTACK     reduce using rule 49 (typeSpecifier)
    F32        reduce using rule 49 (typeSpecifier)
    F32A       reduce using rule 49 (typeSpecifier)
    F64        reduce using rule 49 (typeSpecifier)
    F64A       reduce using rule 49 (typeSpecifier)
    FLOAT      reduce using rule 49 (typeSpecifier)
    FUNC       reduce using rule 49 (typeSpecifier)
    I32        reduce using rule 49 (typeSpecifier)
    I32A       reduce using rule 49 (typeSpecifier)
    I64        reduce using rule 49 (typeSpecifier)
    I64A       reduce using rule 49 (typeSpecifier)
    IDENT      reduce using rule 49 (typeSpecifier)
    IF         reduce using rule 49 (typeSpecifier)
    INT        reduce using rule 49 (typeSpecifier)
    LBRACE     reduce using rule 49 (typeSpecifier)
    PACKAGE    reduce using rule 49 (typeSpecifier)
    RBRACE     reduce using rule 49 (typeSpecifier)
    RPAREN     reduce using rule 49 (typeSpecifier)
    SFUNC      reduce using rule 49 (typeSpecifier)
    SPACKAGE   reduce using rule 49 (typeSpecifier)
    SSTRUCT    reduce using rule 49 (typeSpecifier)
    STEP       reduce using rule 49 (typeSpecifier)
    STR        reduce using rule 49 (typeSpecifier)
    STRING     reduce using rule 49 (typeSpecifier)
    TYPSTRUCT  reduce using rule 49 (typeSpecifier)
    VAR        reduce using rule 49 (typeSpecifier)
    WHILE      reduce using rule 49 (typeSpecifier)

state 35 // VAR IDENT BOOLA

   50 typeSpecifier: BOOLA .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 50 (typeSpecifier)
    AFF        reduce using rule 50 (typeSpecifier)
    ASSIGN     reduce using rule 50 (typeSpecifier)
    BOOL       reduce using rule 50 (typeSpecifier)
    BOOLA      reduce using rule 50 (typeSpecifier)
    BYTE       reduce using rule 50 (typeSpecifier)
    BYTEA      reduce using rule 50 (typeSpecifier)
    CASSIGN    reduce using rule 50 (typeSpecifier)
    COMMA      reduce using rule 50 (typeSpecifier)
    DPROGRAM   reduce using rule 50 (typeSpecifier)
    DSTACK     reduce using rule 50 (typeSpecifier)
    F32        reduce using rule 50 (typeSpecifier)
    F32A       reduce using rule 50 (typeSpecifier)
    F64        reduce using rule 50 (typeSpecifier)
    F64A       reduce using rule 50 (typeSpecifier)
    FLOAT      reduce using rule 50 (typeSpecifier)
    FUNC       reduce using rule 50 (typeSpecifier)
    I32        reduce using rule 50 (typeSpecifier)
    I32A       reduce using rule 50 (typeSpecifier)
    I64        reduce using rule 50 (typeSpecifier)
    I64A       reduce using rule 50 (typeSpecifier)
    IDENT      reduce using rule 50 (typeSpecifier)
    IF         reduce using rule 50 (typeSpecifier)
    INT        reduce using rule 50 (typeSpecifier)
    LBRACE     reduce using rule 50 (typeSpecifier)
    PACKAGE    reduce using rule 50 (typeSpecifier)
    RBRACE     reduce using rule 50 (typeSpecifier)
    RPAREN     reduce using rule 50 (typeSpecifier)
    SFUNC      reduce using rule 50 (typeSpecifier)
    SPACKAGE   reduce using rule 50 (typeSpecifier)
    SSTRUCT    reduce using rule 50 (typeSpecifier)
    STEP       reduce using rule 50 (typeSpecifier)
    STR        reduce using rule 50 (typeSpecifier)
    STRING     reduce using rule 50 (typeSpecifier)
    TYPSTRUCT  reduce using rule 50 (typeSpecifier)
    VAR        reduce using rule 50 (typeSpecifier)
    WHILE      reduce using rule 50 (typeSpecifier)

state 36 // VAR IDENT BYTEA

   51 typeSpecifier: BYTEA .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 51 (typeSpecifier)
    AFF        reduce using rule 51 (typeSpecifier)
    ASSIGN     reduce using rule 51 (typeSpecifier)
    BOOL       reduce using rule 51 (typeSpecifier)
    BOOLA      reduce using rule 51 (typeSpecifier)
    BYTE       reduce using rule 51 (typeSpecifier)
    BYTEA      reduce using rule 51 (typeSpecifier)
    CASSIGN    reduce using rule 51 (typeSpecifier)
    COMMA      reduce using rule 51 (typeSpecifier)
    DPROGRAM   reduce using rule 51 (typeSpecifier)
    DSTACK     reduce using rule 51 (typeSpecifier)
    F32        reduce using rule 51 (typeSpecifier)
    F32A       reduce using rule 51 (typeSpecifier)
    F64        reduce using rule 51 (typeSpecifier)
    F64A       reduce using rule 51 (typeSpecifier)
    FLOAT      reduce using rule 51 (typeSpecifier)
    FUNC       reduce using rule 51 (typeSpecifier)
    I32        reduce using rule 51 (typeSpecifier)
    I32A       reduce using rule 51 (typeSpecifier)
    I64        reduce using rule 51 (typeSpecifier)
    I64A       reduce using rule 51 (typeSpecifier)
    IDENT      reduce using rule 51 (typeSpecifier)
    IF         reduce using rule 51 (typeSpecifier)
    INT        reduce using rule 51 (typeSpecifier)
    LBRACE     reduce using rule 51 (typeSpecifier)
    PACKAGE    reduce using rule 51 (typeSpecifier)
    RBRACE     reduce using rule 51 (typeSpecifier)
    RPAREN     reduce using rule 51 (typeSpecifier)
    SFUNC      reduce using rule 51 (typeSpecifier)
    SPACKAGE   reduce using rule 51 (typeSpecifier)
    SSTRUCT    reduce using rule 51 (typeSpecifier)
    STEP       reduce using rule 51 (typeSpecifier)
    STR        reduce using rule 51 (typeSpecifier)
    STRING     reduce using rule 51 (typeSpecifier)
    TYPSTRUCT  reduce using rule 51 (typeSpecifier)
    VAR        reduce using rule 51 (typeSpecifier)
    WHILE      reduce using rule 51 (typeSpecifier)

state 37 // VAR IDENT I32A

   52 typeSpecifier: I32A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 52 (typeSpecifier)
    AFF        reduce using rule 52 (typeSpecifier)
    ASSIGN     reduce using rule 52 (typeSpecifier)
    BOOL       reduce using rule 52 (typeSpecifier)
    BOOLA      reduce using rule 52 (typeSpecifier)
    BYTE       reduce using rule 52 (typeSpecifier)
    BYTEA      reduce using rule 52 (typeSpecifier)
    CASSIGN    reduce using rule 52 (typeSpecifier)
    COMMA      reduce using rule 52 (typeSpecifier)
    DPROGRAM   reduce using rule 52 (typeSpecifier)
    DSTACK     reduce using rule 52 (typeSpecifier)
    F32        reduce using rule 52 (typeSpecifier)
    F32A       reduce using rule 52 (typeSpecifier)
    F64        reduce using rule 52 (typeSpecifier)
    F64A       reduce using rule 52 (typeSpecifier)
    FLOAT      reduce using rule 52 (typeSpecifier)
    FUNC       reduce using rule 52 (typeSpecifier)
    I32        reduce using rule 52 (typeSpecifier)
    I32A       reduce using rule 52 (typeSpecifier)
    I64        reduce using rule 52 (typeSpecifier)
    I64A       reduce using rule 52 (typeSpecifier)
    IDENT      reduce using rule 52 (typeSpecifier)
    IF         reduce using rule 52 (typeSpecifier)
    INT        reduce using rule 52 (typeSpecifier)
    LBRACE     reduce using rule 52 (typeSpecifier)
    PACKAGE    reduce using rule 52 (typeSpecifier)
    RBRACE     reduce using rule 52 (typeSpecifier)
    RPAREN     reduce using rule 52 (typeSpecifier)
    SFUNC      reduce using rule 52 (typeSpecifier)
    SPACKAGE   reduce using rule 52 (typeSpecifier)
    SSTRUCT    reduce using rule 52 (typeSpecifier)
    STEP       reduce using rule 52 (typeSpecifier)
    STR        reduce using rule 52 (typeSpecifier)
    STRING     reduce using rule 52 (typeSpecifier)
    TYPSTRUCT  reduce using rule 52 (typeSpecifier)
    VAR        reduce using rule 52 (typeSpecifier)
    WHILE      reduce using rule 52 (typeSpecifier)

state 38 // VAR IDENT I64A

   53 typeSpecifier: I64A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 53 (typeSpecifier)
    AFF        reduce using rule 53 (typeSpecifier)
    ASSIGN     reduce using rule 53 (typeSpecifier)
    BOOL       reduce using rule 53 (typeSpecifier)
    BOOLA      reduce using rule 53 (typeSpecifier)
    BYTE       reduce using rule 53 (typeSpecifier)
    BYTEA      reduce using rule 53 (typeSpecifier)
    CASSIGN    reduce using rule 53 (typeSpecifier)
    COMMA      reduce using rule 53 (typeSpecifier)
    DPROGRAM   reduce using rule 53 (typeSpecifier)
    DSTACK     reduce using rule 53 (typeSpecifier)
    F32        reduce using rule 53 (typeSpecifier)
    F32A       reduce using rule 53 (typeSpecifier)
    F64        reduce using rule 53 (typeSpecifier)
    F64A       reduce using rule 53 (typeSpecifier)
    FLOAT      reduce using rule 53 (typeSpecifier)
    FUNC       reduce using rule 53 (typeSpecifier)
    I32        reduce using rule 53 (typeSpecifier)
    I32A       reduce using rule 53 (typeSpecifier)
    I64        reduce using rule 53 (typeSpecifier)
    I64A       reduce using rule 53 (typeSpecifier)
    IDENT      reduce using rule 53 (typeSpecifier)
    IF         reduce using rule 53 (typeSpecifier)
    INT        reduce using rule 53 (typeSpecifier)
    LBRACE     reduce using rule 53 (typeSpecifier)
    PACKAGE    reduce using rule 53 (typeSpecifier)
    RBRACE     reduce using rule 53 (typeSpecifier)
    RPAREN     reduce using rule 53 (typeSpecifier)
    SFUNC      reduce using rule 53 (typeSpecifier)
    SPACKAGE   reduce using rule 53 (typeSpecifier)
    SSTRUCT    reduce using rule 53 (typeSpecifier)
    STEP       reduce using rule 53 (typeSpecifier)
    STR        reduce using rule 53 (typeSpecifier)
    STRING     reduce using rule 53 (typeSpecifier)
    TYPSTRUCT  reduce using rule 53 (typeSpecifier)
    VAR        reduce using rule 53 (typeSpecifier)
    WHILE      reduce using rule 53 (typeSpecifier)

state 39 // VAR IDENT F32A

   54 typeSpecifier: F32A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 54 (typeSpecifier)
    AFF        reduce using rule 54 (typeSpecifier)
    ASSIGN     reduce using rule 54 (typeSpecifier)
    BOOL       reduce using rule 54 (typeSpecifier)
    BOOLA      reduce using rule 54 (typeSpecifier)
    BYTE       reduce using rule 54 (typeSpecifier)
    BYTEA      reduce using rule 54 (typeSpecifier)
    CASSIGN    reduce using rule 54 (typeSpecifier)
    COMMA      reduce using rule 54 (typeSpecifier)
    DPROGRAM   reduce using rule 54 (typeSpecifier)
    DSTACK     reduce using rule 54 (typeSpecifier)
    F32        reduce using rule 54 (typeSpecifier)
    F32A       reduce using rule 54 (typeSpecifier)
    F64        reduce using rule 54 (typeSpecifier)
    F64A       reduce using rule 54 (typeSpecifier)
    FLOAT      reduce using rule 54 (typeSpecifier)
    FUNC       reduce using rule 54 (typeSpecifier)
    I32        reduce using rule 54 (typeSpecifier)
    I32A       reduce using rule 54 (typeSpecifier)
    I64        reduce using rule 54 (typeSpecifier)
    I64A       reduce using rule 54 (typeSpecifier)
    IDENT      reduce using rule 54 (typeSpecifier)
    IF         reduce using rule 54 (typeSpecifier)
    INT        reduce using rule 54 (typeSpecifier)
    LBRACE     reduce using rule 54 (typeSpecifier)
    PACKAGE    reduce using rule 54 (typeSpecifier)
    RBRACE     reduce using rule 54 (typeSpecifier)
    RPAREN     reduce using rule 54 (typeSpecifier)
    SFUNC      reduce using rule 54 (typeSpecifier)
    SPACKAGE   reduce using rule 54 (typeSpecifier)
    SSTRUCT    reduce using rule 54 (typeSpecifier)
    STEP       reduce using rule 54 (typeSpecifier)
    STR        reduce using rule 54 (typeSpecifier)
    STRING     reduce using rule 54 (typeSpecifier)
    TYPSTRUCT  reduce using rule 54 (typeSpecifier)
    VAR        reduce using rule 54 (typeSpecifier)
    WHILE      reduce using rule 54 (typeSpecifier)

state 40 // VAR IDENT F64A

   55 typeSpecifier: F64A .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 55 (typeSpecifier)
    AFF        reduce using rule 55 (typeSpecifier)
    ASSIGN     reduce using rule 55 (typeSpecifier)
    BOOL       reduce using rule 55 (typeSpecifier)
    BOOLA      reduce using rule 55 (typeSpecifier)
    BYTE       reduce using rule 55 (typeSpecifier)
    BYTEA      reduce using rule 55 (typeSpecifier)
    CASSIGN    reduce using rule 55 (typeSpecifier)
    COMMA      reduce using rule 55 (typeSpecifier)
    DPROGRAM   reduce using rule 55 (typeSpecifier)
    DSTACK     reduce using rule 55 (typeSpecifier)
    F32        reduce using rule 55 (typeSpecifier)
    F32A       reduce using rule 55 (typeSpecifier)
    F64        reduce using rule 55 (typeSpecifier)
    F64A       reduce using rule 55 (typeSpecifier)
    FLOAT      reduce using rule 55 (typeSpecifier)
    FUNC       reduce using rule 55 (typeSpecifier)
    I32        reduce using rule 55 (typeSpecifier)
    I32A       reduce using rule 55 (typeSpecifier)
    I64        reduce using rule 55 (typeSpecifier)
    I64A       reduce using rule 55 (typeSpecifier)
    IDENT      reduce using rule 55 (typeSpecifier)
    IF         reduce using rule 55 (typeSpecifier)
    INT        reduce using rule 55 (typeSpecifier)
    LBRACE     reduce using rule 55 (typeSpecifier)
    PACKAGE    reduce using rule 55 (typeSpecifier)
    RBRACE     reduce using rule 55 (typeSpecifier)
    RPAREN     reduce using rule 55 (typeSpecifier)
    SFUNC      reduce using rule 55 (typeSpecifier)
    SPACKAGE   reduce using rule 55 (typeSpecifier)
    SSTRUCT    reduce using rule 55 (typeSpecifier)
    STEP       reduce using rule 55 (typeSpecifier)
    STR        reduce using rule 55 (typeSpecifier)
    STRING     reduce using rule 55 (typeSpecifier)
    TYPSTRUCT  reduce using rule 55 (typeSpecifier)
    VAR        reduce using rule 55 (typeSpecifier)
    WHILE      reduce using rule 55 (typeSpecifier)

state 41 // VAR IDENT STR

   56 typeSpecifier: STR .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 56 (typeSpecifier)
    AFF        reduce using rule 56 (typeSpecifier)
    ASSIGN     reduce using rule 56 (typeSpecifier)
    BOOL       reduce using rule 56 (typeSpecifier)
    BOOLA      reduce using rule 56 (typeSpecifier)
    BYTE       reduce using rule 56 (typeSpecifier)
    BYTEA      reduce using rule 56 (typeSpecifier)
    CASSIGN    reduce using rule 56 (typeSpecifier)
    COMMA      reduce using rule 56 (typeSpecifier)
    DPROGRAM   reduce using rule 56 (typeSpecifier)
    DSTACK     reduce using rule 56 (typeSpecifier)
    F32        reduce using rule 56 (typeSpecifier)
    F32A       reduce using rule 56 (typeSpecifier)
    F64        reduce using rule 56 (typeSpecifier)
    F64A       reduce using rule 56 (typeSpecifier)
    FLOAT      reduce using rule 56 (typeSpecifier)
    FUNC       reduce using rule 56 (typeSpecifier)
    I32        reduce using rule 56 (typeSpecifier)
    I32A       reduce using rule 56 (typeSpecifier)
    I64        reduce using rule 56 (typeSpecifier)
    I64A       reduce using rule 56 (typeSpecifier)
    IDENT      reduce using rule 56 (typeSpecifier)
    IF         reduce using rule 56 (typeSpecifier)
    INT        reduce using rule 56 (typeSpecifier)
    LBRACE     reduce using rule 56 (typeSpecifier)
    PACKAGE    reduce using rule 56 (typeSpecifier)
    RBRACE     reduce using rule 56 (typeSpecifier)
    RPAREN     reduce using rule 56 (typeSpecifier)
    SFUNC      reduce using rule 56 (typeSpecifier)
    SPACKAGE   reduce using rule 56 (typeSpecifier)
    SSTRUCT    reduce using rule 56 (typeSpecifier)
    STEP       reduce using rule 56 (typeSpecifier)
    STR        reduce using rule 56 (typeSpecifier)
    STRING     reduce using rule 56 (typeSpecifier)
    TYPSTRUCT  reduce using rule 56 (typeSpecifier)
    VAR        reduce using rule 56 (typeSpecifier)
    WHILE      reduce using rule 56 (typeSpecifier)

state 42 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE AFF EXPR [AFF]

   75 functionStatements: LBRACE expressionsAndStatements . RBRACE
   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 137
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 43 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE RBRACE

   76 functionStatements: LBRACE RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 76 (functionStatements)
    AFF        reduce using rule 76 (functionStatements)
    DPROGRAM   reduce using rule 76 (functionStatements)
    DSTACK     reduce using rule 76 (functionStatements)
    FUNC       reduce using rule 76 (functionStatements)
    PACKAGE    reduce using rule 76 (functionStatements)
    RBRACE     reduce using rule 76 (functionStatements)
    SFUNC      reduce using rule 76 (functionStatements)
    SPACKAGE   reduce using rule 76 (functionStatements)
    SSTRUCT    reduce using rule 76 (functionStatements)
    STEP       reduce using rule 76 (functionStatements)
    TYPSTRUCT  reduce using rule 76 (functionStatements)
    VAR        reduce using rule 76 (functionStatements)

state 44 // SFUNC IDENT LBRACE IDENT LPAREN RPAREN [AFF]

   77 expressionsAndStatements: nonAssignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]
  129 argumentsList: nonAssignExpression .  [ASSIGN, CASSIGN, COMMA]

    AFF       reduce using rule 77 (expressionsAndStatements)
    ASSIGN    reduce using rule 129 (argumentsList)
    BOOL      reduce using rule 77 (expressionsAndStatements)
    BOOLA     reduce using rule 77 (expressionsAndStatements)
    BYTE      reduce using rule 77 (expressionsAndStatements)
    BYTEA     reduce using rule 77 (expressionsAndStatements)
    CASSIGN   reduce using rule 129 (argumentsList)
    COMMA     reduce using rule 129 (argumentsList)
    DPROGRAM  reduce using rule 77 (expressionsAndStatements)
    DSTACK    reduce using rule 77 (expressionsAndStatements)
    F32       reduce using rule 77 (expressionsAndStatements)
    F32A      reduce using rule 77 (expressionsAndStatements)
    F64       reduce using rule 77 (expressionsAndStatements)
    F64A      reduce using rule 77 (expressionsAndStatements)
    FLOAT     reduce using rule 77 (expressionsAndStatements)
    I32       reduce using rule 77 (expressionsAndStatements)
    I32A      reduce using rule 77 (expressionsAndStatements)
    I64       reduce using rule 77 (expressionsAndStatements)
    I64A      reduce using rule 77 (expressionsAndStatements)
    IDENT     reduce using rule 77 (expressionsAndStatements)
    IF        reduce using rule 77 (expressionsAndStatements)
    INT       reduce using rule 77 (expressionsAndStatements)
    RBRACE    reduce using rule 77 (expressionsAndStatements)
    SFUNC     reduce using rule 77 (expressionsAndStatements)
    SPACKAGE  reduce using rule 77 (expressionsAndStatements)
    SSTRUCT   reduce using rule 77 (expressionsAndStatements)
    STEP      reduce using rule 77 (expressionsAndStatements)
    STR       reduce using rule 77 (expressionsAndStatements)
    STRING    reduce using rule 77 (expressionsAndStatements)
    VAR       reduce using rule 77 (expressionsAndStatements)
    WHILE     reduce using rule 77 (expressionsAndStatements)

state 45 // SFUNC IDENT LBRACE VAR IDENT BOOL [AFF]

   78 expressionsAndStatements: assignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 78 (expressionsAndStatements)
    BOOL      reduce using rule 78 (expressionsAndStatements)
    BOOLA     reduce using rule 78 (expressionsAndStatements)
    BYTE      reduce using rule 78 (expressionsAndStatements)
    BYTEA     reduce using rule 78 (expressionsAndStatements)
    DPROGRAM  reduce using rule 78 (expressionsAndStatements)
    DSTACK    reduce using rule 78 (expressionsAndStatements)
    F32       reduce using rule 78 (expressionsAndStatements)
    F32A      reduce using rule 78 (expressionsAndStatements)
    F64       reduce using rule 78 (expressionsAndStatements)
    F64A      reduce using rule 78 (expressionsAndStatements)
    FLOAT     reduce using rule 78 (expressionsAndStatements)
    I32       reduce using rule 78 (expressionsAndStatements)
    I32A      reduce using rule 78 (expressionsAndStatements)
    I64       reduce using rule 78 (expressionsAndStatements)
    I64A      reduce using rule 78 (expressionsAndStatements)
    IDENT     reduce using rule 78 (expressionsAndStatements)
    IF        reduce using rule 78 (expressionsAndStatements)
    INT       reduce using rule 78 (expressionsAndStatements)
    RBRACE    reduce using rule 78 (expressionsAndStatements)
    SFUNC     reduce using rule 78 (expressionsAndStatements)
    SPACKAGE  reduce using rule 78 (expressionsAndStatements)
    SSTRUCT   reduce using rule 78 (expressionsAndStatements)
    STEP      reduce using rule 78 (expressionsAndStatements)
    STR       reduce using rule 78 (expressionsAndStatements)
    STRING    reduce using rule 78 (expressionsAndStatements)
    VAR       reduce using rule 78 (expressionsAndStatements)
    WHILE     reduce using rule 78 (expressionsAndStatements)

state 46 // SFUNC IDENT LBRACE VAR IDENT IDENT [AFF]

   79 expressionsAndStatements: statement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 79 (expressionsAndStatements)
    BOOL      reduce using rule 79 (expressionsAndStatements)
    BOOLA     reduce using rule 79 (expressionsAndStatements)
    BYTE      reduce using rule 79 (expressionsAndStatements)
    BYTEA     reduce using rule 79 (expressionsAndStatements)
    DPROGRAM  reduce using rule 79 (expressionsAndStatements)
    DSTACK    reduce using rule 79 (expressionsAndStatements)
    F32       reduce using rule 79 (expressionsAndStatements)
    F32A      reduce using rule 79 (expressionsAndStatements)
    F64       reduce using rule 79 (expressionsAndStatements)
    F64A      reduce using rule 79 (expressionsAndStatements)
    FLOAT     reduce using rule 79 (expressionsAndStatements)
    I32       reduce using rule 79 (expressionsAndStatements)
    I32A      reduce using rule 79 (expressionsAndStatements)
    I64       reduce using rule 79 (expressionsAndStatements)
    I64A      reduce using rule 79 (expressionsAndStatements)
    IDENT     reduce using rule 79 (expressionsAndStatements)
    IF        reduce using rule 79 (expressionsAndStatements)
    INT       reduce using rule 79 (expressionsAndStatements)
    RBRACE    reduce using rule 79 (expressionsAndStatements)
    SFUNC     reduce using rule 79 (expressionsAndStatements)
    SPACKAGE  reduce using rule 79 (expressionsAndStatements)
    SSTRUCT   reduce using rule 79 (expressionsAndStatements)
    STEP      reduce using rule 79 (expressionsAndStatements)
    STR       reduce using rule 79 (expressionsAndStatements)
    STRING    reduce using rule 79 (expressionsAndStatements)
    VAR       reduce using rule 79 (expressionsAndStatements)
    WHILE     reduce using rule 79 (expressionsAndStatements)

state 47 // SFUNC IDENT LBRACE SFUNC IDENT [AFF]

   80 expressionsAndStatements: selector .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 80 (expressionsAndStatements)
    BOOL      reduce using rule 80 (expressionsAndStatements)
    BOOLA     reduce using rule 80 (expressionsAndStatements)
    BYTE      reduce using rule 80 (expressionsAndStatements)
    BYTEA     reduce using rule 80 (expressionsAndStatements)
    DPROGRAM  reduce using rule 80 (expressionsAndStatements)
    DSTACK    reduce using rule 80 (expressionsAndStatements)
    F32       reduce using rule 80 (expressionsAndStatements)
    F32A      reduce using rule 80 (expressionsAndStatements)
    F64       reduce using rule 80 (expressionsAndStatements)
    F64A      reduce using rule 80 (expressionsAndStatements)
    FLOAT     reduce using rule 80 (expressionsAndStatements)
    I32       reduce using rule 80 (expressionsAndStatements)
    I32A      reduce using rule 80 (expressionsAndStatements)
    I64       reduce using rule 80 (expressionsAndStatements)
    I64A      reduce using rule 80 (expressionsAndStatements)
    IDENT     reduce using rule 80 (expressionsAndStatements)
    IF        reduce using rule 80 (expressionsAndStatements)
    INT       reduce using rule 80 (expressionsAndStatements)
    RBRACE    reduce using rule 80 (expressionsAndStatements)
    SFUNC     reduce using rule 80 (expressionsAndStatements)
    SPACKAGE  reduce using rule 80 (expressionsAndStatements)
    SSTRUCT   reduce using rule 80 (expressionsAndStatements)
    STEP      reduce using rule 80 (expressionsAndStatements)
    STR       reduce using rule 80 (expressionsAndStatements)
    STRING    reduce using rule 80 (expressionsAndStatements)
    VAR       reduce using rule 80 (expressionsAndStatements)
    WHILE     reduce using rule 80 (expressionsAndStatements)

state 48 // SFUNC IDENT LBRACE STEP INT [AFF]

   81 expressionsAndStatements: stepping .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 81 (expressionsAndStatements)
    BOOL      reduce using rule 81 (expressionsAndStatements)
    BOOLA     reduce using rule 81 (expressionsAndStatements)
    BYTE      reduce using rule 81 (expressionsAndStatements)
    BYTEA     reduce using rule 81 (expressionsAndStatements)
    DPROGRAM  reduce using rule 81 (expressionsAndStatements)
    DSTACK    reduce using rule 81 (expressionsAndStatements)
    F32       reduce using rule 81 (expressionsAndStatements)
    F32A      reduce using rule 81 (expressionsAndStatements)
    F64       reduce using rule 81 (expressionsAndStatements)
    F64A      reduce using rule 81 (expressionsAndStatements)
    FLOAT     reduce using rule 81 (expressionsAndStatements)
    I32       reduce using rule 81 (expressionsAndStatements)
    I32A      reduce using rule 81 (expressionsAndStatements)
    I64       reduce using rule 81 (expressionsAndStatements)
    I64A      reduce using rule 81 (expressionsAndStatements)
    IDENT     reduce using rule 81 (expressionsAndStatements)
    IF        reduce using rule 81 (expressionsAndStatements)
    INT       reduce using rule 81 (expressionsAndStatements)
    RBRACE    reduce using rule 81 (expressionsAndStatements)
    SFUNC     reduce using rule 81 (expressionsAndStatements)
    SPACKAGE  reduce using rule 81 (expressionsAndStatements)
    SSTRUCT   reduce using rule 81 (expressionsAndStatements)
    STEP      reduce using rule 81 (expressionsAndStatements)
    STR       reduce using rule 81 (expressionsAndStatements)
    STRING    reduce using rule 81 (expressionsAndStatements)
    VAR       reduce using rule 81 (expressionsAndStatements)
    WHILE     reduce using rule 81 (expressionsAndStatements)

state 49 // SFUNC IDENT LBRACE DPROGRAM BOOLEAN [AFF]

   82 expressionsAndStatements: debugging .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 82 (expressionsAndStatements)
    BOOL      reduce using rule 82 (expressionsAndStatements)
    BOOLA     reduce using rule 82 (expressionsAndStatements)
    BYTE      reduce using rule 82 (expressionsAndStatements)
    BYTEA     reduce using rule 82 (expressionsAndStatements)
    DPROGRAM  reduce using rule 82 (expressionsAndStatements)
    DSTACK    reduce using rule 82 (expressionsAndStatements)
    F32       reduce using rule 82 (expressionsAndStatements)
    F32A      reduce using rule 82 (expressionsAndStatements)
    F64       reduce using rule 82 (expressionsAndStatements)
    F64A      reduce using rule 82 (expressionsAndStatements)
    FLOAT     reduce using rule 82 (expressionsAndStatements)
    I32       reduce using rule 82 (expressionsAndStatements)
    I32A      reduce using rule 82 (expressionsAndStatements)
    I64       reduce using rule 82 (expressionsAndStatements)
    I64A      reduce using rule 82 (expressionsAndStatements)
    IDENT     reduce using rule 82 (expressionsAndStatements)
    IF        reduce using rule 82 (expressionsAndStatements)
    INT       reduce using rule 82 (expressionsAndStatements)
    RBRACE    reduce using rule 82 (expressionsAndStatements)
    SFUNC     reduce using rule 82 (expressionsAndStatements)
    SPACKAGE  reduce using rule 82 (expressionsAndStatements)
    SSTRUCT   reduce using rule 82 (expressionsAndStatements)
    STEP      reduce using rule 82 (expressionsAndStatements)
    STR       reduce using rule 82 (expressionsAndStatements)
    STRING    reduce using rule 82 (expressionsAndStatements)
    VAR       reduce using rule 82 (expressionsAndStatements)
    WHILE     reduce using rule 82 (expressionsAndStatements)

state 50 // SFUNC IDENT LBRACE AFF EXPR [AFF]

   83 expressionsAndStatements: affordance .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 83 (expressionsAndStatements)
    BOOL      reduce using rule 83 (expressionsAndStatements)
    BOOLA     reduce using rule 83 (expressionsAndStatements)
    BYTE      reduce using rule 83 (expressionsAndStatements)
    BYTEA     reduce using rule 83 (expressionsAndStatements)
    DPROGRAM  reduce using rule 83 (expressionsAndStatements)
    DSTACK    reduce using rule 83 (expressionsAndStatements)
    F32       reduce using rule 83 (expressionsAndStatements)
    F32A      reduce using rule 83 (expressionsAndStatements)
    F64       reduce using rule 83 (expressionsAndStatements)
    F64A      reduce using rule 83 (expressionsAndStatements)
    FLOAT     reduce using rule 83 (expressionsAndStatements)
    I32       reduce using rule 83 (expressionsAndStatements)
    I32A      reduce using rule 83 (expressionsAndStatements)
    I64       reduce using rule 83 (expressionsAndStatements)
    I64A      reduce using rule 83 (expressionsAndStatements)
    IDENT     reduce using rule 83 (expressionsAndStatements)
    IF        reduce using rule 83 (expressionsAndStatements)
    INT       reduce using rule 83 (expressionsAndStatements)
    RBRACE    reduce using rule 83 (expressionsAndStatements)
    SFUNC     reduce using rule 83 (expressionsAndStatements)
    SPACKAGE  reduce using rule 83 (expressionsAndStatements)
    SSTRUCT   reduce using rule 83 (expressionsAndStatements)
    STEP      reduce using rule 83 (expressionsAndStatements)
    STR       reduce using rule 83 (expressionsAndStatements)
    STRING    reduce using rule 83 (expressionsAndStatements)
    VAR       reduce using rule 83 (expressionsAndStatements)
    WHILE     reduce using rule 83 (expressionsAndStatements)

state 51 // SFUNC IDENT LBRACE VAR

   91 assignExpression: VAR . IDENT typeSpecifier definitionAssignment
  112 statement: VAR . IDENT IDENT

    IDENT  shift, and goto state 130

state 52 // SFUNC IDENT LBRACE FLOAT [ASSIGN]

   92 assignExpression: argumentsList . assignOperator IDENT arguments
  130 argumentsList: argumentsList . COMMA argument
  131 argumentsList: argumentsList . COMMA nonAssignExpression

    ASSIGN   shift, and goto state 125
    CASSIGN  shift, and goto state 126
    COMMA    shift, and goto state 65

    assignOperator  goto state 127

state 53 // SFUNC IDENT LBRACE IDENT

   93 nonAssignExpression: IDENT . arguments
  124 argument: IDENT .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 124 (argument)
    CASSIGN  reduce using rule 124 (argument)
    COMMA    reduce using rule 124 (argument)
    LPAREN   shift, and goto state 90
    RBRACE   reduce using rule 124 (argument)
    RPAREN   reduce using rule 124 (argument)

    arguments  goto state 88

state 54 // SFUNC IDENT LBRACE IF

   96 statement: IF . nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements RBRACE elseStatement
   99 statement: IF . IDENT $@8 LBRACE $@9 expressionsAndStatements RBRACE elseStatement
  102 statement: IF . BOOLEAN $@10 LBRACE $@11 expressionsAndStatements RBRACE elseStatement

    BOOLEAN  shift, and goto state 100
    IDENT    shift, and goto state 98

    nonAssignExpression  goto state 99

state 55 // SFUNC IDENT LBRACE WHILE

  105 statement: WHILE . nonAssignExpression $@12 LBRACE $@13 expressionsAndStatements RBRACE
  108 statement: WHILE . IDENT $@14 LBRACE $@15 expressionsAndStatements RBRACE
  111 statement: WHILE . BOOLEAN $@16 LBRACE $@17 expressionsAndStatements RBRACE

    BOOLEAN  shift, and goto state 70
    IDENT    shift, and goto state 68

    nonAssignExpression  goto state 69

state 56 // SFUNC IDENT LBRACE INT

  121 argument: INT .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 121 (argument)
    AFF        reduce using rule 121 (argument)
    ASSIGN     reduce using rule 121 (argument)
    BOOL       reduce using rule 121 (argument)
    BOOLA      reduce using rule 121 (argument)
    BYTE       reduce using rule 121 (argument)
    BYTEA      reduce using rule 121 (argument)
    CASSIGN    reduce using rule 121 (argument)
    COMMA      reduce using rule 121 (argument)
    DPROGRAM   reduce using rule 121 (argument)
    DSTACK     reduce using rule 121 (argument)
    F32        reduce using rule 121 (argument)
    F32A       reduce using rule 121 (argument)
    F64        reduce using rule 121 (argument)
    F64A       reduce using rule 121 (argument)
    FLOAT      reduce using rule 121 (argument)
    FUNC       reduce using rule 121 (argument)
    I32        reduce using rule 121 (argument)
    I32A       reduce using rule 121 (argument)
    I64        reduce using rule 121 (argument)
    I64A       reduce using rule 121 (argument)
    IDENT      reduce using rule 121 (argument)
    IF         reduce using rule 121 (argument)
    INT        reduce using rule 121 (argument)
    PACKAGE    reduce using rule 121 (argument)
    RBRACE     reduce using rule 121 (argument)
    RPAREN     reduce using rule 121 (argument)
    SFUNC      reduce using rule 121 (argument)
    SPACKAGE   reduce using rule 121 (argument)
    SSTRUCT    reduce using rule 121 (argument)
    STEP       reduce using rule 121 (argument)
    STR        reduce using rule 121 (argument)
    STRING     reduce using rule 121 (argument)
    TYPSTRUCT  reduce using rule 121 (argument)
    VAR        reduce using rule 121 (argument)
    WHILE      reduce using rule 121 (argument)

state 57 // SFUNC IDENT LBRACE FLOAT

  122 argument: FLOAT .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 122 (argument)
    AFF        reduce using rule 122 (argument)
    ASSIGN     reduce using rule 122 (argument)
    BOOL       reduce using rule 122 (argument)
    BOOLA      reduce using rule 122 (argument)
    BYTE       reduce using rule 122 (argument)
    BYTEA      reduce using rule 122 (argument)
    CASSIGN    reduce using rule 122 (argument)
    COMMA      reduce using rule 122 (argument)
    DPROGRAM   reduce using rule 122 (argument)
    DSTACK     reduce using rule 122 (argument)
    F32        reduce using rule 122 (argument)
    F32A       reduce using rule 122 (argument)
    F64        reduce using rule 122 (argument)
    F64A       reduce using rule 122 (argument)
    FLOAT      reduce using rule 122 (argument)
    FUNC       reduce using rule 122 (argument)
    I32        reduce using rule 122 (argument)
    I32A       reduce using rule 122 (argument)
    I64        reduce using rule 122 (argument)
    I64A       reduce using rule 122 (argument)
    IDENT      reduce using rule 122 (argument)
    IF         reduce using rule 122 (argument)
    INT        reduce using rule 122 (argument)
    PACKAGE    reduce using rule 122 (argument)
    RBRACE     reduce using rule 122 (argument)
    RPAREN     reduce using rule 122 (argument)
    SFUNC      reduce using rule 122 (argument)
    SPACKAGE   reduce using rule 122 (argument)
    SSTRUCT    reduce using rule 122 (argument)
    STEP       reduce using rule 122 (argument)
    STR        reduce using rule 122 (argument)
    STRING     reduce using rule 122 (argument)
    TYPSTRUCT  reduce using rule 122 (argument)
    VAR        reduce using rule 122 (argument)
    WHILE      reduce using rule 122 (argument)

state 58 // SFUNC IDENT LBRACE STRING

  123 argument: STRING .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 123 (argument)
    AFF        reduce using rule 123 (argument)
    ASSIGN     reduce using rule 123 (argument)
    BOOL       reduce using rule 123 (argument)
    BOOLA      reduce using rule 123 (argument)
    BYTE       reduce using rule 123 (argument)
    BYTEA      reduce using rule 123 (argument)
    CASSIGN    reduce using rule 123 (argument)
    COMMA      reduce using rule 123 (argument)
    DPROGRAM   reduce using rule 123 (argument)
    DSTACK     reduce using rule 123 (argument)
    F32        reduce using rule 123 (argument)
    F32A       reduce using rule 123 (argument)
    F64        reduce using rule 123 (argument)
    F64A       reduce using rule 123 (argument)
    FLOAT      reduce using rule 123 (argument)
    FUNC       reduce using rule 123 (argument)
    I32        reduce using rule 123 (argument)
    I32A       reduce using rule 123 (argument)
    I64        reduce using rule 123 (argument)
    I64A       reduce using rule 123 (argument)
    IDENT      reduce using rule 123 (argument)
    IF         reduce using rule 123 (argument)
    INT        reduce using rule 123 (argument)
    PACKAGE    reduce using rule 123 (argument)
    RBRACE     reduce using rule 123 (argument)
    RPAREN     reduce using rule 123 (argument)
    SFUNC      reduce using rule 123 (argument)
    SPACKAGE   reduce using rule 123 (argument)
    SSTRUCT    reduce using rule 123 (argument)
    STEP       reduce using rule 123 (argument)
    STR        reduce using rule 123 (argument)
    STRING     reduce using rule 123 (argument)
    TYPSTRUCT  reduce using rule 123 (argument)
    VAR        reduce using rule 123 (argument)
    WHILE      reduce using rule 123 (argument)

state 59 // SFUNC IDENT LBRACE BOOL [LBRACE]

  125 argument: typeSpecifier . LBRACE argumentsList RBRACE

    LBRACE  shift, and goto state 61

state 60 // SFUNC IDENT LBRACE FLOAT [ASSIGN]

  128 argumentsList: argument .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 128 (argumentsList)
    CASSIGN  reduce using rule 128 (argumentsList)
    COMMA    reduce using rule 128 (argumentsList)
    RBRACE   reduce using rule 128 (argumentsList)
    RPAREN   reduce using rule 128 (argumentsList)

state 61 // SFUNC IDENT LBRACE BOOL LBRACE

  125 argument: typeSpecifier LBRACE . argumentsList RBRACE

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 53
    INT     shift, and goto state 56
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument             goto state 60
    argumentsList        goto state 62
    nonAssignExpression  goto state 63
    typeSpecifier        goto state 59

state 62 // SFUNC IDENT LBRACE BOOL LBRACE FLOAT [COMMA]

  125 argument: typeSpecifier LBRACE argumentsList . RBRACE
  130 argumentsList: argumentsList . COMMA argument
  131 argumentsList: argumentsList . COMMA nonAssignExpression

    COMMA   shift, and goto state 65
    RBRACE  shift, and goto state 64

state 63 // SFUNC IDENT LBRACE BOOL LBRACE IDENT LPAREN RPAREN [COMMA]

  129 argumentsList: nonAssignExpression .  [COMMA, RBRACE, RPAREN]

    COMMA   reduce using rule 129 (argumentsList)
    RBRACE  reduce using rule 129 (argumentsList)
    RPAREN  reduce using rule 129 (argumentsList)

state 64 // SFUNC IDENT LBRACE BOOL LBRACE FLOAT RBRACE

  125 argument: typeSpecifier LBRACE argumentsList RBRACE .  [$end, AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 125 (argument)
    AFF        reduce using rule 125 (argument)
    ASSIGN     reduce using rule 125 (argument)
    BOOL       reduce using rule 125 (argument)
    BOOLA      reduce using rule 125 (argument)
    BYTE       reduce using rule 125 (argument)
    BYTEA      reduce using rule 125 (argument)
    CASSIGN    reduce using rule 125 (argument)
    COMMA      reduce using rule 125 (argument)
    DPROGRAM   reduce using rule 125 (argument)
    DSTACK     reduce using rule 125 (argument)
    F32        reduce using rule 125 (argument)
    F32A       reduce using rule 125 (argument)
    F64        reduce using rule 125 (argument)
    F64A       reduce using rule 125 (argument)
    FLOAT      reduce using rule 125 (argument)
    FUNC       reduce using rule 125 (argument)
    I32        reduce using rule 125 (argument)
    I32A       reduce using rule 125 (argument)
    I64        reduce using rule 125 (argument)
    I64A       reduce using rule 125 (argument)
    IDENT      reduce using rule 125 (argument)
    IF         reduce using rule 125 (argument)
    INT        reduce using rule 125 (argument)
    PACKAGE    reduce using rule 125 (argument)
    RBRACE     reduce using rule 125 (argument)
    RPAREN     reduce using rule 125 (argument)
    SFUNC      reduce using rule 125 (argument)
    SPACKAGE   reduce using rule 125 (argument)
    SSTRUCT    reduce using rule 125 (argument)
    STEP       reduce using rule 125 (argument)
    STR        reduce using rule 125 (argument)
    STRING     reduce using rule 125 (argument)
    TYPSTRUCT  reduce using rule 125 (argument)
    VAR        reduce using rule 125 (argument)
    WHILE      reduce using rule 125 (argument)

state 65 // SFUNC IDENT LBRACE FLOAT COMMA

  130 argumentsList: argumentsList COMMA . argument
  131 argumentsList: argumentsList COMMA . nonAssignExpression

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 53
    INT     shift, and goto state 56
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument             goto state 66
    nonAssignExpression  goto state 67
    typeSpecifier        goto state 59

state 66 // SFUNC IDENT LBRACE FLOAT COMMA FLOAT [ASSIGN]

  130 argumentsList: argumentsList COMMA argument .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 130 (argumentsList)
    CASSIGN  reduce using rule 130 (argumentsList)
    COMMA    reduce using rule 130 (argumentsList)
    RBRACE   reduce using rule 130 (argumentsList)
    RPAREN   reduce using rule 130 (argumentsList)

state 67 // SFUNC IDENT LBRACE FLOAT COMMA IDENT LPAREN RPAREN [ASSIGN]

  131 argumentsList: argumentsList COMMA nonAssignExpression .  [ASSIGN, CASSIGN, COMMA, RBRACE, RPAREN]

    ASSIGN   reduce using rule 131 (argumentsList)
    CASSIGN  reduce using rule 131 (argumentsList)
    COMMA    reduce using rule 131 (argumentsList)
    RBRACE   reduce using rule 131 (argumentsList)
    RPAREN   reduce using rule 131 (argumentsList)

state 68 // SFUNC IDENT LBRACE WHILE IDENT

   93 nonAssignExpression: IDENT . arguments
  108 statement: WHILE IDENT . $@14 LBRACE $@15 expressionsAndStatements RBRACE
  106 $@14: .  [LBRACE]

    LBRACE  reduce using rule 106 ($@14)
    LPAREN  shift, and goto state 90

    $@14       goto state 89
    arguments  goto state 88

state 69 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN [LBRACE]

  105 statement: WHILE nonAssignExpression . $@12 LBRACE $@13 expressionsAndStatements RBRACE
  103 $@12: .  [LBRACE]

    LBRACE  reduce using rule 103 ($@12)

    $@12  goto state 83

state 70 // SFUNC IDENT LBRACE WHILE BOOLEAN

  111 statement: WHILE BOOLEAN . $@16 LBRACE $@17 expressionsAndStatements RBRACE
  109 $@16: .  [LBRACE]

    LBRACE  reduce using rule 109 ($@16)

    $@16  goto state 71

state 71 // SFUNC IDENT LBRACE WHILE BOOLEAN [LBRACE]

  111 statement: WHILE BOOLEAN $@16 . LBRACE $@17 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 72

state 72 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE

  111 statement: WHILE BOOLEAN $@16 LBRACE . $@17 expressionsAndStatements RBRACE
  110 $@17: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 110 ($@17)
    BOOL      reduce using rule 110 ($@17)
    BOOLA     reduce using rule 110 ($@17)
    BYTE      reduce using rule 110 ($@17)
    BYTEA     reduce using rule 110 ($@17)
    DPROGRAM  reduce using rule 110 ($@17)
    DSTACK    reduce using rule 110 ($@17)
    F32       reduce using rule 110 ($@17)
    F32A      reduce using rule 110 ($@17)
    F64       reduce using rule 110 ($@17)
    F64A      reduce using rule 110 ($@17)
    FLOAT     reduce using rule 110 ($@17)
    I32       reduce using rule 110 ($@17)
    I32A      reduce using rule 110 ($@17)
    I64       reduce using rule 110 ($@17)
    I64A      reduce using rule 110 ($@17)
    IDENT     reduce using rule 110 ($@17)
    IF        reduce using rule 110 ($@17)
    INT       reduce using rule 110 ($@17)
    SFUNC     reduce using rule 110 ($@17)
    SPACKAGE  reduce using rule 110 ($@17)
    SSTRUCT   reduce using rule 110 ($@17)
    STEP      reduce using rule 110 ($@17)
    STR       reduce using rule 110 ($@17)
    STRING    reduce using rule 110 ($@17)
    VAR       reduce using rule 110 ($@17)
    WHILE     reduce using rule 110 ($@17)

    $@17  goto state 73

state 73 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE [AFF]

  111 statement: WHILE BOOLEAN $@16 LBRACE $@17 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 74
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 74 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
  111 statement: WHILE BOOLEAN $@16 LBRACE $@17 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 82
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 75 // SFUNC IDENT LBRACE AFF EXPR IDENT LPAREN RPAREN [AFF]

   84 expressionsAndStatements: expressionsAndStatements nonAssignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]
  129 argumentsList: nonAssignExpression .  [ASSIGN, CASSIGN, COMMA]

    AFF       reduce using rule 84 (expressionsAndStatements)
    ASSIGN    reduce using rule 129 (argumentsList)
    BOOL      reduce using rule 84 (expressionsAndStatements)
    BOOLA     reduce using rule 84 (expressionsAndStatements)
    BYTE      reduce using rule 84 (expressionsAndStatements)
    BYTEA     reduce using rule 84 (expressionsAndStatements)
    CASSIGN   reduce using rule 129 (argumentsList)
    COMMA     reduce using rule 129 (argumentsList)
    DPROGRAM  reduce using rule 84 (expressionsAndStatements)
    DSTACK    reduce using rule 84 (expressionsAndStatements)
    F32       reduce using rule 84 (expressionsAndStatements)
    F32A      reduce using rule 84 (expressionsAndStatements)
    F64       reduce using rule 84 (expressionsAndStatements)
    F64A      reduce using rule 84 (expressionsAndStatements)
    FLOAT     reduce using rule 84 (expressionsAndStatements)
    I32       reduce using rule 84 (expressionsAndStatements)
    I32A      reduce using rule 84 (expressionsAndStatements)
    I64       reduce using rule 84 (expressionsAndStatements)
    I64A      reduce using rule 84 (expressionsAndStatements)
    IDENT     reduce using rule 84 (expressionsAndStatements)
    IF        reduce using rule 84 (expressionsAndStatements)
    INT       reduce using rule 84 (expressionsAndStatements)
    RBRACE    reduce using rule 84 (expressionsAndStatements)
    SFUNC     reduce using rule 84 (expressionsAndStatements)
    SPACKAGE  reduce using rule 84 (expressionsAndStatements)
    SSTRUCT   reduce using rule 84 (expressionsAndStatements)
    STEP      reduce using rule 84 (expressionsAndStatements)
    STR       reduce using rule 84 (expressionsAndStatements)
    STRING    reduce using rule 84 (expressionsAndStatements)
    VAR       reduce using rule 84 (expressionsAndStatements)
    WHILE     reduce using rule 84 (expressionsAndStatements)

state 76 // SFUNC IDENT LBRACE AFF EXPR VAR IDENT BOOL [AFF]

   85 expressionsAndStatements: expressionsAndStatements assignExpression .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 85 (expressionsAndStatements)
    BOOL      reduce using rule 85 (expressionsAndStatements)
    BOOLA     reduce using rule 85 (expressionsAndStatements)
    BYTE      reduce using rule 85 (expressionsAndStatements)
    BYTEA     reduce using rule 85 (expressionsAndStatements)
    DPROGRAM  reduce using rule 85 (expressionsAndStatements)
    DSTACK    reduce using rule 85 (expressionsAndStatements)
    F32       reduce using rule 85 (expressionsAndStatements)
    F32A      reduce using rule 85 (expressionsAndStatements)
    F64       reduce using rule 85 (expressionsAndStatements)
    F64A      reduce using rule 85 (expressionsAndStatements)
    FLOAT     reduce using rule 85 (expressionsAndStatements)
    I32       reduce using rule 85 (expressionsAndStatements)
    I32A      reduce using rule 85 (expressionsAndStatements)
    I64       reduce using rule 85 (expressionsAndStatements)
    I64A      reduce using rule 85 (expressionsAndStatements)
    IDENT     reduce using rule 85 (expressionsAndStatements)
    IF        reduce using rule 85 (expressionsAndStatements)
    INT       reduce using rule 85 (expressionsAndStatements)
    RBRACE    reduce using rule 85 (expressionsAndStatements)
    SFUNC     reduce using rule 85 (expressionsAndStatements)
    SPACKAGE  reduce using rule 85 (expressionsAndStatements)
    SSTRUCT   reduce using rule 85 (expressionsAndStatements)
    STEP      reduce using rule 85 (expressionsAndStatements)
    STR       reduce using rule 85 (expressionsAndStatements)
    STRING    reduce using rule 85 (expressionsAndStatements)
    VAR       reduce using rule 85 (expressionsAndStatements)
    WHILE     reduce using rule 85 (expressionsAndStatements)

state 77 // SFUNC IDENT LBRACE AFF EXPR VAR IDENT IDENT [AFF]

   86 expressionsAndStatements: expressionsAndStatements statement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 86 (expressionsAndStatements)
    BOOL      reduce using rule 86 (expressionsAndStatements)
    BOOLA     reduce using rule 86 (expressionsAndStatements)
    BYTE      reduce using rule 86 (expressionsAndStatements)
    BYTEA     reduce using rule 86 (expressionsAndStatements)
    DPROGRAM  reduce using rule 86 (expressionsAndStatements)
    DSTACK    reduce using rule 86 (expressionsAndStatements)
    F32       reduce using rule 86 (expressionsAndStatements)
    F32A      reduce using rule 86 (expressionsAndStatements)
    F64       reduce using rule 86 (expressionsAndStatements)
    F64A      reduce using rule 86 (expressionsAndStatements)
    FLOAT     reduce using rule 86 (expressionsAndStatements)
    I32       reduce using rule 86 (expressionsAndStatements)
    I32A      reduce using rule 86 (expressionsAndStatements)
    I64       reduce using rule 86 (expressionsAndStatements)
    I64A      reduce using rule 86 (expressionsAndStatements)
    IDENT     reduce using rule 86 (expressionsAndStatements)
    IF        reduce using rule 86 (expressionsAndStatements)
    INT       reduce using rule 86 (expressionsAndStatements)
    RBRACE    reduce using rule 86 (expressionsAndStatements)
    SFUNC     reduce using rule 86 (expressionsAndStatements)
    SPACKAGE  reduce using rule 86 (expressionsAndStatements)
    SSTRUCT   reduce using rule 86 (expressionsAndStatements)
    STEP      reduce using rule 86 (expressionsAndStatements)
    STR       reduce using rule 86 (expressionsAndStatements)
    STRING    reduce using rule 86 (expressionsAndStatements)
    VAR       reduce using rule 86 (expressionsAndStatements)
    WHILE     reduce using rule 86 (expressionsAndStatements)

state 78 // SFUNC IDENT LBRACE AFF EXPR SFUNC IDENT [AFF]

   87 expressionsAndStatements: expressionsAndStatements selector .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 87 (expressionsAndStatements)
    BOOL      reduce using rule 87 (expressionsAndStatements)
    BOOLA     reduce using rule 87 (expressionsAndStatements)
    BYTE      reduce using rule 87 (expressionsAndStatements)
    BYTEA     reduce using rule 87 (expressionsAndStatements)
    DPROGRAM  reduce using rule 87 (expressionsAndStatements)
    DSTACK    reduce using rule 87 (expressionsAndStatements)
    F32       reduce using rule 87 (expressionsAndStatements)
    F32A      reduce using rule 87 (expressionsAndStatements)
    F64       reduce using rule 87 (expressionsAndStatements)
    F64A      reduce using rule 87 (expressionsAndStatements)
    FLOAT     reduce using rule 87 (expressionsAndStatements)
    I32       reduce using rule 87 (expressionsAndStatements)
    I32A      reduce using rule 87 (expressionsAndStatements)
    I64       reduce using rule 87 (expressionsAndStatements)
    I64A      reduce using rule 87 (expressionsAndStatements)
    IDENT     reduce using rule 87 (expressionsAndStatements)
    IF        reduce using rule 87 (expressionsAndStatements)
    INT       reduce using rule 87 (expressionsAndStatements)
    RBRACE    reduce using rule 87 (expressionsAndStatements)
    SFUNC     reduce using rule 87 (expressionsAndStatements)
    SPACKAGE  reduce using rule 87 (expressionsAndStatements)
    SSTRUCT   reduce using rule 87 (expressionsAndStatements)
    STEP      reduce using rule 87 (expressionsAndStatements)
    STR       reduce using rule 87 (expressionsAndStatements)
    STRING    reduce using rule 87 (expressionsAndStatements)
    VAR       reduce using rule 87 (expressionsAndStatements)
    WHILE     reduce using rule 87 (expressionsAndStatements)

state 79 // SFUNC IDENT LBRACE AFF EXPR STEP INT [AFF]

   88 expressionsAndStatements: expressionsAndStatements stepping .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 88 (expressionsAndStatements)
    BOOL      reduce using rule 88 (expressionsAndStatements)
    BOOLA     reduce using rule 88 (expressionsAndStatements)
    BYTE      reduce using rule 88 (expressionsAndStatements)
    BYTEA     reduce using rule 88 (expressionsAndStatements)
    DPROGRAM  reduce using rule 88 (expressionsAndStatements)
    DSTACK    reduce using rule 88 (expressionsAndStatements)
    F32       reduce using rule 88 (expressionsAndStatements)
    F32A      reduce using rule 88 (expressionsAndStatements)
    F64       reduce using rule 88 (expressionsAndStatements)
    F64A      reduce using rule 88 (expressionsAndStatements)
    FLOAT     reduce using rule 88 (expressionsAndStatements)
    I32       reduce using rule 88 (expressionsAndStatements)
    I32A      reduce using rule 88 (expressionsAndStatements)
    I64       reduce using rule 88 (expressionsAndStatements)
    I64A      reduce using rule 88 (expressionsAndStatements)
    IDENT     reduce using rule 88 (expressionsAndStatements)
    IF        reduce using rule 88 (expressionsAndStatements)
    INT       reduce using rule 88 (expressionsAndStatements)
    RBRACE    reduce using rule 88 (expressionsAndStatements)
    SFUNC     reduce using rule 88 (expressionsAndStatements)
    SPACKAGE  reduce using rule 88 (expressionsAndStatements)
    SSTRUCT   reduce using rule 88 (expressionsAndStatements)
    STEP      reduce using rule 88 (expressionsAndStatements)
    STR       reduce using rule 88 (expressionsAndStatements)
    STRING    reduce using rule 88 (expressionsAndStatements)
    VAR       reduce using rule 88 (expressionsAndStatements)
    WHILE     reduce using rule 88 (expressionsAndStatements)

state 80 // SFUNC IDENT LBRACE AFF EXPR DPROGRAM BOOLEAN [AFF]

   89 expressionsAndStatements: expressionsAndStatements debugging .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 89 (expressionsAndStatements)
    BOOL      reduce using rule 89 (expressionsAndStatements)
    BOOLA     reduce using rule 89 (expressionsAndStatements)
    BYTE      reduce using rule 89 (expressionsAndStatements)
    BYTEA     reduce using rule 89 (expressionsAndStatements)
    DPROGRAM  reduce using rule 89 (expressionsAndStatements)
    DSTACK    reduce using rule 89 (expressionsAndStatements)
    F32       reduce using rule 89 (expressionsAndStatements)
    F32A      reduce using rule 89 (expressionsAndStatements)
    F64       reduce using rule 89 (expressionsAndStatements)
    F64A      reduce using rule 89 (expressionsAndStatements)
    FLOAT     reduce using rule 89 (expressionsAndStatements)
    I32       reduce using rule 89 (expressionsAndStatements)
    I32A      reduce using rule 89 (expressionsAndStatements)
    I64       reduce using rule 89 (expressionsAndStatements)
    I64A      reduce using rule 89 (expressionsAndStatements)
    IDENT     reduce using rule 89 (expressionsAndStatements)
    IF        reduce using rule 89 (expressionsAndStatements)
    INT       reduce using rule 89 (expressionsAndStatements)
    RBRACE    reduce using rule 89 (expressionsAndStatements)
    SFUNC     reduce using rule 89 (expressionsAndStatements)
    SPACKAGE  reduce using rule 89 (expressionsAndStatements)
    SSTRUCT   reduce using rule 89 (expressionsAndStatements)
    STEP      reduce using rule 89 (expressionsAndStatements)
    STR       reduce using rule 89 (expressionsAndStatements)
    STRING    reduce using rule 89 (expressionsAndStatements)
    VAR       reduce using rule 89 (expressionsAndStatements)
    WHILE     reduce using rule 89 (expressionsAndStatements)

state 81 // SFUNC IDENT LBRACE AFF EXPR AFF EXPR [AFF]

   90 expressionsAndStatements: expressionsAndStatements affordance .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 90 (expressionsAndStatements)
    BOOL      reduce using rule 90 (expressionsAndStatements)
    BOOLA     reduce using rule 90 (expressionsAndStatements)
    BYTE      reduce using rule 90 (expressionsAndStatements)
    BYTEA     reduce using rule 90 (expressionsAndStatements)
    DPROGRAM  reduce using rule 90 (expressionsAndStatements)
    DSTACK    reduce using rule 90 (expressionsAndStatements)
    F32       reduce using rule 90 (expressionsAndStatements)
    F32A      reduce using rule 90 (expressionsAndStatements)
    F64       reduce using rule 90 (expressionsAndStatements)
    F64A      reduce using rule 90 (expressionsAndStatements)
    FLOAT     reduce using rule 90 (expressionsAndStatements)
    I32       reduce using rule 90 (expressionsAndStatements)
    I32A      reduce using rule 90 (expressionsAndStatements)
    I64       reduce using rule 90 (expressionsAndStatements)
    I64A      reduce using rule 90 (expressionsAndStatements)
    IDENT     reduce using rule 90 (expressionsAndStatements)
    IF        reduce using rule 90 (expressionsAndStatements)
    INT       reduce using rule 90 (expressionsAndStatements)
    RBRACE    reduce using rule 90 (expressionsAndStatements)
    SFUNC     reduce using rule 90 (expressionsAndStatements)
    SPACKAGE  reduce using rule 90 (expressionsAndStatements)
    SSTRUCT   reduce using rule 90 (expressionsAndStatements)
    STEP      reduce using rule 90 (expressionsAndStatements)
    STR       reduce using rule 90 (expressionsAndStatements)
    STRING    reduce using rule 90 (expressionsAndStatements)
    VAR       reduce using rule 90 (expressionsAndStatements)
    WHILE     reduce using rule 90 (expressionsAndStatements)

state 82 // SFUNC IDENT LBRACE WHILE BOOLEAN LBRACE AFF EXPR RBRACE

  111 statement: WHILE BOOLEAN $@16 LBRACE $@17 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 111 (statement)
    BOOL      reduce using rule 111 (statement)
    BOOLA     reduce using rule 111 (statement)
    BYTE      reduce using rule 111 (statement)
    BYTEA     reduce using rule 111 (statement)
    DPROGRAM  reduce using rule 111 (statement)
    DSTACK    reduce using rule 111 (statement)
    F32       reduce using rule 111 (statement)
    F32A      reduce using rule 111 (statement)
    F64       reduce using rule 111 (statement)
    F64A      reduce using rule 111 (statement)
    FLOAT     reduce using rule 111 (statement)
    I32       reduce using rule 111 (statement)
    I32A      reduce using rule 111 (statement)
    I64       reduce using rule 111 (statement)
    I64A      reduce using rule 111 (statement)
    IDENT     reduce using rule 111 (statement)
    IF        reduce using rule 111 (statement)
    INT       reduce using rule 111 (statement)
    RBRACE    reduce using rule 111 (statement)
    SFUNC     reduce using rule 111 (statement)
    SPACKAGE  reduce using rule 111 (statement)
    SSTRUCT   reduce using rule 111 (statement)
    STEP      reduce using rule 111 (statement)
    STR       reduce using rule 111 (statement)
    STRING    reduce using rule 111 (statement)
    VAR       reduce using rule 111 (statement)
    WHILE     reduce using rule 111 (statement)

state 83 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN [LBRACE]

  105 statement: WHILE nonAssignExpression $@12 . LBRACE $@13 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 84

state 84 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE

  105 statement: WHILE nonAssignExpression $@12 LBRACE . $@13 expressionsAndStatements RBRACE
  104 $@13: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 104 ($@13)
    BOOL      reduce using rule 104 ($@13)
    BOOLA     reduce using rule 104 ($@13)
    BYTE      reduce using rule 104 ($@13)
    BYTEA     reduce using rule 104 ($@13)
    DPROGRAM  reduce using rule 104 ($@13)
    DSTACK    reduce using rule 104 ($@13)
    F32       reduce using rule 104 ($@13)
    F32A      reduce using rule 104 ($@13)
    F64       reduce using rule 104 ($@13)
    F64A      reduce using rule 104 ($@13)
    FLOAT     reduce using rule 104 ($@13)
    I32       reduce using rule 104 ($@13)
    I32A      reduce using rule 104 ($@13)
    I64       reduce using rule 104 ($@13)
    I64A      reduce using rule 104 ($@13)
    IDENT     reduce using rule 104 ($@13)
    IF        reduce using rule 104 ($@13)
    INT       reduce using rule 104 ($@13)
    SFUNC     reduce using rule 104 ($@13)
    SPACKAGE  reduce using rule 104 ($@13)
    SSTRUCT   reduce using rule 104 ($@13)
    STEP      reduce using rule 104 ($@13)
    STR       reduce using rule 104 ($@13)
    STRING    reduce using rule 104 ($@13)
    VAR       reduce using rule 104 ($@13)
    WHILE     reduce using rule 104 ($@13)

    $@13  goto state 85

state 85 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE [AFF]

  105 statement: WHILE nonAssignExpression $@12 LBRACE $@13 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 86
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 86 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
  105 statement: WHILE nonAssignExpression $@12 LBRACE $@13 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 87
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 87 // SFUNC IDENT LBRACE WHILE IDENT LPAREN RPAREN LBRACE AFF EXPR RBRACE

  105 statement: WHILE nonAssignExpression $@12 LBRACE $@13 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 105 (statement)
    BOOL      reduce using rule 105 (statement)
    BOOLA     reduce using rule 105 (statement)
    BYTE      reduce using rule 105 (statement)
    BYTEA     reduce using rule 105 (statement)
    DPROGRAM  reduce using rule 105 (statement)
    DSTACK    reduce using rule 105 (statement)
    F32       reduce using rule 105 (statement)
    F32A      reduce using rule 105 (statement)
    F64       reduce using rule 105 (statement)
    F64A      reduce using rule 105 (statement)
    FLOAT     reduce using rule 105 (statement)
    I32       reduce using rule 105 (statement)
    I32A      reduce using rule 105 (statement)
    I64       reduce using rule 105 (statement)
    I64A      reduce using rule 105 (statement)
    IDENT     reduce using rule 105 (statement)
    IF        reduce using rule 105 (statement)
    INT       reduce using rule 105 (statement)
    RBRACE    reduce using rule 105 (statement)
    SFUNC     reduce using rule 105 (statement)
    SPACKAGE  reduce using rule 105 (statement)
    SSTRUCT   reduce using rule 105 (statement)
    STEP      reduce using rule 105 (statement)
    STR       reduce using rule 105 (statement)
    STRING    reduce using rule 105 (statement)
    VAR       reduce using rule 105 (statement)
    WHILE     reduce using rule 105 (statement)

state 88 // SFUNC IDENT LBRACE IDENT LPAREN RPAREN [AFF]

   93 nonAssignExpression: IDENT arguments .  [AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 93 (nonAssignExpression)
    ASSIGN    reduce using rule 93 (nonAssignExpression)
    BOOL      reduce using rule 93 (nonAssignExpression)
    BOOLA     reduce using rule 93 (nonAssignExpression)
    BYTE      reduce using rule 93 (nonAssignExpression)
    BYTEA     reduce using rule 93 (nonAssignExpression)
    CASSIGN   reduce using rule 93 (nonAssignExpression)
    COMMA     reduce using rule 93 (nonAssignExpression)
    DPROGRAM  reduce using rule 93 (nonAssignExpression)
    DSTACK    reduce using rule 93 (nonAssignExpression)
    F32       reduce using rule 93 (nonAssignExpression)
    F32A      reduce using rule 93 (nonAssignExpression)
    F64       reduce using rule 93 (nonAssignExpression)
    F64A      reduce using rule 93 (nonAssignExpression)
    FLOAT     reduce using rule 93 (nonAssignExpression)
    I32       reduce using rule 93 (nonAssignExpression)
    I32A      reduce using rule 93 (nonAssignExpression)
    I64       reduce using rule 93 (nonAssignExpression)
    I64A      reduce using rule 93 (nonAssignExpression)
    IDENT     reduce using rule 93 (nonAssignExpression)
    IF        reduce using rule 93 (nonAssignExpression)
    INT       reduce using rule 93 (nonAssignExpression)
    LBRACE    reduce using rule 93 (nonAssignExpression)
    RBRACE    reduce using rule 93 (nonAssignExpression)
    RPAREN    reduce using rule 93 (nonAssignExpression)
    SFUNC     reduce using rule 93 (nonAssignExpression)
    SPACKAGE  reduce using rule 93 (nonAssignExpression)
    SSTRUCT   reduce using rule 93 (nonAssignExpression)
    STEP      reduce using rule 93 (nonAssignExpression)
    STR       reduce using rule 93 (nonAssignExpression)
    STRING    reduce using rule 93 (nonAssignExpression)
    VAR       reduce using rule 93 (nonAssignExpression)
    WHILE     reduce using rule 93 (nonAssignExpression)

state 89 // SFUNC IDENT LBRACE WHILE IDENT [LBRACE]

  108 statement: WHILE IDENT $@14 . LBRACE $@15 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 94

state 90 // SFUNC IDENT LBRACE IDENT LPAREN

  126 arguments: LPAREN . argumentsList RPAREN
  127 arguments: LPAREN . RPAREN

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 53
    INT     shift, and goto state 56
    RPAREN  shift, and goto state 92
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument             goto state 60
    argumentsList        goto state 91
    nonAssignExpression  goto state 63
    typeSpecifier        goto state 59

state 91 // SFUNC IDENT LBRACE IDENT LPAREN FLOAT [COMMA]

  126 arguments: LPAREN argumentsList . RPAREN
  130 argumentsList: argumentsList . COMMA argument
  131 argumentsList: argumentsList . COMMA nonAssignExpression

    COMMA   shift, and goto state 65
    RPAREN  shift, and goto state 93

state 92 // SFUNC IDENT LBRACE IDENT LPAREN RPAREN

  127 arguments: LPAREN RPAREN .  [AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 127 (arguments)
    ASSIGN    reduce using rule 127 (arguments)
    BOOL      reduce using rule 127 (arguments)
    BOOLA     reduce using rule 127 (arguments)
    BYTE      reduce using rule 127 (arguments)
    BYTEA     reduce using rule 127 (arguments)
    CASSIGN   reduce using rule 127 (arguments)
    COMMA     reduce using rule 127 (arguments)
    DPROGRAM  reduce using rule 127 (arguments)
    DSTACK    reduce using rule 127 (arguments)
    F32       reduce using rule 127 (arguments)
    F32A      reduce using rule 127 (arguments)
    F64       reduce using rule 127 (arguments)
    F64A      reduce using rule 127 (arguments)
    FLOAT     reduce using rule 127 (arguments)
    I32       reduce using rule 127 (arguments)
    I32A      reduce using rule 127 (arguments)
    I64       reduce using rule 127 (arguments)
    I64A      reduce using rule 127 (arguments)
    IDENT     reduce using rule 127 (arguments)
    IF        reduce using rule 127 (arguments)
    INT       reduce using rule 127 (arguments)
    LBRACE    reduce using rule 127 (arguments)
    RBRACE    reduce using rule 127 (arguments)
    RPAREN    reduce using rule 127 (arguments)
    SFUNC     reduce using rule 127 (arguments)
    SPACKAGE  reduce using rule 127 (arguments)
    SSTRUCT   reduce using rule 127 (arguments)
    STEP      reduce using rule 127 (arguments)
    STR       reduce using rule 127 (arguments)
    STRING    reduce using rule 127 (arguments)
    VAR       reduce using rule 127 (arguments)
    WHILE     reduce using rule 127 (arguments)

state 93 // SFUNC IDENT LBRACE IDENT LPAREN FLOAT RPAREN

  126 arguments: LPAREN argumentsList RPAREN .  [AFF, ASSIGN, BOOL, BOOLA, BYTE, BYTEA, CASSIGN, COMMA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, RBRACE, RPAREN, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 126 (arguments)
    ASSIGN    reduce using rule 126 (arguments)
    BOOL      reduce using rule 126 (arguments)
    BOOLA     reduce using rule 126 (arguments)
    BYTE      reduce using rule 126 (arguments)
    BYTEA     reduce using rule 126 (arguments)
    CASSIGN   reduce using rule 126 (arguments)
    COMMA     reduce using rule 126 (arguments)
    DPROGRAM  reduce using rule 126 (arguments)
    DSTACK    reduce using rule 126 (arguments)
    F32       reduce using rule 126 (arguments)
    F32A      reduce using rule 126 (arguments)
    F64       reduce using rule 126 (arguments)
    F64A      reduce using rule 126 (arguments)
    FLOAT     reduce using rule 126 (arguments)
    I32       reduce using rule 126 (arguments)
    I32A      reduce using rule 126 (arguments)
    I64       reduce using rule 126 (arguments)
    I64A      reduce using rule 126 (arguments)
    IDENT     reduce using rule 126 (arguments)
    IF        reduce using rule 126 (arguments)
    INT       reduce using rule 126 (arguments)
    LBRACE    reduce using rule 126 (arguments)
    RBRACE    reduce using rule 126 (arguments)
    RPAREN    reduce using rule 126 (arguments)
    SFUNC     reduce using rule 126 (arguments)
    SPACKAGE  reduce using rule 126 (arguments)
    SSTRUCT   reduce using rule 126 (arguments)
    STEP      reduce using rule 126 (arguments)
    STR       reduce using rule 126 (arguments)
    STRING    reduce using rule 126 (arguments)
    VAR       reduce using rule 126 (arguments)
    WHILE     reduce using rule 126 (arguments)

state 94 // SFUNC IDENT LBRACE WHILE IDENT LBRACE

  108 statement: WHILE IDENT $@14 LBRACE . $@15 expressionsAndStatements RBRACE
  107 $@15: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 107 ($@15)
    BOOL      reduce using rule 107 ($@15)
    BOOLA     reduce using rule 107 ($@15)
    BYTE      reduce using rule 107 ($@15)
    BYTEA     reduce using rule 107 ($@15)
    DPROGRAM  reduce using rule 107 ($@15)
    DSTACK    reduce using rule 107 ($@15)
    F32       reduce using rule 107 ($@15)
    F32A      reduce using rule 107 ($@15)
    F64       reduce using rule 107 ($@15)
    F64A      reduce using rule 107 ($@15)
    FLOAT     reduce using rule 107 ($@15)
    I32       reduce using rule 107 ($@15)
    I32A      reduce using rule 107 ($@15)
    I64       reduce using rule 107 ($@15)
    I64A      reduce using rule 107 ($@15)
    IDENT     reduce using rule 107 ($@15)
    IF        reduce using rule 107 ($@15)
    INT       reduce using rule 107 ($@15)
    SFUNC     reduce using rule 107 ($@15)
    SPACKAGE  reduce using rule 107 ($@15)
    SSTRUCT   reduce using rule 107 ($@15)
    STEP      reduce using rule 107 ($@15)
    STR       reduce using rule 107 ($@15)
    STRING    reduce using rule 107 ($@15)
    VAR       reduce using rule 107 ($@15)
    WHILE     reduce using rule 107 ($@15)

    $@15  goto state 95

state 95 // SFUNC IDENT LBRACE WHILE IDENT LBRACE [AFF]

  108 statement: WHILE IDENT $@14 LBRACE $@15 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 96
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 96 // SFUNC IDENT LBRACE WHILE IDENT LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
  108 statement: WHILE IDENT $@14 LBRACE $@15 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 97
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 97 // SFUNC IDENT LBRACE WHILE IDENT LBRACE AFF EXPR RBRACE

  108 statement: WHILE IDENT $@14 LBRACE $@15 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 108 (statement)
    BOOL      reduce using rule 108 (statement)
    BOOLA     reduce using rule 108 (statement)
    BYTE      reduce using rule 108 (statement)
    BYTEA     reduce using rule 108 (statement)
    DPROGRAM  reduce using rule 108 (statement)
    DSTACK    reduce using rule 108 (statement)
    F32       reduce using rule 108 (statement)
    F32A      reduce using rule 108 (statement)
    F64       reduce using rule 108 (statement)
    F64A      reduce using rule 108 (statement)
    FLOAT     reduce using rule 108 (statement)
    I32       reduce using rule 108 (statement)
    I32A      reduce using rule 108 (statement)
    I64       reduce using rule 108 (statement)
    I64A      reduce using rule 108 (statement)
    IDENT     reduce using rule 108 (statement)
    IF        reduce using rule 108 (statement)
    INT       reduce using rule 108 (statement)
    RBRACE    reduce using rule 108 (statement)
    SFUNC     reduce using rule 108 (statement)
    SPACKAGE  reduce using rule 108 (statement)
    SSTRUCT   reduce using rule 108 (statement)
    STEP      reduce using rule 108 (statement)
    STR       reduce using rule 108 (statement)
    STRING    reduce using rule 108 (statement)
    VAR       reduce using rule 108 (statement)
    WHILE     reduce using rule 108 (statement)

state 98 // SFUNC IDENT LBRACE IF IDENT

   93 nonAssignExpression: IDENT . arguments
   99 statement: IF IDENT . $@8 LBRACE $@9 expressionsAndStatements RBRACE elseStatement
   97 $@8: .  [LBRACE]

    LBRACE  reduce using rule 97 ($@8)
    LPAREN  shift, and goto state 90

    $@8        goto state 119
    arguments  goto state 88

state 99 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN [LBRACE]

   96 statement: IF nonAssignExpression . $@6 LBRACE $@7 expressionsAndStatements RBRACE elseStatement
   94 $@6: .  [LBRACE]

    LBRACE  reduce using rule 94 ($@6)

    $@6  goto state 113

state 100 // SFUNC IDENT LBRACE IF BOOLEAN

  102 statement: IF BOOLEAN . $@10 LBRACE $@11 expressionsAndStatements RBRACE elseStatement
  100 $@10: .  [LBRACE]

    LBRACE  reduce using rule 100 ($@10)

    $@10  goto state 101

state 101 // SFUNC IDENT LBRACE IF BOOLEAN [LBRACE]

  102 statement: IF BOOLEAN $@10 . LBRACE $@11 expressionsAndStatements RBRACE elseStatement

    LBRACE  shift, and goto state 102

state 102 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE

  102 statement: IF BOOLEAN $@10 LBRACE . $@11 expressionsAndStatements RBRACE elseStatement
  101 $@11: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 101 ($@11)
    BOOL      reduce using rule 101 ($@11)
    BOOLA     reduce using rule 101 ($@11)
    BYTE      reduce using rule 101 ($@11)
    BYTEA     reduce using rule 101 ($@11)
    DPROGRAM  reduce using rule 101 ($@11)
    DSTACK    reduce using rule 101 ($@11)
    F32       reduce using rule 101 ($@11)
    F32A      reduce using rule 101 ($@11)
    F64       reduce using rule 101 ($@11)
    F64A      reduce using rule 101 ($@11)
    FLOAT     reduce using rule 101 ($@11)
    I32       reduce using rule 101 ($@11)
    I32A      reduce using rule 101 ($@11)
    I64       reduce using rule 101 ($@11)
    I64A      reduce using rule 101 ($@11)
    IDENT     reduce using rule 101 ($@11)
    IF        reduce using rule 101 ($@11)
    INT       reduce using rule 101 ($@11)
    SFUNC     reduce using rule 101 ($@11)
    SPACKAGE  reduce using rule 101 ($@11)
    SSTRUCT   reduce using rule 101 ($@11)
    STEP      reduce using rule 101 ($@11)
    STR       reduce using rule 101 ($@11)
    STRING    reduce using rule 101 ($@11)
    VAR       reduce using rule 101 ($@11)
    WHILE     reduce using rule 101 ($@11)

    $@11  goto state 103

state 103 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE [AFF]

  102 statement: IF BOOLEAN $@10 LBRACE $@11 . expressionsAndStatements RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 104
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 104 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
  102 statement: IF BOOLEAN $@10 LBRACE $@11 expressionsAndStatements . RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 105
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 105 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE

  102 statement: IF BOOLEAN $@10 LBRACE $@11 expressionsAndStatements RBRACE . elseStatement
  113 elseStatement: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 113 (elseStatement)
    BOOL      reduce using rule 113 (elseStatement)
    BOOLA     reduce using rule 113 (elseStatement)
    BYTE      reduce using rule 113 (elseStatement)
    BYTEA     reduce using rule 113 (elseStatement)
    DPROGRAM  reduce using rule 113 (elseStatement)
    DSTACK    reduce using rule 113 (elseStatement)
    ELSE      shift, and goto state 107
    F32       reduce using rule 113 (elseStatement)
    F32A      reduce using rule 113 (elseStatement)
    F64       reduce using rule 113 (elseStatement)
    F64A      reduce using rule 113 (elseStatement)
    FLOAT     reduce using rule 113 (elseStatement)
    I32       reduce using rule 113 (elseStatement)
    I32A      reduce using rule 113 (elseStatement)
    I64       reduce using rule 113 (elseStatement)
    I64A      reduce using rule 113 (elseStatement)
    IDENT     reduce using rule 113 (elseStatement)
    IF        reduce using rule 113 (elseStatement)
    INT       reduce using rule 113 (elseStatement)
    RBRACE    reduce using rule 113 (elseStatement)
    SFUNC     reduce using rule 113 (elseStatement)
    SPACKAGE  reduce using rule 113 (elseStatement)
    SSTRUCT   reduce using rule 113 (elseStatement)
    STEP      reduce using rule 113 (elseStatement)
    STR       reduce using rule 113 (elseStatement)
    STRING    reduce using rule 113 (elseStatement)
    VAR       reduce using rule 113 (elseStatement)
    WHILE     reduce using rule 113 (elseStatement)

    elseStatement  goto state 106

state 106 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE [AFF]

  102 statement: IF BOOLEAN $@10 LBRACE $@11 expressionsAndStatements RBRACE elseStatement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 102 (statement)
    BOOL      reduce using rule 102 (statement)
    BOOLA     reduce using rule 102 (statement)
    BYTE      reduce using rule 102 (statement)
    BYTEA     reduce using rule 102 (statement)
    DPROGRAM  reduce using rule 102 (statement)
    DSTACK    reduce using rule 102 (statement)
    F32       reduce using rule 102 (statement)
    F32A      reduce using rule 102 (statement)
    F64       reduce using rule 102 (statement)
    F64A      reduce using rule 102 (statement)
    FLOAT     reduce using rule 102 (statement)
    I32       reduce using rule 102 (statement)
    I32A      reduce using rule 102 (statement)
    I64       reduce using rule 102 (statement)
    I64A      reduce using rule 102 (statement)
    IDENT     reduce using rule 102 (statement)
    IF        reduce using rule 102 (statement)
    INT       reduce using rule 102 (statement)
    RBRACE    reduce using rule 102 (statement)
    SFUNC     reduce using rule 102 (statement)
    SPACKAGE  reduce using rule 102 (statement)
    SSTRUCT   reduce using rule 102 (statement)
    STEP      reduce using rule 102 (statement)
    STR       reduce using rule 102 (statement)
    STRING    reduce using rule 102 (statement)
    VAR       reduce using rule 102 (statement)
    WHILE     reduce using rule 102 (statement)

state 107 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE ELSE

  116 elseStatement: ELSE . $@18 LBRACE $@19 expressionsAndStatements RBRACE
  114 $@18: .  [LBRACE]

    LBRACE  reduce using rule 114 ($@18)

    $@18  goto state 108

state 108 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE ELSE [LBRACE]

  116 elseStatement: ELSE $@18 . LBRACE $@19 expressionsAndStatements RBRACE

    LBRACE  shift, and goto state 109

state 109 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE ELSE LBRACE

  116 elseStatement: ELSE $@18 LBRACE . $@19 expressionsAndStatements RBRACE
  115 $@19: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 115 ($@19)
    BOOL      reduce using rule 115 ($@19)
    BOOLA     reduce using rule 115 ($@19)
    BYTE      reduce using rule 115 ($@19)
    BYTEA     reduce using rule 115 ($@19)
    DPROGRAM  reduce using rule 115 ($@19)
    DSTACK    reduce using rule 115 ($@19)
    F32       reduce using rule 115 ($@19)
    F32A      reduce using rule 115 ($@19)
    F64       reduce using rule 115 ($@19)
    F64A      reduce using rule 115 ($@19)
    FLOAT     reduce using rule 115 ($@19)
    I32       reduce using rule 115 ($@19)
    I32A      reduce using rule 115 ($@19)
    I64       reduce using rule 115 ($@19)
    I64A      reduce using rule 115 ($@19)
    IDENT     reduce using rule 115 ($@19)
    IF        reduce using rule 115 ($@19)
    INT       reduce using rule 115 ($@19)
    SFUNC     reduce using rule 115 ($@19)
    SPACKAGE  reduce using rule 115 ($@19)
    SSTRUCT   reduce using rule 115 ($@19)
    STEP      reduce using rule 115 ($@19)
    STR       reduce using rule 115 ($@19)
    STRING    reduce using rule 115 ($@19)
    VAR       reduce using rule 115 ($@19)
    WHILE     reduce using rule 115 ($@19)

    $@19  goto state 110

state 110 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE ELSE LBRACE [AFF]

  116 elseStatement: ELSE $@18 LBRACE $@19 . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 111
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 111 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE ELSE LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
  116 elseStatement: ELSE $@18 LBRACE $@19 expressionsAndStatements . RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 112
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 112 // SFUNC IDENT LBRACE IF BOOLEAN LBRACE AFF EXPR RBRACE ELSE LBRACE AFF EXPR RBRACE

  116 elseStatement: ELSE $@18 LBRACE $@19 expressionsAndStatements RBRACE .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 116 (elseStatement)
    BOOL      reduce using rule 116 (elseStatement)
    BOOLA     reduce using rule 116 (elseStatement)
    BYTE      reduce using rule 116 (elseStatement)
    BYTEA     reduce using rule 116 (elseStatement)
    DPROGRAM  reduce using rule 116 (elseStatement)
    DSTACK    reduce using rule 116 (elseStatement)
    F32       reduce using rule 116 (elseStatement)
    F32A      reduce using rule 116 (elseStatement)
    F64       reduce using rule 116 (elseStatement)
    F64A      reduce using rule 116 (elseStatement)
    FLOAT     reduce using rule 116 (elseStatement)
    I32       reduce using rule 116 (elseStatement)
    I32A      reduce using rule 116 (elseStatement)
    I64       reduce using rule 116 (elseStatement)
    I64A      reduce using rule 116 (elseStatement)
    IDENT     reduce using rule 116 (elseStatement)
    IF        reduce using rule 116 (elseStatement)
    INT       reduce using rule 116 (elseStatement)
    RBRACE    reduce using rule 116 (elseStatement)
    SFUNC     reduce using rule 116 (elseStatement)
    SPACKAGE  reduce using rule 116 (elseStatement)
    SSTRUCT   reduce using rule 116 (elseStatement)
    STEP      reduce using rule 116 (elseStatement)
    STR       reduce using rule 116 (elseStatement)
    STRING    reduce using rule 116 (elseStatement)
    VAR       reduce using rule 116 (elseStatement)
    WHILE     reduce using rule 116 (elseStatement)

state 113 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN [LBRACE]

   96 statement: IF nonAssignExpression $@6 . LBRACE $@7 expressionsAndStatements RBRACE elseStatement

    LBRACE  shift, and goto state 114

state 114 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE

   96 statement: IF nonAssignExpression $@6 LBRACE . $@7 expressionsAndStatements RBRACE elseStatement
   95 $@7: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 95 ($@7)
    BOOL      reduce using rule 95 ($@7)
    BOOLA     reduce using rule 95 ($@7)
    BYTE      reduce using rule 95 ($@7)
    BYTEA     reduce using rule 95 ($@7)
    DPROGRAM  reduce using rule 95 ($@7)
    DSTACK    reduce using rule 95 ($@7)
    F32       reduce using rule 95 ($@7)
    F32A      reduce using rule 95 ($@7)
    F64       reduce using rule 95 ($@7)
    F64A      reduce using rule 95 ($@7)
    FLOAT     reduce using rule 95 ($@7)
    I32       reduce using rule 95 ($@7)
    I32A      reduce using rule 95 ($@7)
    I64       reduce using rule 95 ($@7)
    I64A      reduce using rule 95 ($@7)
    IDENT     reduce using rule 95 ($@7)
    IF        reduce using rule 95 ($@7)
    INT       reduce using rule 95 ($@7)
    SFUNC     reduce using rule 95 ($@7)
    SPACKAGE  reduce using rule 95 ($@7)
    SSTRUCT   reduce using rule 95 ($@7)
    STEP      reduce using rule 95 ($@7)
    STR       reduce using rule 95 ($@7)
    STRING    reduce using rule 95 ($@7)
    VAR       reduce using rule 95 ($@7)
    WHILE     reduce using rule 95 ($@7)

    $@7  goto state 115

state 115 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE [AFF]

   96 statement: IF nonAssignExpression $@6 LBRACE $@7 . expressionsAndStatements RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 116
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 116 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
   96 statement: IF nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements . RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 117
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 117 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE AFF EXPR RBRACE

   96 statement: IF nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements RBRACE . elseStatement
  113 elseStatement: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 113 (elseStatement)
    BOOL      reduce using rule 113 (elseStatement)
    BOOLA     reduce using rule 113 (elseStatement)
    BYTE      reduce using rule 113 (elseStatement)
    BYTEA     reduce using rule 113 (elseStatement)
    DPROGRAM  reduce using rule 113 (elseStatement)
    DSTACK    reduce using rule 113 (elseStatement)
    ELSE      shift, and goto state 107
    F32       reduce using rule 113 (elseStatement)
    F32A      reduce using rule 113 (elseStatement)
    F64       reduce using rule 113 (elseStatement)
    F64A      reduce using rule 113 (elseStatement)
    FLOAT     reduce using rule 113 (elseStatement)
    I32       reduce using rule 113 (elseStatement)
    I32A      reduce using rule 113 (elseStatement)
    I64       reduce using rule 113 (elseStatement)
    I64A      reduce using rule 113 (elseStatement)
    IDENT     reduce using rule 113 (elseStatement)
    IF        reduce using rule 113 (elseStatement)
    INT       reduce using rule 113 (elseStatement)
    RBRACE    reduce using rule 113 (elseStatement)
    SFUNC     reduce using rule 113 (elseStatement)
    SPACKAGE  reduce using rule 113 (elseStatement)
    SSTRUCT   reduce using rule 113 (elseStatement)
    STEP      reduce using rule 113 (elseStatement)
    STR       reduce using rule 113 (elseStatement)
    STRING    reduce using rule 113 (elseStatement)
    VAR       reduce using rule 113 (elseStatement)
    WHILE     reduce using rule 113 (elseStatement)

    elseStatement  goto state 118

state 118 // SFUNC IDENT LBRACE IF IDENT LPAREN RPAREN LBRACE AFF EXPR RBRACE [AFF]

   96 statement: IF nonAssignExpression $@6 LBRACE $@7 expressionsAndStatements RBRACE elseStatement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 96 (statement)
    BOOL      reduce using rule 96 (statement)
    BOOLA     reduce using rule 96 (statement)
    BYTE      reduce using rule 96 (statement)
    BYTEA     reduce using rule 96 (statement)
    DPROGRAM  reduce using rule 96 (statement)
    DSTACK    reduce using rule 96 (statement)
    F32       reduce using rule 96 (statement)
    F32A      reduce using rule 96 (statement)
    F64       reduce using rule 96 (statement)
    F64A      reduce using rule 96 (statement)
    FLOAT     reduce using rule 96 (statement)
    I32       reduce using rule 96 (statement)
    I32A      reduce using rule 96 (statement)
    I64       reduce using rule 96 (statement)
    I64A      reduce using rule 96 (statement)
    IDENT     reduce using rule 96 (statement)
    IF        reduce using rule 96 (statement)
    INT       reduce using rule 96 (statement)
    RBRACE    reduce using rule 96 (statement)
    SFUNC     reduce using rule 96 (statement)
    SPACKAGE  reduce using rule 96 (statement)
    SSTRUCT   reduce using rule 96 (statement)
    STEP      reduce using rule 96 (statement)
    STR       reduce using rule 96 (statement)
    STRING    reduce using rule 96 (statement)
    VAR       reduce using rule 96 (statement)
    WHILE     reduce using rule 96 (statement)

state 119 // SFUNC IDENT LBRACE IF IDENT [LBRACE]

   99 statement: IF IDENT $@8 . LBRACE $@9 expressionsAndStatements RBRACE elseStatement

    LBRACE  shift, and goto state 120

state 120 // SFUNC IDENT LBRACE IF IDENT LBRACE

   99 statement: IF IDENT $@8 LBRACE . $@9 expressionsAndStatements RBRACE elseStatement
   98 $@9: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 98 ($@9)
    BOOL      reduce using rule 98 ($@9)
    BOOLA     reduce using rule 98 ($@9)
    BYTE      reduce using rule 98 ($@9)
    BYTEA     reduce using rule 98 ($@9)
    DPROGRAM  reduce using rule 98 ($@9)
    DSTACK    reduce using rule 98 ($@9)
    F32       reduce using rule 98 ($@9)
    F32A      reduce using rule 98 ($@9)
    F64       reduce using rule 98 ($@9)
    F64A      reduce using rule 98 ($@9)
    FLOAT     reduce using rule 98 ($@9)
    I32       reduce using rule 98 ($@9)
    I32A      reduce using rule 98 ($@9)
    I64       reduce using rule 98 ($@9)
    I64A      reduce using rule 98 ($@9)
    IDENT     reduce using rule 98 ($@9)
    IF        reduce using rule 98 ($@9)
    INT       reduce using rule 98 ($@9)
    SFUNC     reduce using rule 98 ($@9)
    SPACKAGE  reduce using rule 98 ($@9)
    SSTRUCT   reduce using rule 98 ($@9)
    STEP      reduce using rule 98 ($@9)
    STR       reduce using rule 98 ($@9)
    STRING    reduce using rule 98 ($@9)
    VAR       reduce using rule 98 ($@9)
    WHILE     reduce using rule 98 ($@9)

    $@9  goto state 121

state 121 // SFUNC IDENT LBRACE IF IDENT LBRACE [AFF]

   99 statement: IF IDENT $@8 LBRACE $@9 . expressionsAndStatements RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 122
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 122 // SFUNC IDENT LBRACE IF IDENT LBRACE AFF EXPR [AFF]

   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance
   99 statement: IF IDENT $@8 LBRACE $@9 expressionsAndStatements . RBRACE elseStatement

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 123
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 123 // SFUNC IDENT LBRACE IF IDENT LBRACE AFF EXPR RBRACE

   99 statement: IF IDENT $@8 LBRACE $@9 expressionsAndStatements RBRACE . elseStatement
  113 elseStatement: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 113 (elseStatement)
    BOOL      reduce using rule 113 (elseStatement)
    BOOLA     reduce using rule 113 (elseStatement)
    BYTE      reduce using rule 113 (elseStatement)
    BYTEA     reduce using rule 113 (elseStatement)
    DPROGRAM  reduce using rule 113 (elseStatement)
    DSTACK    reduce using rule 113 (elseStatement)
    ELSE      shift, and goto state 107
    F32       reduce using rule 113 (elseStatement)
    F32A      reduce using rule 113 (elseStatement)
    F64       reduce using rule 113 (elseStatement)
    F64A      reduce using rule 113 (elseStatement)
    FLOAT     reduce using rule 113 (elseStatement)
    I32       reduce using rule 113 (elseStatement)
    I32A      reduce using rule 113 (elseStatement)
    I64       reduce using rule 113 (elseStatement)
    I64A      reduce using rule 113 (elseStatement)
    IDENT     reduce using rule 113 (elseStatement)
    IF        reduce using rule 113 (elseStatement)
    INT       reduce using rule 113 (elseStatement)
    RBRACE    reduce using rule 113 (elseStatement)
    SFUNC     reduce using rule 113 (elseStatement)
    SPACKAGE  reduce using rule 113 (elseStatement)
    SSTRUCT   reduce using rule 113 (elseStatement)
    STEP      reduce using rule 113 (elseStatement)
    STR       reduce using rule 113 (elseStatement)
    STRING    reduce using rule 113 (elseStatement)
    VAR       reduce using rule 113 (elseStatement)
    WHILE     reduce using rule 113 (elseStatement)

    elseStatement  goto state 124

state 124 // SFUNC IDENT LBRACE IF IDENT LBRACE AFF EXPR RBRACE [AFF]

   99 statement: IF IDENT $@8 LBRACE $@9 expressionsAndStatements RBRACE elseStatement .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 99 (statement)
    BOOL      reduce using rule 99 (statement)
    BOOLA     reduce using rule 99 (statement)
    BYTE      reduce using rule 99 (statement)
    BYTEA     reduce using rule 99 (statement)
    DPROGRAM  reduce using rule 99 (statement)
    DSTACK    reduce using rule 99 (statement)
    F32       reduce using rule 99 (statement)
    F32A      reduce using rule 99 (statement)
    F64       reduce using rule 99 (statement)
    F64A      reduce using rule 99 (statement)
    FLOAT     reduce using rule 99 (statement)
    I32       reduce using rule 99 (statement)
    I32A      reduce using rule 99 (statement)
    I64       reduce using rule 99 (statement)
    I64A      reduce using rule 99 (statement)
    IDENT     reduce using rule 99 (statement)
    IF        reduce using rule 99 (statement)
    INT       reduce using rule 99 (statement)
    RBRACE    reduce using rule 99 (statement)
    SFUNC     reduce using rule 99 (statement)
    SPACKAGE  reduce using rule 99 (statement)
    SSTRUCT   reduce using rule 99 (statement)
    STEP      reduce using rule 99 (statement)
    STR       reduce using rule 99 (statement)
    STRING    reduce using rule 99 (statement)
    VAR       reduce using rule 99 (statement)
    WHILE     reduce using rule 99 (statement)

state 125 // VAR IDENT BOOL ASSIGN

   42 assignOperator: ASSIGN .  [BOOL, BOOLA, BYTE, BYTEA, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, INT, STR, STRING]

    BOOL    reduce using rule 42 (assignOperator)
    BOOLA   reduce using rule 42 (assignOperator)
    BYTE    reduce using rule 42 (assignOperator)
    BYTEA   reduce using rule 42 (assignOperator)
    F32     reduce using rule 42 (assignOperator)
    F32A    reduce using rule 42 (assignOperator)
    F64     reduce using rule 42 (assignOperator)
    F64A    reduce using rule 42 (assignOperator)
    FLOAT   reduce using rule 42 (assignOperator)
    I32     reduce using rule 42 (assignOperator)
    I32A    reduce using rule 42 (assignOperator)
    I64     reduce using rule 42 (assignOperator)
    I64A    reduce using rule 42 (assignOperator)
    IDENT   reduce using rule 42 (assignOperator)
    INT     reduce using rule 42 (assignOperator)
    STR     reduce using rule 42 (assignOperator)
    STRING  reduce using rule 42 (assignOperator)

state 126 // VAR IDENT BOOL CASSIGN

   43 assignOperator: CASSIGN .  [BOOL, BOOLA, BYTE, BYTEA, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, INT, STR, STRING]

    BOOL    reduce using rule 43 (assignOperator)
    BOOLA   reduce using rule 43 (assignOperator)
    BYTE    reduce using rule 43 (assignOperator)
    BYTEA   reduce using rule 43 (assignOperator)
    F32     reduce using rule 43 (assignOperator)
    F32A    reduce using rule 43 (assignOperator)
    F64     reduce using rule 43 (assignOperator)
    F64A    reduce using rule 43 (assignOperator)
    FLOAT   reduce using rule 43 (assignOperator)
    I32     reduce using rule 43 (assignOperator)
    I32A    reduce using rule 43 (assignOperator)
    I64     reduce using rule 43 (assignOperator)
    I64A    reduce using rule 43 (assignOperator)
    IDENT   reduce using rule 43 (assignOperator)
    INT     reduce using rule 43 (assignOperator)
    STR     reduce using rule 43 (assignOperator)
    STRING  reduce using rule 43 (assignOperator)

state 127 // SFUNC IDENT LBRACE FLOAT ASSIGN [IDENT]

   92 assignExpression: argumentsList assignOperator . IDENT arguments

    IDENT  shift, and goto state 128

state 128 // SFUNC IDENT LBRACE FLOAT ASSIGN IDENT

   92 assignExpression: argumentsList assignOperator IDENT . arguments

    LPAREN  shift, and goto state 90

    arguments  goto state 129

state 129 // SFUNC IDENT LBRACE FLOAT ASSIGN IDENT LPAREN RPAREN [AFF]

   92 assignExpression: argumentsList assignOperator IDENT arguments .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 92 (assignExpression)
    BOOL      reduce using rule 92 (assignExpression)
    BOOLA     reduce using rule 92 (assignExpression)
    BYTE      reduce using rule 92 (assignExpression)
    BYTEA     reduce using rule 92 (assignExpression)
    DPROGRAM  reduce using rule 92 (assignExpression)
    DSTACK    reduce using rule 92 (assignExpression)
    F32       reduce using rule 92 (assignExpression)
    F32A      reduce using rule 92 (assignExpression)
    F64       reduce using rule 92 (assignExpression)
    F64A      reduce using rule 92 (assignExpression)
    FLOAT     reduce using rule 92 (assignExpression)
    I32       reduce using rule 92 (assignExpression)
    I32A      reduce using rule 92 (assignExpression)
    I64       reduce using rule 92 (assignExpression)
    I64A      reduce using rule 92 (assignExpression)
    IDENT     reduce using rule 92 (assignExpression)
    IF        reduce using rule 92 (assignExpression)
    INT       reduce using rule 92 (assignExpression)
    RBRACE    reduce using rule 92 (assignExpression)
    SFUNC     reduce using rule 92 (assignExpression)
    SPACKAGE  reduce using rule 92 (assignExpression)
    SSTRUCT   reduce using rule 92 (assignExpression)
    STEP      reduce using rule 92 (assignExpression)
    STR       reduce using rule 92 (assignExpression)
    STRING    reduce using rule 92 (assignExpression)
    VAR       reduce using rule 92 (assignExpression)
    WHILE     reduce using rule 92 (assignExpression)

state 130 // SFUNC IDENT LBRACE VAR IDENT

   91 assignExpression: VAR IDENT . typeSpecifier definitionAssignment
  112 statement: VAR IDENT . IDENT

    BOOL   shift, and goto state 33
    BOOLA  shift, and goto state 35
    BYTE   shift, and goto state 34
    BYTEA  shift, and goto state 36
    F32    shift, and goto state 31
    F32A   shift, and goto state 39
    F64    shift, and goto state 32
    F64A   shift, and goto state 40
    I32    shift, and goto state 29
    I32A   shift, and goto state 37
    I64    shift, and goto state 30
    I64A   shift, and goto state 38
    IDENT  shift, and goto state 132
    STR    shift, and goto state 41

    typeSpecifier  goto state 131

state 131 // SFUNC IDENT LBRACE VAR IDENT BOOL [AFF]

   91 assignExpression: VAR IDENT typeSpecifier . definitionAssignment
   58 definitionAssignment: .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 58 (definitionAssignment)
    ASSIGN    shift, and goto state 125
    BOOL      reduce using rule 58 (definitionAssignment)
    BOOLA     reduce using rule 58 (definitionAssignment)
    BYTE      reduce using rule 58 (definitionAssignment)
    BYTEA     reduce using rule 58 (definitionAssignment)
    CASSIGN   shift, and goto state 126
    DPROGRAM  reduce using rule 58 (definitionAssignment)
    DSTACK    reduce using rule 58 (definitionAssignment)
    F32       reduce using rule 58 (definitionAssignment)
    F32A      reduce using rule 58 (definitionAssignment)
    F64       reduce using rule 58 (definitionAssignment)
    F64A      reduce using rule 58 (definitionAssignment)
    FLOAT     reduce using rule 58 (definitionAssignment)
    I32       reduce using rule 58 (definitionAssignment)
    I32A      reduce using rule 58 (definitionAssignment)
    I64       reduce using rule 58 (definitionAssignment)
    I64A      reduce using rule 58 (definitionAssignment)
    IDENT     reduce using rule 58 (definitionAssignment)
    IF        reduce using rule 58 (definitionAssignment)
    INT       reduce using rule 58 (definitionAssignment)
    RBRACE    reduce using rule 58 (definitionAssignment)
    SFUNC     reduce using rule 58 (definitionAssignment)
    SPACKAGE  reduce using rule 58 (definitionAssignment)
    SSTRUCT   reduce using rule 58 (definitionAssignment)
    STEP      reduce using rule 58 (definitionAssignment)
    STR       reduce using rule 58 (definitionAssignment)
    STRING    reduce using rule 58 (definitionAssignment)
    VAR       reduce using rule 58 (definitionAssignment)
    WHILE     reduce using rule 58 (definitionAssignment)

    assignOperator        goto state 133
    definitionAssignment  goto state 134

state 132 // SFUNC IDENT LBRACE VAR IDENT IDENT

  112 statement: VAR IDENT IDENT .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 112 (statement)
    BOOL      reduce using rule 112 (statement)
    BOOLA     reduce using rule 112 (statement)
    BYTE      reduce using rule 112 (statement)
    BYTEA     reduce using rule 112 (statement)
    DPROGRAM  reduce using rule 112 (statement)
    DSTACK    reduce using rule 112 (statement)
    F32       reduce using rule 112 (statement)
    F32A      reduce using rule 112 (statement)
    F64       reduce using rule 112 (statement)
    F64A      reduce using rule 112 (statement)
    FLOAT     reduce using rule 112 (statement)
    I32       reduce using rule 112 (statement)
    I32A      reduce using rule 112 (statement)
    I64       reduce using rule 112 (statement)
    I64A      reduce using rule 112 (statement)
    IDENT     reduce using rule 112 (statement)
    IF        reduce using rule 112 (statement)
    INT       reduce using rule 112 (statement)
    RBRACE    reduce using rule 112 (statement)
    SFUNC     reduce using rule 112 (statement)
    SPACKAGE  reduce using rule 112 (statement)
    SSTRUCT   reduce using rule 112 (statement)
    STEP      reduce using rule 112 (statement)
    STR       reduce using rule 112 (statement)
    STRING    reduce using rule 112 (statement)
    VAR       reduce using rule 112 (statement)
    WHILE     reduce using rule 112 (statement)

state 133 // VAR IDENT BOOL ASSIGN [BOOL]

   59 definitionAssignment: assignOperator . argument

    BOOL    shift, and goto state 33
    BOOLA   shift, and goto state 35
    BYTE    shift, and goto state 34
    BYTEA   shift, and goto state 36
    F32     shift, and goto state 31
    F32A    shift, and goto state 39
    F64     shift, and goto state 32
    F64A    shift, and goto state 40
    FLOAT   shift, and goto state 57
    I32     shift, and goto state 29
    I32A    shift, and goto state 37
    I64     shift, and goto state 30
    I64A    shift, and goto state 38
    IDENT   shift, and goto state 136
    INT     shift, and goto state 56
    STR     shift, and goto state 41
    STRING  shift, and goto state 58

    argument       goto state 135
    typeSpecifier  goto state 59

state 134 // SFUNC IDENT LBRACE VAR IDENT BOOL [AFF]

   91 assignExpression: VAR IDENT typeSpecifier definitionAssignment .  [AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, I32, I32A, I64, I64A, IDENT, IF, INT, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, VAR, WHILE]

    AFF       reduce using rule 91 (assignExpression)
    BOOL      reduce using rule 91 (assignExpression)
    BOOLA     reduce using rule 91 (assignExpression)
    BYTE      reduce using rule 91 (assignExpression)
    BYTEA     reduce using rule 91 (assignExpression)
    DPROGRAM  reduce using rule 91 (assignExpression)
    DSTACK    reduce using rule 91 (assignExpression)
    F32       reduce using rule 91 (assignExpression)
    F32A      reduce using rule 91 (assignExpression)
    F64       reduce using rule 91 (assignExpression)
    F64A      reduce using rule 91 (assignExpression)
    FLOAT     reduce using rule 91 (assignExpression)
    I32       reduce using rule 91 (assignExpression)
    I32A      reduce using rule 91 (assignExpression)
    I64       reduce using rule 91 (assignExpression)
    I64A      reduce using rule 91 (assignExpression)
    IDENT     reduce using rule 91 (assignExpression)
    IF        reduce using rule 91 (assignExpression)
    INT       reduce using rule 91 (assignExpression)
    RBRACE    reduce using rule 91 (assignExpression)
    SFUNC     reduce using rule 91 (assignExpression)
    SPACKAGE  reduce using rule 91 (assignExpression)
    SSTRUCT   reduce using rule 91 (assignExpression)
    STEP      reduce using rule 91 (assignExpression)
    STR       reduce using rule 91 (assignExpression)
    STRING    reduce using rule 91 (assignExpression)
    VAR       reduce using rule 91 (assignExpression)
    WHILE     reduce using rule 91 (assignExpression)

state 135 // VAR IDENT BOOL ASSIGN FLOAT [$end]

   59 definitionAssignment: assignOperator argument .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 59 (definitionAssignment)
    AFF        reduce using rule 59 (definitionAssignment)
    BOOL       reduce using rule 59 (definitionAssignment)
    BOOLA      reduce using rule 59 (definitionAssignment)
    BYTE       reduce using rule 59 (definitionAssignment)
    BYTEA      reduce using rule 59 (definitionAssignment)
    DPROGRAM   reduce using rule 59 (definitionAssignment)
    DSTACK     reduce using rule 59 (definitionAssignment)
    F32        reduce using rule 59 (definitionAssignment)
    F32A       reduce using rule 59 (definitionAssignment)
    F64        reduce using rule 59 (definitionAssignment)
    F64A       reduce using rule 59 (definitionAssignment)
    FLOAT      reduce using rule 59 (definitionAssignment)
    FUNC       reduce using rule 59 (definitionAssignment)
    I32        reduce using rule 59 (definitionAssignment)
    I32A       reduce using rule 59 (definitionAssignment)
    I64        reduce using rule 59 (definitionAssignment)
    I64A       reduce using rule 59 (definitionAssignment)
    IDENT      reduce using rule 59 (definitionAssignment)
    IF         reduce using rule 59 (definitionAssignment)
    INT        reduce using rule 59 (definitionAssignment)
    PACKAGE    reduce using rule 59 (definitionAssignment)
    RBRACE     reduce using rule 59 (definitionAssignment)
    SFUNC      reduce using rule 59 (definitionAssignment)
    SPACKAGE   reduce using rule 59 (definitionAssignment)
    SSTRUCT    reduce using rule 59 (definitionAssignment)
    STEP       reduce using rule 59 (definitionAssignment)
    STR        reduce using rule 59 (definitionAssignment)
    STRING     reduce using rule 59 (definitionAssignment)
    TYPSTRUCT  reduce using rule 59 (definitionAssignment)
    VAR        reduce using rule 59 (definitionAssignment)
    WHILE      reduce using rule 59 (definitionAssignment)

state 136 // VAR IDENT BOOL ASSIGN IDENT

  124 argument: IDENT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 124 (argument)
    AFF        reduce using rule 124 (argument)
    BOOL       reduce using rule 124 (argument)
    BOOLA      reduce using rule 124 (argument)
    BYTE       reduce using rule 124 (argument)
    BYTEA      reduce using rule 124 (argument)
    DPROGRAM   reduce using rule 124 (argument)
    DSTACK     reduce using rule 124 (argument)
    F32        reduce using rule 124 (argument)
    F32A       reduce using rule 124 (argument)
    F64        reduce using rule 124 (argument)
    F64A       reduce using rule 124 (argument)
    FLOAT      reduce using rule 124 (argument)
    FUNC       reduce using rule 124 (argument)
    I32        reduce using rule 124 (argument)
    I32A       reduce using rule 124 (argument)
    I64        reduce using rule 124 (argument)
    I64A       reduce using rule 124 (argument)
    IDENT      reduce using rule 124 (argument)
    IF         reduce using rule 124 (argument)
    INT        reduce using rule 124 (argument)
    PACKAGE    reduce using rule 124 (argument)
    RBRACE     reduce using rule 124 (argument)
    SFUNC      reduce using rule 124 (argument)
    SPACKAGE   reduce using rule 124 (argument)
    SSTRUCT    reduce using rule 124 (argument)
    STEP       reduce using rule 124 (argument)
    STR        reduce using rule 124 (argument)
    STRING     reduce using rule 124 (argument)
    TYPSTRUCT  reduce using rule 124 (argument)
    VAR        reduce using rule 124 (argument)
    WHILE      reduce using rule 124 (argument)

state 137 // FUNC IDENT LPAREN RPAREN LPAREN RPAREN LBRACE AFF EXPR RBRACE

   75 functionStatements: LBRACE expressionsAndStatements RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 75 (functionStatements)
    AFF        reduce using rule 75 (functionStatements)
    DPROGRAM   reduce using rule 75 (functionStatements)
    DSTACK     reduce using rule 75 (functionStatements)
    FUNC       reduce using rule 75 (functionStatements)
    PACKAGE    reduce using rule 75 (functionStatements)
    RBRACE     reduce using rule 75 (functionStatements)
    SFUNC      reduce using rule 75 (functionStatements)
    SPACKAGE   reduce using rule 75 (functionStatements)
    SSTRUCT    reduce using rule 75 (functionStatements)
    STEP       reduce using rule 75 (functionStatements)
    TYPSTRUCT  reduce using rule 75 (functionStatements)
    VAR        reduce using rule 75 (functionStatements)

state 138 // FUNC IDENT LPAREN IDENT BOOL [COMMA]

   68 functionParameters: LPAREN parameters . RPAREN
   74 parameters: parameters . COMMA parameter

    COMMA   shift, and goto state 144
    RPAREN  shift, and goto state 143

state 139 // FUNC IDENT LPAREN RPAREN

   69 functionParameters: LPAREN RPAREN .  [LBRACE, LPAREN]

    LBRACE  reduce using rule 69 (functionParameters)
    LPAREN  reduce using rule 69 (functionParameters)

state 140 // FUNC IDENT LPAREN IDENT

   72 parameter: IDENT . typeSpecifier

    BOOL   shift, and goto state 33
    BOOLA  shift, and goto state 35
    BYTE   shift, and goto state 34
    BYTEA  shift, and goto state 36
    F32    shift, and goto state 31
    F32A   shift, and goto state 39
    F64    shift, and goto state 32
    F64A   shift, and goto state 40
    I32    shift, and goto state 29
    I32A   shift, and goto state 37
    I64    shift, and goto state 30
    I64A   shift, and goto state 38
    STR    shift, and goto state 41

    typeSpecifier  goto state 142

state 141 // FUNC IDENT LPAREN IDENT BOOL [COMMA]

   73 parameters: parameter .  [COMMA, RPAREN]

    COMMA   reduce using rule 73 (parameters)
    RPAREN  reduce using rule 73 (parameters)

state 142 // FUNC IDENT LPAREN IDENT BOOL [COMMA]

   72 parameter: IDENT typeSpecifier .  [COMMA, IDENT, RBRACE, RPAREN]

    COMMA   reduce using rule 72 (parameter)
    IDENT   reduce using rule 72 (parameter)
    RBRACE  reduce using rule 72 (parameter)
    RPAREN  reduce using rule 72 (parameter)

state 143 // FUNC IDENT LPAREN IDENT BOOL RPAREN

   68 functionParameters: LPAREN parameters RPAREN .  [LBRACE, LPAREN]

    LBRACE  reduce using rule 68 (functionParameters)
    LPAREN  reduce using rule 68 (functionParameters)

state 144 // FUNC IDENT LPAREN IDENT BOOL COMMA

   74 parameters: parameters COMMA . parameter

    IDENT  shift, and goto state 140

    parameter  goto state 145

state 145 // FUNC IDENT LPAREN IDENT BOOL COMMA IDENT BOOL [COMMA]

   74 parameters: parameters COMMA parameter .  [COMMA, RPAREN]

    COMMA   reduce using rule 74 (parameters)
    RPAREN  reduce using rule 74 (parameters)

state 146 // TYPSTRUCT IDENT

   67 structDeclaration: TYPSTRUCT IDENT . $@4 STRUCT structFields
   66 $@4: .  [STRUCT]

    STRUCT  reduce using rule 66 ($@4)

    $@4  goto state 147

state 147 // TYPSTRUCT IDENT [STRUCT]

   67 structDeclaration: TYPSTRUCT IDENT $@4 . STRUCT structFields

    STRUCT  shift, and goto state 148

state 148 // TYPSTRUCT IDENT STRUCT

   67 structDeclaration: TYPSTRUCT IDENT $@4 STRUCT . structFields

    LBRACE  shift, and goto state 149

    structFields  goto state 150

state 149 // TYPSTRUCT IDENT STRUCT LBRACE

   64 structFields: LBRACE . fields RBRACE
   65 structFields: LBRACE . RBRACE

    IDENT   shift, and goto state 140
    RBRACE  shift, and goto state 153

    fields     goto state 152
    parameter  goto state 151

state 150 // TYPSTRUCT IDENT STRUCT LBRACE RBRACE [$end]

   67 structDeclaration: TYPSTRUCT IDENT $@4 STRUCT structFields .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 67 (structDeclaration)
    AFF        reduce using rule 67 (structDeclaration)
    DPROGRAM   reduce using rule 67 (structDeclaration)
    DSTACK     reduce using rule 67 (structDeclaration)
    FUNC       reduce using rule 67 (structDeclaration)
    PACKAGE    reduce using rule 67 (structDeclaration)
    RBRACE     reduce using rule 67 (structDeclaration)
    SFUNC      reduce using rule 67 (structDeclaration)
    SPACKAGE   reduce using rule 67 (structDeclaration)
    SSTRUCT    reduce using rule 67 (structDeclaration)
    STEP       reduce using rule 67 (structDeclaration)
    TYPSTRUCT  reduce using rule 67 (structDeclaration)
    VAR        reduce using rule 67 (structDeclaration)

state 151 // SSTRUCT IDENT LBRACE IDENT BOOL [IDENT]

   62 fields: parameter .  [IDENT, RBRACE]

    IDENT   reduce using rule 62 (fields)
    RBRACE  reduce using rule 62 (fields)

state 152 // TYPSTRUCT IDENT STRUCT LBRACE IDENT BOOL [IDENT]

   63 fields: fields . parameter
   64 structFields: LBRACE fields . RBRACE

    IDENT   shift, and goto state 140
    RBRACE  shift, and goto state 155

    parameter  goto state 154

state 153 // TYPSTRUCT IDENT STRUCT LBRACE RBRACE

   65 structFields: LBRACE RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 65 (structFields)
    AFF        reduce using rule 65 (structFields)
    DPROGRAM   reduce using rule 65 (structFields)
    DSTACK     reduce using rule 65 (structFields)
    FUNC       reduce using rule 65 (structFields)
    PACKAGE    reduce using rule 65 (structFields)
    RBRACE     reduce using rule 65 (structFields)
    SFUNC      reduce using rule 65 (structFields)
    SPACKAGE   reduce using rule 65 (structFields)
    SSTRUCT    reduce using rule 65 (structFields)
    STEP       reduce using rule 65 (structFields)
    TYPSTRUCT  reduce using rule 65 (structFields)
    VAR        reduce using rule 65 (structFields)

state 154 // SSTRUCT IDENT LBRACE IDENT BOOL IDENT BOOL [IDENT]

   63 fields: fields parameter .  [IDENT, RBRACE]

    IDENT   reduce using rule 63 (fields)
    RBRACE  reduce using rule 63 (fields)

state 155 // TYPSTRUCT IDENT STRUCT LBRACE IDENT BOOL RBRACE

   64 structFields: LBRACE fields RBRACE .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 64 (structFields)
    AFF        reduce using rule 64 (structFields)
    DPROGRAM   reduce using rule 64 (structFields)
    DSTACK     reduce using rule 64 (structFields)
    FUNC       reduce using rule 64 (structFields)
    PACKAGE    reduce using rule 64 (structFields)
    RBRACE     reduce using rule 64 (structFields)
    SFUNC      reduce using rule 64 (structFields)
    SPACKAGE   reduce using rule 64 (structFields)
    SSTRUCT    reduce using rule 64 (structFields)
    STEP       reduce using rule 64 (structFields)
    TYPSTRUCT  reduce using rule 64 (structFields)
    VAR        reduce using rule 64 (structFields)

state 156 // VAR IDENT

   60 definitionDeclaration: VAR IDENT . typeSpecifier definitionAssignment
   61 definitionDeclaration: VAR IDENT . IDENT

    BOOL   shift, and goto state 33
    BOOLA  shift, and goto state 35
    BYTE   shift, and goto state 34
    BYTEA  shift, and goto state 36
    F32    shift, and goto state 31
    F32A   shift, and goto state 39
    F64    shift, and goto state 32
    F64A   shift, and goto state 40
    I32    shift, and goto state 29
    I32A   shift, and goto state 37
    I64    shift, and goto state 30
    I64A   shift, and goto state 38
    IDENT  shift, and goto state 158
    STR    shift, and goto state 41

    typeSpecifier  goto state 157

state 157 // VAR IDENT BOOL [$end]

   60 definitionDeclaration: VAR IDENT typeSpecifier . definitionAssignment
   58 definitionAssignment: .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 58 (definitionAssignment)
    AFF        reduce using rule 58 (definitionAssignment)
    ASSIGN     shift, and goto state 125
    CASSIGN    shift, and goto state 126
    DPROGRAM   reduce using rule 58 (definitionAssignment)
    DSTACK     reduce using rule 58 (definitionAssignment)
    FUNC       reduce using rule 58 (definitionAssignment)
    PACKAGE    reduce using rule 58 (definitionAssignment)
    RBRACE     reduce using rule 58 (definitionAssignment)
    SFUNC      reduce using rule 58 (definitionAssignment)
    SPACKAGE   reduce using rule 58 (definitionAssignment)
    SSTRUCT    reduce using rule 58 (definitionAssignment)
    STEP       reduce using rule 58 (definitionAssignment)
    TYPSTRUCT  reduce using rule 58 (definitionAssignment)
    VAR        reduce using rule 58 (definitionAssignment)

    assignOperator        goto state 133
    definitionAssignment  goto state 159

state 158 // VAR IDENT IDENT

   61 definitionDeclaration: VAR IDENT IDENT .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 61 (definitionDeclaration)
    AFF        reduce using rule 61 (definitionDeclaration)
    DPROGRAM   reduce using rule 61 (definitionDeclaration)
    DSTACK     reduce using rule 61 (definitionDeclaration)
    FUNC       reduce using rule 61 (definitionDeclaration)
    PACKAGE    reduce using rule 61 (definitionDeclaration)
    RBRACE     reduce using rule 61 (definitionDeclaration)
    SFUNC      reduce using rule 61 (definitionDeclaration)
    SPACKAGE   reduce using rule 61 (definitionDeclaration)
    SSTRUCT    reduce using rule 61 (definitionDeclaration)
    STEP       reduce using rule 61 (definitionDeclaration)
    TYPSTRUCT  reduce using rule 61 (definitionDeclaration)
    VAR        reduce using rule 61 (definitionDeclaration)

state 159 // VAR IDENT BOOL [$end]

   60 definitionDeclaration: VAR IDENT typeSpecifier definitionAssignment .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 60 (definitionDeclaration)
    AFF        reduce using rule 60 (definitionDeclaration)
    DPROGRAM   reduce using rule 60 (definitionDeclaration)
    DSTACK     reduce using rule 60 (definitionDeclaration)
    FUNC       reduce using rule 60 (definitionDeclaration)
    PACKAGE    reduce using rule 60 (definitionDeclaration)
    RBRACE     reduce using rule 60 (definitionDeclaration)
    SFUNC      reduce using rule 60 (definitionDeclaration)
    SPACKAGE   reduce using rule 60 (definitionDeclaration)
    SSTRUCT    reduce using rule 60 (definitionDeclaration)
    STEP       reduce using rule 60 (definitionDeclaration)
    TYPSTRUCT  reduce using rule 60 (definitionDeclaration)
    VAR        reduce using rule 60 (definitionDeclaration)

state 160 // PACKAGE IDENT

   57 packageDeclaration: PACKAGE IDENT .  [$end, AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    $end       reduce using rule 57 (packageDeclaration)
    AFF        reduce using rule 57 (packageDeclaration)
    DPROGRAM   reduce using rule 57 (packageDeclaration)
    DSTACK     reduce using rule 57 (packageDeclaration)
    FUNC       reduce using rule 57 (packageDeclaration)
    PACKAGE    reduce using rule 57 (packageDeclaration)
    RBRACE     reduce using rule 57 (packageDeclaration)
    SFUNC      reduce using rule 57 (packageDeclaration)
    SPACKAGE   reduce using rule 57 (packageDeclaration)
    SSTRUCT    reduce using rule 57 (packageDeclaration)
    STEP       reduce using rule 57 (packageDeclaration)
    TYPSTRUCT  reduce using rule 57 (packageDeclaration)
    VAR        reduce using rule 57 (packageDeclaration)

state 161 // SSTRUCT IDENT

   41 selector: SSTRUCT IDENT . $@3 selectorFields
   40 $@3: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 40 ($@3)
    AFF        reduce using rule 40 ($@3)
    BOOL       reduce using rule 40 ($@3)
    BOOLA      reduce using rule 40 ($@3)
    BYTE       reduce using rule 40 ($@3)
    BYTEA      reduce using rule 40 ($@3)
    DPROGRAM   reduce using rule 40 ($@3)
    DSTACK     reduce using rule 40 ($@3)
    F32        reduce using rule 40 ($@3)
    F32A       reduce using rule 40 ($@3)
    F64        reduce using rule 40 ($@3)
    F64A       reduce using rule 40 ($@3)
    FLOAT      reduce using rule 40 ($@3)
    FUNC       reduce using rule 40 ($@3)
    I32        reduce using rule 40 ($@3)
    I32A       reduce using rule 40 ($@3)
    I64        reduce using rule 40 ($@3)
    I64A       reduce using rule 40 ($@3)
    IDENT      reduce using rule 40 ($@3)
    IF         reduce using rule 40 ($@3)
    INT        reduce using rule 40 ($@3)
    LBRACE     reduce using rule 40 ($@3)
    PACKAGE    reduce using rule 40 ($@3)
    RBRACE     reduce using rule 40 ($@3)
    SFUNC      reduce using rule 40 ($@3)
    SPACKAGE   reduce using rule 40 ($@3)
    SSTRUCT    reduce using rule 40 ($@3)
    STEP       reduce using rule 40 ($@3)
    STR        reduce using rule 40 ($@3)
    STRING     reduce using rule 40 ($@3)
    TYPSTRUCT  reduce using rule 40 ($@3)
    VAR        reduce using rule 40 ($@3)
    WHILE      reduce using rule 40 ($@3)

    $@3  goto state 162

state 162 // SSTRUCT IDENT [$end]

   41 selector: SSTRUCT IDENT $@3 . selectorFields
   34 selectorFields: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 34 (selectorFields)
    AFF        reduce using rule 34 (selectorFields)
    BOOL       reduce using rule 34 (selectorFields)
    BOOLA      reduce using rule 34 (selectorFields)
    BYTE       reduce using rule 34 (selectorFields)
    BYTEA      reduce using rule 34 (selectorFields)
    DPROGRAM   reduce using rule 34 (selectorFields)
    DSTACK     reduce using rule 34 (selectorFields)
    F32        reduce using rule 34 (selectorFields)
    F32A       reduce using rule 34 (selectorFields)
    F64        reduce using rule 34 (selectorFields)
    F64A       reduce using rule 34 (selectorFields)
    FLOAT      reduce using rule 34 (selectorFields)
    FUNC       reduce using rule 34 (selectorFields)
    I32        reduce using rule 34 (selectorFields)
    I32A       reduce using rule 34 (selectorFields)
    I64        reduce using rule 34 (selectorFields)
    I64A       reduce using rule 34 (selectorFields)
    IDENT      reduce using rule 34 (selectorFields)
    IF         reduce using rule 34 (selectorFields)
    INT        reduce using rule 34 (selectorFields)
    LBRACE     shift, and goto state 163
    PACKAGE    reduce using rule 34 (selectorFields)
    RBRACE     reduce using rule 34 (selectorFields)
    SFUNC      reduce using rule 34 (selectorFields)
    SPACKAGE   reduce using rule 34 (selectorFields)
    SSTRUCT    reduce using rule 34 (selectorFields)
    STEP       reduce using rule 34 (selectorFields)
    STR        reduce using rule 34 (selectorFields)
    STRING     reduce using rule 34 (selectorFields)
    TYPSTRUCT  reduce using rule 34 (selectorFields)
    VAR        reduce using rule 34 (selectorFields)
    WHILE      reduce using rule 34 (selectorFields)

    selectorFields  goto state 164

state 163 // SSTRUCT IDENT LBRACE

   35 selectorFields: LBRACE . fields RBRACE

    IDENT  shift, and goto state 140

    fields     goto state 165
    parameter  goto state 151

state 164 // SSTRUCT IDENT [$end]

   41 selector: SSTRUCT IDENT $@3 selectorFields .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 41 (selector)
    AFF        reduce using rule 41 (selector)
    BOOL       reduce using rule 41 (selector)
    BOOLA      reduce using rule 41 (selector)
    BYTE       reduce using rule 41 (selector)
    BYTEA      reduce using rule 41 (selector)
    DPROGRAM   reduce using rule 41 (selector)
    DSTACK     reduce using rule 41 (selector)
    F32        reduce using rule 41 (selector)
    F32A       reduce using rule 41 (selector)
    F64        reduce using rule 41 (selector)
    F64A       reduce using rule 41 (selector)
    FLOAT      reduce using rule 41 (selector)
    FUNC       reduce using rule 41 (selector)
    I32        reduce using rule 41 (selector)
    I32A       reduce using rule 41 (selector)
    I64        reduce using rule 41 (selector)
    I64A       reduce using rule 41 (selector)
    IDENT      reduce using rule 41 (selector)
    IF         reduce using rule 41 (selector)
    INT        reduce using rule 41 (selector)
    PACKAGE    reduce using rule 41 (selector)
    RBRACE     reduce using rule 41 (selector)
    SFUNC      reduce using rule 41 (selector)
    SPACKAGE   reduce using rule 41 (selector)
    SSTRUCT    reduce using rule 41 (selector)
    STEP       reduce using rule 41 (selector)
    STR        reduce using rule 41 (selector)
    STRING     reduce using rule 41 (selector)
    TYPSTRUCT  reduce using rule 41 (selector)
    VAR        reduce using rule 41 (selector)
    WHILE      reduce using rule 41 (selector)

state 165 // SSTRUCT IDENT LBRACE IDENT BOOL [IDENT]

   35 selectorFields: LBRACE fields . RBRACE
   63 fields: fields . parameter

    IDENT   shift, and goto state 140
    RBRACE  shift, and goto state 166

    parameter  goto state 154

state 166 // SSTRUCT IDENT LBRACE IDENT BOOL RBRACE

   35 selectorFields: LBRACE fields RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 35 (selectorFields)
    AFF        reduce using rule 35 (selectorFields)
    BOOL       reduce using rule 35 (selectorFields)
    BOOLA      reduce using rule 35 (selectorFields)
    BYTE       reduce using rule 35 (selectorFields)
    BYTEA      reduce using rule 35 (selectorFields)
    DPROGRAM   reduce using rule 35 (selectorFields)
    DSTACK     reduce using rule 35 (selectorFields)
    F32        reduce using rule 35 (selectorFields)
    F32A       reduce using rule 35 (selectorFields)
    F64        reduce using rule 35 (selectorFields)
    F64A       reduce using rule 35 (selectorFields)
    FLOAT      reduce using rule 35 (selectorFields)
    FUNC       reduce using rule 35 (selectorFields)
    I32        reduce using rule 35 (selectorFields)
    I32A       reduce using rule 35 (selectorFields)
    I64        reduce using rule 35 (selectorFields)
    I64A       reduce using rule 35 (selectorFields)
    IDENT      reduce using rule 35 (selectorFields)
    IF         reduce using rule 35 (selectorFields)
    INT        reduce using rule 35 (selectorFields)
    PACKAGE    reduce using rule 35 (selectorFields)
    RBRACE     reduce using rule 35 (selectorFields)
    SFUNC      reduce using rule 35 (selectorFields)
    SPACKAGE   reduce using rule 35 (selectorFields)
    SSTRUCT    reduce using rule 35 (selectorFields)
    STEP       reduce using rule 35 (selectorFields)
    STR        reduce using rule 35 (selectorFields)
    STRING     reduce using rule 35 (selectorFields)
    TYPSTRUCT  reduce using rule 35 (selectorFields)
    VAR        reduce using rule 35 (selectorFields)
    WHILE      reduce using rule 35 (selectorFields)

state 167 // SFUNC IDENT

   39 selector: SFUNC IDENT . $@2 selectorExpressionsAndStatements
   38 $@2: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 38 ($@2)
    AFF        reduce using rule 38 ($@2)
    BOOL       reduce using rule 38 ($@2)
    BOOLA      reduce using rule 38 ($@2)
    BYTE       reduce using rule 38 ($@2)
    BYTEA      reduce using rule 38 ($@2)
    DPROGRAM   reduce using rule 38 ($@2)
    DSTACK     reduce using rule 38 ($@2)
    F32        reduce using rule 38 ($@2)
    F32A       reduce using rule 38 ($@2)
    F64        reduce using rule 38 ($@2)
    F64A       reduce using rule 38 ($@2)
    FLOAT      reduce using rule 38 ($@2)
    FUNC       reduce using rule 38 ($@2)
    I32        reduce using rule 38 ($@2)
    I32A       reduce using rule 38 ($@2)
    I64        reduce using rule 38 ($@2)
    I64A       reduce using rule 38 ($@2)
    IDENT      reduce using rule 38 ($@2)
    IF         reduce using rule 38 ($@2)
    INT        reduce using rule 38 ($@2)
    LBRACE     reduce using rule 38 ($@2)
    PACKAGE    reduce using rule 38 ($@2)
    RBRACE     reduce using rule 38 ($@2)
    SFUNC      reduce using rule 38 ($@2)
    SPACKAGE   reduce using rule 38 ($@2)
    SSTRUCT    reduce using rule 38 ($@2)
    STEP       reduce using rule 38 ($@2)
    STR        reduce using rule 38 ($@2)
    STRING     reduce using rule 38 ($@2)
    TYPSTRUCT  reduce using rule 38 ($@2)
    VAR        reduce using rule 38 ($@2)
    WHILE      reduce using rule 38 ($@2)

    $@2  goto state 168

state 168 // SFUNC IDENT [$end]

   39 selector: SFUNC IDENT $@2 . selectorExpressionsAndStatements
   32 selectorExpressionsAndStatements: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 32 (selectorExpressionsAndStatements)
    AFF        reduce using rule 32 (selectorExpressionsAndStatements)
    BOOL       reduce using rule 32 (selectorExpressionsAndStatements)
    BOOLA      reduce using rule 32 (selectorExpressionsAndStatements)
    BYTE       reduce using rule 32 (selectorExpressionsAndStatements)
    BYTEA      reduce using rule 32 (selectorExpressionsAndStatements)
    DPROGRAM   reduce using rule 32 (selectorExpressionsAndStatements)
    DSTACK     reduce using rule 32 (selectorExpressionsAndStatements)
    F32        reduce using rule 32 (selectorExpressionsAndStatements)
    F32A       reduce using rule 32 (selectorExpressionsAndStatements)
    F64        reduce using rule 32 (selectorExpressionsAndStatements)
    F64A       reduce using rule 32 (selectorExpressionsAndStatements)
    FLOAT      reduce using rule 32 (selectorExpressionsAndStatements)
    FUNC       reduce using rule 32 (selectorExpressionsAndStatements)
    I32        reduce using rule 32 (selectorExpressionsAndStatements)
    I32A       reduce using rule 32 (selectorExpressionsAndStatements)
    I64        reduce using rule 32 (selectorExpressionsAndStatements)
    I64A       reduce using rule 32 (selectorExpressionsAndStatements)
    IDENT      reduce using rule 32 (selectorExpressionsAndStatements)
    IF         reduce using rule 32 (selectorExpressionsAndStatements)
    INT        reduce using rule 32 (selectorExpressionsAndStatements)
    LBRACE     shift, and goto state 169
    PACKAGE    reduce using rule 32 (selectorExpressionsAndStatements)
    RBRACE     reduce using rule 32 (selectorExpressionsAndStatements)
    SFUNC      reduce using rule 32 (selectorExpressionsAndStatements)
    SPACKAGE   reduce using rule 32 (selectorExpressionsAndStatements)
    SSTRUCT    reduce using rule 32 (selectorExpressionsAndStatements)
    STEP       reduce using rule 32 (selectorExpressionsAndStatements)
    STR        reduce using rule 32 (selectorExpressionsAndStatements)
    STRING     reduce using rule 32 (selectorExpressionsAndStatements)
    TYPSTRUCT  reduce using rule 32 (selectorExpressionsAndStatements)
    VAR        reduce using rule 32 (selectorExpressionsAndStatements)
    WHILE      reduce using rule 32 (selectorExpressionsAndStatements)

    selectorExpressionsAndStatements  goto state 170

state 169 // SFUNC IDENT LBRACE

   33 selectorExpressionsAndStatements: LBRACE . expressionsAndStatements RBRACE

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance                goto state 50
    argument                  goto state 60
    argumentsList             goto state 52
    assignExpression          goto state 45
    debugging                 goto state 49
    expressionsAndStatements  goto state 171
    nonAssignExpression       goto state 44
    selector                  goto state 47
    statement                 goto state 46
    stepping                  goto state 48
    typeSpecifier             goto state 59

state 170 // SFUNC IDENT [$end]

   39 selector: SFUNC IDENT $@2 selectorExpressionsAndStatements .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 39 (selector)
    AFF        reduce using rule 39 (selector)
    BOOL       reduce using rule 39 (selector)
    BOOLA      reduce using rule 39 (selector)
    BYTE       reduce using rule 39 (selector)
    BYTEA      reduce using rule 39 (selector)
    DPROGRAM   reduce using rule 39 (selector)
    DSTACK     reduce using rule 39 (selector)
    F32        reduce using rule 39 (selector)
    F32A       reduce using rule 39 (selector)
    F64        reduce using rule 39 (selector)
    F64A       reduce using rule 39 (selector)
    FLOAT      reduce using rule 39 (selector)
    FUNC       reduce using rule 39 (selector)
    I32        reduce using rule 39 (selector)
    I32A       reduce using rule 39 (selector)
    I64        reduce using rule 39 (selector)
    I64A       reduce using rule 39 (selector)
    IDENT      reduce using rule 39 (selector)
    IF         reduce using rule 39 (selector)
    INT        reduce using rule 39 (selector)
    PACKAGE    reduce using rule 39 (selector)
    RBRACE     reduce using rule 39 (selector)
    SFUNC      reduce using rule 39 (selector)
    SPACKAGE   reduce using rule 39 (selector)
    SSTRUCT    reduce using rule 39 (selector)
    STEP       reduce using rule 39 (selector)
    STR        reduce using rule 39 (selector)
    STRING     reduce using rule 39 (selector)
    TYPSTRUCT  reduce using rule 39 (selector)
    VAR        reduce using rule 39 (selector)
    WHILE      reduce using rule 39 (selector)

state 171 // SFUNC IDENT LBRACE AFF EXPR [AFF]

   33 selectorExpressionsAndStatements: LBRACE expressionsAndStatements . RBRACE
   84 expressionsAndStatements: expressionsAndStatements . nonAssignExpression
   85 expressionsAndStatements: expressionsAndStatements . assignExpression
   86 expressionsAndStatements: expressionsAndStatements . statement
   87 expressionsAndStatements: expressionsAndStatements . selector
   88 expressionsAndStatements: expressionsAndStatements . stepping
   89 expressionsAndStatements: expressionsAndStatements . debugging
   90 expressionsAndStatements: expressionsAndStatements . affordance

    AFF       shift, and goto state 11
    BOOL      shift, and goto state 33
    BOOLA     shift, and goto state 35
    BYTE      shift, and goto state 34
    BYTEA     shift, and goto state 36
    DPROGRAM  shift, and goto state 14
    DSTACK    shift, and goto state 13
    F32       shift, and goto state 31
    F32A      shift, and goto state 39
    F64       shift, and goto state 32
    F64A      shift, and goto state 40
    FLOAT     shift, and goto state 57
    I32       shift, and goto state 29
    I32A      shift, and goto state 37
    I64       shift, and goto state 30
    I64A      shift, and goto state 38
    IDENT     shift, and goto state 53
    IF        shift, and goto state 54
    INT       shift, and goto state 56
    RBRACE    shift, and goto state 172
    SFUNC     shift, and goto state 16
    SPACKAGE  shift, and goto state 15
    SSTRUCT   shift, and goto state 17
    STEP      shift, and goto state 12
    STR       shift, and goto state 41
    STRING    shift, and goto state 58
    VAR       shift, and goto state 51
    WHILE     shift, and goto state 55

    affordance           goto state 81
    argument             goto state 60
    argumentsList        goto state 52
    assignExpression     goto state 76
    debugging            goto state 80
    nonAssignExpression  goto state 75
    selector             goto state 78
    statement            goto state 77
    stepping             goto state 79
    typeSpecifier        goto state 59

state 172 // SFUNC IDENT LBRACE AFF EXPR RBRACE

   33 selectorExpressionsAndStatements: LBRACE expressionsAndStatements RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 33 (selectorExpressionsAndStatements)
    AFF        reduce using rule 33 (selectorExpressionsAndStatements)
    BOOL       reduce using rule 33 (selectorExpressionsAndStatements)
    BOOLA      reduce using rule 33 (selectorExpressionsAndStatements)
    BYTE       reduce using rule 33 (selectorExpressionsAndStatements)
    BYTEA      reduce using rule 33 (selectorExpressionsAndStatements)
    DPROGRAM   reduce using rule 33 (selectorExpressionsAndStatements)
    DSTACK     reduce using rule 33 (selectorExpressionsAndStatements)
    F32        reduce using rule 33 (selectorExpressionsAndStatements)
    F32A       reduce using rule 33 (selectorExpressionsAndStatements)
    F64        reduce using rule 33 (selectorExpressionsAndStatements)
    F64A       reduce using rule 33 (selectorExpressionsAndStatements)
    FLOAT      reduce using rule 33 (selectorExpressionsAndStatements)
    FUNC       reduce using rule 33 (selectorExpressionsAndStatements)
    I32        reduce using rule 33 (selectorExpressionsAndStatements)
    I32A       reduce using rule 33 (selectorExpressionsAndStatements)
    I64        reduce using rule 33 (selectorExpressionsAndStatements)
    I64A       reduce using rule 33 (selectorExpressionsAndStatements)
    IDENT      reduce using rule 33 (selectorExpressionsAndStatements)
    IF         reduce using rule 33 (selectorExpressionsAndStatements)
    INT        reduce using rule 33 (selectorExpressionsAndStatements)
    PACKAGE    reduce using rule 33 (selectorExpressionsAndStatements)
    RBRACE     reduce using rule 33 (selectorExpressionsAndStatements)
    SFUNC      reduce using rule 33 (selectorExpressionsAndStatements)
    SPACKAGE   reduce using rule 33 (selectorExpressionsAndStatements)
    SSTRUCT    reduce using rule 33 (selectorExpressionsAndStatements)
    STEP       reduce using rule 33 (selectorExpressionsAndStatements)
    STR        reduce using rule 33 (selectorExpressionsAndStatements)
    STRING     reduce using rule 33 (selectorExpressionsAndStatements)
    TYPSTRUCT  reduce using rule 33 (selectorExpressionsAndStatements)
    VAR        reduce using rule 33 (selectorExpressionsAndStatements)
    WHILE      reduce using rule 33 (selectorExpressionsAndStatements)

state 173 // SPACKAGE IDENT

   37 selector: SPACKAGE IDENT . $@1 selectorLines
   36 $@1: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, LBRACE, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 36 ($@1)
    AFF        reduce using rule 36 ($@1)
    BOOL       reduce using rule 36 ($@1)
    BOOLA      reduce using rule 36 ($@1)
    BYTE       reduce using rule 36 ($@1)
    BYTEA      reduce using rule 36 ($@1)
    DPROGRAM   reduce using rule 36 ($@1)
    DSTACK     reduce using rule 36 ($@1)
    F32        reduce using rule 36 ($@1)
    F32A       reduce using rule 36 ($@1)
    F64        reduce using rule 36 ($@1)
    F64A       reduce using rule 36 ($@1)
    FLOAT      reduce using rule 36 ($@1)
    FUNC       reduce using rule 36 ($@1)
    I32        reduce using rule 36 ($@1)
    I32A       reduce using rule 36 ($@1)
    I64        reduce using rule 36 ($@1)
    I64A       reduce using rule 36 ($@1)
    IDENT      reduce using rule 36 ($@1)
    IF         reduce using rule 36 ($@1)
    INT        reduce using rule 36 ($@1)
    LBRACE     reduce using rule 36 ($@1)
    PACKAGE    reduce using rule 36 ($@1)
    RBRACE     reduce using rule 36 ($@1)
    SFUNC      reduce using rule 36 ($@1)
    SPACKAGE   reduce using rule 36 ($@1)
    SSTRUCT    reduce using rule 36 ($@1)
    STEP       reduce using rule 36 ($@1)
    STR        reduce using rule 36 ($@1)
    STRING     reduce using rule 36 ($@1)
    TYPSTRUCT  reduce using rule 36 ($@1)
    VAR        reduce using rule 36 ($@1)
    WHILE      reduce using rule 36 ($@1)

    $@1  goto state 174

state 174 // SPACKAGE IDENT [$end]

   37 selector: SPACKAGE IDENT $@1 . selectorLines
   11 selectorLines: .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 11 (selectorLines)
    AFF        reduce using rule 11 (selectorLines)
    BOOL       reduce using rule 11 (selectorLines)
    BOOLA      reduce using rule 11 (selectorLines)
    BYTE       reduce using rule 11 (selectorLines)
    BYTEA      reduce using rule 11 (selectorLines)
    DPROGRAM   reduce using rule 11 (selectorLines)
    DSTACK     reduce using rule 11 (selectorLines)
    F32        reduce using rule 11 (selectorLines)
    F32A       reduce using rule 11 (selectorLines)
    F64        reduce using rule 11 (selectorLines)
    F64A       reduce using rule 11 (selectorLines)
    FLOAT      reduce using rule 11 (selectorLines)
    FUNC       reduce using rule 11 (selectorLines)
    I32        reduce using rule 11 (selectorLines)
    I32A       reduce using rule 11 (selectorLines)
    I64        reduce using rule 11 (selectorLines)
    I64A       reduce using rule 11 (selectorLines)
    IDENT      reduce using rule 11 (selectorLines)
    IF         reduce using rule 11 (selectorLines)
    INT        reduce using rule 11 (selectorLines)
    LBRACE     shift, and goto state 175
    PACKAGE    reduce using rule 11 (selectorLines)
    RBRACE     reduce using rule 11 (selectorLines)
    SFUNC      reduce using rule 11 (selectorLines)
    SPACKAGE   reduce using rule 11 (selectorLines)
    SSTRUCT    reduce using rule 11 (selectorLines)
    STEP       reduce using rule 11 (selectorLines)
    STR        reduce using rule 11 (selectorLines)
    STRING     reduce using rule 11 (selectorLines)
    TYPSTRUCT  reduce using rule 11 (selectorLines)
    VAR        reduce using rule 11 (selectorLines)
    WHILE      reduce using rule 11 (selectorLines)

    selectorLines  goto state 176

state 175 // SPACKAGE IDENT LBRACE

   12 selectorLines: LBRACE . lines RBRACE
    1 lines: .  [AFF, DPROGRAM, DSTACK, FUNC, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, TYPSTRUCT, VAR]

    AFF        reduce using rule 1 (lines)
    DPROGRAM   reduce using rule 1 (lines)
    DSTACK     reduce using rule 1 (lines)
    FUNC       reduce using rule 1 (lines)
    PACKAGE    reduce using rule 1 (lines)
    RBRACE     reduce using rule 1 (lines)
    SFUNC      reduce using rule 1 (lines)
    SPACKAGE   reduce using rule 1 (lines)
    SSTRUCT    reduce using rule 1 (lines)
    STEP       reduce using rule 1 (lines)
    TYPSTRUCT  reduce using rule 1 (lines)
    VAR        reduce using rule 1 (lines)

    lines  goto state 177

state 176 // SPACKAGE IDENT [$end]

   37 selector: SPACKAGE IDENT $@1 selectorLines .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 37 (selector)
    AFF        reduce using rule 37 (selector)
    BOOL       reduce using rule 37 (selector)
    BOOLA      reduce using rule 37 (selector)
    BYTE       reduce using rule 37 (selector)
    BYTEA      reduce using rule 37 (selector)
    DPROGRAM   reduce using rule 37 (selector)
    DSTACK     reduce using rule 37 (selector)
    F32        reduce using rule 37 (selector)
    F32A       reduce using rule 37 (selector)
    F64        reduce using rule 37 (selector)
    F64A       reduce using rule 37 (selector)
    FLOAT      reduce using rule 37 (selector)
    FUNC       reduce using rule 37 (selector)
    I32        reduce using rule 37 (selector)
    I32A       reduce using rule 37 (selector)
    I64        reduce using rule 37 (selector)
    I64A       reduce using rule 37 (selector)
    IDENT      reduce using rule 37 (selector)
    IF         reduce using rule 37 (selector)
    INT        reduce using rule 37 (selector)
    PACKAGE    reduce using rule 37 (selector)
    RBRACE     reduce using rule 37 (selector)
    SFUNC      reduce using rule 37 (selector)
    SPACKAGE   reduce using rule 37 (selector)
    SSTRUCT    reduce using rule 37 (selector)
    STEP       reduce using rule 37 (selector)
    STR        reduce using rule 37 (selector)
    STRING     reduce using rule 37 (selector)
    TYPSTRUCT  reduce using rule 37 (selector)
    VAR        reduce using rule 37 (selector)
    WHILE      reduce using rule 37 (selector)

state 177 // SPACKAGE IDENT LBRACE [AFF]

    2 lines: lines . line
   12 selectorLines: LBRACE lines . RBRACE

    AFF        shift, and goto state 11
    DPROGRAM   shift, and goto state 14
    DSTACK     shift, and goto state 13
    FUNC       shift, and goto state 21
    PACKAGE    shift, and goto state 18
    RBRACE     shift, and goto state 178
    SFUNC      shift, and goto state 16
    SPACKAGE   shift, and goto state 15
    SSTRUCT    shift, and goto state 17
    STEP       shift, and goto state 12
    TYPSTRUCT  shift, and goto state 20
    VAR        shift, and goto state 19

    affordance             goto state 10
    debugging              goto state 9
    definitionDeclaration  goto state 3
    functionDeclaration    goto state 6
    line                   goto state 2
    packageDeclaration     goto state 5
    selector               goto state 7
    stepping               goto state 8
    structDeclaration      goto state 4

state 178 // SPACKAGE IDENT LBRACE RBRACE

   12 selectorLines: LBRACE lines RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 12 (selectorLines)
    AFF        reduce using rule 12 (selectorLines)
    BOOL       reduce using rule 12 (selectorLines)
    BOOLA      reduce using rule 12 (selectorLines)
    BYTE       reduce using rule 12 (selectorLines)
    BYTEA      reduce using rule 12 (selectorLines)
    DPROGRAM   reduce using rule 12 (selectorLines)
    DSTACK     reduce using rule 12 (selectorLines)
    F32        reduce using rule 12 (selectorLines)
    F32A       reduce using rule 12 (selectorLines)
    F64        reduce using rule 12 (selectorLines)
    F64A       reduce using rule 12 (selectorLines)
    FLOAT      reduce using rule 12 (selectorLines)
    FUNC       reduce using rule 12 (selectorLines)
    I32        reduce using rule 12 (selectorLines)
    I32A       reduce using rule 12 (selectorLines)
    I64        reduce using rule 12 (selectorLines)
    I64A       reduce using rule 12 (selectorLines)
    IDENT      reduce using rule 12 (selectorLines)
    IF         reduce using rule 12 (selectorLines)
    INT        reduce using rule 12 (selectorLines)
    PACKAGE    reduce using rule 12 (selectorLines)
    RBRACE     reduce using rule 12 (selectorLines)
    SFUNC      reduce using rule 12 (selectorLines)
    SPACKAGE   reduce using rule 12 (selectorLines)
    SSTRUCT    reduce using rule 12 (selectorLines)
    STEP       reduce using rule 12 (selectorLines)
    STR        reduce using rule 12 (selectorLines)
    STRING     reduce using rule 12 (selectorLines)
    TYPSTRUCT  reduce using rule 12 (selectorLines)
    VAR        reduce using rule 12 (selectorLines)
    WHILE      reduce using rule 12 (selectorLines)

state 179 // DPROGRAM BOOLEAN

   31 debugging: DPROGRAM BOOLEAN .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 31 (debugging)
    AFF        reduce using rule 31 (debugging)
    BOOL       reduce using rule 31 (debugging)
    BOOLA      reduce using rule 31 (debugging)
    BYTE       reduce using rule 31 (debugging)
    BYTEA      reduce using rule 31 (debugging)
    DPROGRAM   reduce using rule 31 (debugging)
    DSTACK     reduce using rule 31 (debugging)
    F32        reduce using rule 31 (debugging)
    F32A       reduce using rule 31 (debugging)
    F64        reduce using rule 31 (debugging)
    F64A       reduce using rule 31 (debugging)
    FLOAT      reduce using rule 31 (debugging)
    FUNC       reduce using rule 31 (debugging)
    I32        reduce using rule 31 (debugging)
    I32A       reduce using rule 31 (debugging)
    I64        reduce using rule 31 (debugging)
    I64A       reduce using rule 31 (debugging)
    IDENT      reduce using rule 31 (debugging)
    IF         reduce using rule 31 (debugging)
    INT        reduce using rule 31 (debugging)
    PACKAGE    reduce using rule 31 (debugging)
    RBRACE     reduce using rule 31 (debugging)
    SFUNC      reduce using rule 31 (debugging)
    SPACKAGE   reduce using rule 31 (debugging)
    SSTRUCT    reduce using rule 31 (debugging)
    STEP       reduce using rule 31 (debugging)
    STR        reduce using rule 31 (debugging)
    STRING     reduce using rule 31 (debugging)
    TYPSTRUCT  reduce using rule 31 (debugging)
    VAR        reduce using rule 31 (debugging)
    WHILE      reduce using rule 31 (debugging)

state 180 // DSTACK BOOLEAN

   30 debugging: DSTACK BOOLEAN .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 30 (debugging)
    AFF        reduce using rule 30 (debugging)
    BOOL       reduce using rule 30 (debugging)
    BOOLA      reduce using rule 30 (debugging)
    BYTE       reduce using rule 30 (debugging)
    BYTEA      reduce using rule 30 (debugging)
    DPROGRAM   reduce using rule 30 (debugging)
    DSTACK     reduce using rule 30 (debugging)
    F32        reduce using rule 30 (debugging)
    F32A       reduce using rule 30 (debugging)
    F64        reduce using rule 30 (debugging)
    F64A       reduce using rule 30 (debugging)
    FLOAT      reduce using rule 30 (debugging)
    FUNC       reduce using rule 30 (debugging)
    I32        reduce using rule 30 (debugging)
    I32A       reduce using rule 30 (debugging)
    I64        reduce using rule 30 (debugging)
    I64A       reduce using rule 30 (debugging)
    IDENT      reduce using rule 30 (debugging)
    IF         reduce using rule 30 (debugging)
    INT        reduce using rule 30 (debugging)
    PACKAGE    reduce using rule 30 (debugging)
    RBRACE     reduce using rule 30 (debugging)
    SFUNC      reduce using rule 30 (debugging)
    SPACKAGE   reduce using rule 30 (debugging)
    SSTRUCT    reduce using rule 30 (debugging)
    STEP       reduce using rule 30 (debugging)
    STR        reduce using rule 30 (debugging)
    STRING     reduce using rule 30 (debugging)
    TYPSTRUCT  reduce using rule 30 (debugging)
    VAR        reduce using rule 30 (debugging)
    WHILE      reduce using rule 30 (debugging)

state 181 // STEP INT

   29 stepping: STEP INT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 29 (stepping)
    AFF        reduce using rule 29 (stepping)
    BOOL       reduce using rule 29 (stepping)
    BOOLA      reduce using rule 29 (stepping)
    BYTE       reduce using rule 29 (stepping)
    BYTEA      reduce using rule 29 (stepping)
    DPROGRAM   reduce using rule 29 (stepping)
    DSTACK     reduce using rule 29 (stepping)
    F32        reduce using rule 29 (stepping)
    F32A       reduce using rule 29 (stepping)
    F64        reduce using rule 29 (stepping)
    F64A       reduce using rule 29 (stepping)
    FLOAT      reduce using rule 29 (stepping)
    FUNC       reduce using rule 29 (stepping)
    I32        reduce using rule 29 (stepping)
    I32A       reduce using rule 29 (stepping)
    I64        reduce using rule 29 (stepping)
    I64A       reduce using rule 29 (stepping)
    IDENT      reduce using rule 29 (stepping)
    IF         reduce using rule 29 (stepping)
    INT        reduce using rule 29 (stepping)
    PACKAGE    reduce using rule 29 (stepping)
    RBRACE     reduce using rule 29 (stepping)
    SFUNC      reduce using rule 29 (stepping)
    SPACKAGE   reduce using rule 29 (stepping)
    SSTRUCT    reduce using rule 29 (stepping)
    STEP       reduce using rule 29 (stepping)
    STR        reduce using rule 29 (stepping)
    STRING     reduce using rule 29 (stepping)
    TYPSTRUCT  reduce using rule 29 (stepping)
    VAR        reduce using rule 29 (stepping)
    WHILE      reduce using rule 29 (stepping)

state 182 // AFF FUNC

   13 affordance: AFF FUNC . IDENT
   14 affordance: AFF FUNC . IDENT LBRACE INT RBRACE
   15 affordance: AFF FUNC . IDENT LBRACE STRING RBRACE
   16 affordance: AFF FUNC . IDENT LBRACE STRING INT RBRACE

    IDENT  shift, and goto state 209

state 183 // AFF PACKAGE

   17 affordance: AFF PACKAGE . IDENT
   18 affordance: AFF PACKAGE . IDENT LBRACE INT RBRACE
   19 affordance: AFF PACKAGE . IDENT LBRACE STRING RBRACE
   20 affordance: AFF PACKAGE . IDENT LBRACE STRING INT RBRACE

    IDENT  shift, and goto state 201

state 184 // AFF STRUCT

   21 affordance: AFF STRUCT . IDENT
   22 affordance: AFF STRUCT . IDENT LBRACE INT RBRACE
   23 affordance: AFF STRUCT . IDENT LBRACE STRING RBRACE
   24 affordance: AFF STRUCT . IDENT LBRACE STRING INT RBRACE

    IDENT  shift, and goto state 193

state 185 // AFF EXPR

   25 affordance: AFF EXPR .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]
   26 affordance: AFF EXPR . LBRACE INT RBRACE
   27 affordance: AFF EXPR . LBRACE STRING RBRACE
   28 affordance: AFF EXPR . LBRACE STRING INT RBRACE

    $end       reduce using rule 25 (affordance)
    AFF        reduce using rule 25 (affordance)
    BOOL       reduce using rule 25 (affordance)
    BOOLA      reduce using rule 25 (affordance)
    BYTE       reduce using rule 25 (affordance)
    BYTEA      reduce using rule 25 (affordance)
    DPROGRAM   reduce using rule 25 (affordance)
    DSTACK     reduce using rule 25 (affordance)
    F32        reduce using rule 25 (affordance)
    F32A       reduce using rule 25 (affordance)
    F64        reduce using rule 25 (affordance)
    F64A       reduce using rule 25 (affordance)
    FLOAT      reduce using rule 25 (affordance)
    FUNC       reduce using rule 25 (affordance)
    I32        reduce using rule 25 (affordance)
    I32A       reduce using rule 25 (affordance)
    I64        reduce using rule 25 (affordance)
    I64A       reduce using rule 25 (affordance)
    IDENT      reduce using rule 25 (affordance)
    IF         reduce using rule 25 (affordance)
    INT        reduce using rule 25 (affordance)
    LBRACE     shift, and goto state 186
    PACKAGE    reduce using rule 25 (affordance)
    RBRACE     reduce using rule 25 (affordance)
    SFUNC      reduce using rule 25 (affordance)
    SPACKAGE   reduce using rule 25 (affordance)
    SSTRUCT    reduce using rule 25 (affordance)
    STEP       reduce using rule 25 (affordance)
    STR        reduce using rule 25 (affordance)
    STRING     reduce using rule 25 (affordance)
    TYPSTRUCT  reduce using rule 25 (affordance)
    VAR        reduce using rule 25 (affordance)
    WHILE      reduce using rule 25 (affordance)

state 186 // AFF EXPR LBRACE

   26 affordance: AFF EXPR LBRACE . INT RBRACE
   27 affordance: AFF EXPR LBRACE . STRING RBRACE
   28 affordance: AFF EXPR LBRACE . STRING INT RBRACE

    INT     shift, and goto state 187
    STRING  shift, and goto state 188

state 187 // AFF EXPR LBRACE INT

   26 affordance: AFF EXPR LBRACE INT . RBRACE

    RBRACE  shift, and goto state 192

state 188 // AFF EXPR LBRACE STRING

   27 affordance: AFF EXPR LBRACE STRING . RBRACE
   28 affordance: AFF EXPR LBRACE STRING . INT RBRACE

    INT     shift, and goto state 190
    RBRACE  shift, and goto state 189

state 189 // AFF EXPR LBRACE STRING RBRACE

   27 affordance: AFF EXPR LBRACE STRING RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 27 (affordance)
    AFF        reduce using rule 27 (affordance)
    BOOL       reduce using rule 27 (affordance)
    BOOLA      reduce using rule 27 (affordance)
    BYTE       reduce using rule 27 (affordance)
    BYTEA      reduce using rule 27 (affordance)
    DPROGRAM   reduce using rule 27 (affordance)
    DSTACK     reduce using rule 27 (affordance)
    F32        reduce using rule 27 (affordance)
    F32A       reduce using rule 27 (affordance)
    F64        reduce using rule 27 (affordance)
    F64A       reduce using rule 27 (affordance)
    FLOAT      reduce using rule 27 (affordance)
    FUNC       reduce using rule 27 (affordance)
    I32        reduce using rule 27 (affordance)
    I32A       reduce using rule 27 (affordance)
    I64        reduce using rule 27 (affordance)
    I64A       reduce using rule 27 (affordance)
    IDENT      reduce using rule 27 (affordance)
    IF         reduce using rule 27 (affordance)
    INT        reduce using rule 27 (affordance)
    PACKAGE    reduce using rule 27 (affordance)
    RBRACE     reduce using rule 27 (affordance)
    SFUNC      reduce using rule 27 (affordance)
    SPACKAGE   reduce using rule 27 (affordance)
    SSTRUCT    reduce using rule 27 (affordance)
    STEP       reduce using rule 27 (affordance)
    STR        reduce using rule 27 (affordance)
    STRING     reduce using rule 27 (affordance)
    TYPSTRUCT  reduce using rule 27 (affordance)
    VAR        reduce using rule 27 (affordance)
    WHILE      reduce using rule 27 (affordance)

state 190 // AFF EXPR LBRACE STRING INT

   28 affordance: AFF EXPR LBRACE STRING INT . RBRACE

    RBRACE  shift, and goto state 191

state 191 // AFF EXPR LBRACE STRING INT RBRACE

   28 affordance: AFF EXPR LBRACE STRING INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 28 (affordance)
    AFF        reduce using rule 28 (affordance)
    BOOL       reduce using rule 28 (affordance)
    BOOLA      reduce using rule 28 (affordance)
    BYTE       reduce using rule 28 (affordance)
    BYTEA      reduce using rule 28 (affordance)
    DPROGRAM   reduce using rule 28 (affordance)
    DSTACK     reduce using rule 28 (affordance)
    F32        reduce using rule 28 (affordance)
    F32A       reduce using rule 28 (affordance)
    F64        reduce using rule 28 (affordance)
    F64A       reduce using rule 28 (affordance)
    FLOAT      reduce using rule 28 (affordance)
    FUNC       reduce using rule 28 (affordance)
    I32        reduce using rule 28 (affordance)
    I32A       reduce using rule 28 (affordance)
    I64        reduce using rule 28 (affordance)
    I64A       reduce using rule 28 (affordance)
    IDENT      reduce using rule 28 (affordance)
    IF         reduce using rule 28 (affordance)
    INT        reduce using rule 28 (affordance)
    PACKAGE    reduce using rule 28 (affordance)
    RBRACE     reduce using rule 28 (affordance)
    SFUNC      reduce using rule 28 (affordance)
    SPACKAGE   reduce using rule 28 (affordance)
    SSTRUCT    reduce using rule 28 (affordance)
    STEP       reduce using rule 28 (affordance)
    STR        reduce using rule 28 (affordance)
    STRING     reduce using rule 28 (affordance)
    TYPSTRUCT  reduce using rule 28 (affordance)
    VAR        reduce using rule 28 (affordance)
    WHILE      reduce using rule 28 (affordance)

state 192 // AFF EXPR LBRACE INT RBRACE

   26 affordance: AFF EXPR LBRACE INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 26 (affordance)
    AFF        reduce using rule 26 (affordance)
    BOOL       reduce using rule 26 (affordance)
    BOOLA      reduce using rule 26 (affordance)
    BYTE       reduce using rule 26 (affordance)
    BYTEA      reduce using rule 26 (affordance)
    DPROGRAM   reduce using rule 26 (affordance)
    DSTACK     reduce using rule 26 (affordance)
    F32        reduce using rule 26 (affordance)
    F32A       reduce using rule 26 (affordance)
    F64        reduce using rule 26 (affordance)
    F64A       reduce using rule 26 (affordance)
    FLOAT      reduce using rule 26 (affordance)
    FUNC       reduce using rule 26 (affordance)
    I32        reduce using rule 26 (affordance)
    I32A       reduce using rule 26 (affordance)
    I64        reduce using rule 26 (affordance)
    I64A       reduce using rule 26 (affordance)
    IDENT      reduce using rule 26 (affordance)
    IF         reduce using rule 26 (affordance)
    INT        reduce using rule 26 (affordance)
    PACKAGE    reduce using rule 26 (affordance)
    RBRACE     reduce using rule 26 (affordance)
    SFUNC      reduce using rule 26 (affordance)
    SPACKAGE   reduce using rule 26 (affordance)
    SSTRUCT    reduce using rule 26 (affordance)
    STEP       reduce using rule 26 (affordance)
    STR        reduce using rule 26 (affordance)
    STRING     reduce using rule 26 (affordance)
    TYPSTRUCT  reduce using rule 26 (affordance)
    VAR        reduce using rule 26 (affordance)
    WHILE      reduce using rule 26 (affordance)

state 193 // AFF STRUCT IDENT

   21 affordance: AFF STRUCT IDENT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]
   22 affordance: AFF STRUCT IDENT . LBRACE INT RBRACE
   23 affordance: AFF STRUCT IDENT . LBRACE STRING RBRACE
   24 affordance: AFF STRUCT IDENT . LBRACE STRING INT RBRACE

    $end       reduce using rule 21 (affordance)
    AFF        reduce using rule 21 (affordance)
    BOOL       reduce using rule 21 (affordance)
    BOOLA      reduce using rule 21 (affordance)
    BYTE       reduce using rule 21 (affordance)
    BYTEA      reduce using rule 21 (affordance)
    DPROGRAM   reduce using rule 21 (affordance)
    DSTACK     reduce using rule 21 (affordance)
    F32        reduce using rule 21 (affordance)
    F32A       reduce using rule 21 (affordance)
    F64        reduce using rule 21 (affordance)
    F64A       reduce using rule 21 (affordance)
    FLOAT      reduce using rule 21 (affordance)
    FUNC       reduce using rule 21 (affordance)
    I32        reduce using rule 21 (affordance)
    I32A       reduce using rule 21 (affordance)
    I64        reduce using rule 21 (affordance)
    I64A       reduce using rule 21 (affordance)
    IDENT      reduce using rule 21 (affordance)
    IF         reduce using rule 21 (affordance)
    INT        reduce using rule 21 (affordance)
    LBRACE     shift, and goto state 194
    PACKAGE    reduce using rule 21 (affordance)
    RBRACE     reduce using rule 21 (affordance)
    SFUNC      reduce using rule 21 (affordance)
    SPACKAGE   reduce using rule 21 (affordance)
    SSTRUCT    reduce using rule 21 (affordance)
    STEP       reduce using rule 21 (affordance)
    STR        reduce using rule 21 (affordance)
    STRING     reduce using rule 21 (affordance)
    TYPSTRUCT  reduce using rule 21 (affordance)
    VAR        reduce using rule 21 (affordance)
    WHILE      reduce using rule 21 (affordance)

state 194 // AFF STRUCT IDENT LBRACE

   22 affordance: AFF STRUCT IDENT LBRACE . INT RBRACE
   23 affordance: AFF STRUCT IDENT LBRACE . STRING RBRACE
   24 affordance: AFF STRUCT IDENT LBRACE . STRING INT RBRACE

    INT     shift, and goto state 195
    STRING  shift, and goto state 196

state 195 // AFF STRUCT IDENT LBRACE INT

   22 affordance: AFF STRUCT IDENT LBRACE INT . RBRACE

    RBRACE  shift, and goto state 200

state 196 // AFF STRUCT IDENT LBRACE STRING

   23 affordance: AFF STRUCT IDENT LBRACE STRING . RBRACE
   24 affordance: AFF STRUCT IDENT LBRACE STRING . INT RBRACE

    INT     shift, and goto state 198
    RBRACE  shift, and goto state 197

state 197 // AFF STRUCT IDENT LBRACE STRING RBRACE

   23 affordance: AFF STRUCT IDENT LBRACE STRING RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 23 (affordance)
    AFF        reduce using rule 23 (affordance)
    BOOL       reduce using rule 23 (affordance)
    BOOLA      reduce using rule 23 (affordance)
    BYTE       reduce using rule 23 (affordance)
    BYTEA      reduce using rule 23 (affordance)
    DPROGRAM   reduce using rule 23 (affordance)
    DSTACK     reduce using rule 23 (affordance)
    F32        reduce using rule 23 (affordance)
    F32A       reduce using rule 23 (affordance)
    F64        reduce using rule 23 (affordance)
    F64A       reduce using rule 23 (affordance)
    FLOAT      reduce using rule 23 (affordance)
    FUNC       reduce using rule 23 (affordance)
    I32        reduce using rule 23 (affordance)
    I32A       reduce using rule 23 (affordance)
    I64        reduce using rule 23 (affordance)
    I64A       reduce using rule 23 (affordance)
    IDENT      reduce using rule 23 (affordance)
    IF         reduce using rule 23 (affordance)
    INT        reduce using rule 23 (affordance)
    PACKAGE    reduce using rule 23 (affordance)
    RBRACE     reduce using rule 23 (affordance)
    SFUNC      reduce using rule 23 (affordance)
    SPACKAGE   reduce using rule 23 (affordance)
    SSTRUCT    reduce using rule 23 (affordance)
    STEP       reduce using rule 23 (affordance)
    STR        reduce using rule 23 (affordance)
    STRING     reduce using rule 23 (affordance)
    TYPSTRUCT  reduce using rule 23 (affordance)
    VAR        reduce using rule 23 (affordance)
    WHILE      reduce using rule 23 (affordance)

state 198 // AFF STRUCT IDENT LBRACE STRING INT

   24 affordance: AFF STRUCT IDENT LBRACE STRING INT . RBRACE

    RBRACE  shift, and goto state 199

state 199 // AFF STRUCT IDENT LBRACE STRING INT RBRACE

   24 affordance: AFF STRUCT IDENT LBRACE STRING INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 24 (affordance)
    AFF        reduce using rule 24 (affordance)
    BOOL       reduce using rule 24 (affordance)
    BOOLA      reduce using rule 24 (affordance)
    BYTE       reduce using rule 24 (affordance)
    BYTEA      reduce using rule 24 (affordance)
    DPROGRAM   reduce using rule 24 (affordance)
    DSTACK     reduce using rule 24 (affordance)
    F32        reduce using rule 24 (affordance)
    F32A       reduce using rule 24 (affordance)
    F64        reduce using rule 24 (affordance)
    F64A       reduce using rule 24 (affordance)
    FLOAT      reduce using rule 24 (affordance)
    FUNC       reduce using rule 24 (affordance)
    I32        reduce using rule 24 (affordance)
    I32A       reduce using rule 24 (affordance)
    I64        reduce using rule 24 (affordance)
    I64A       reduce using rule 24 (affordance)
    IDENT      reduce using rule 24 (affordance)
    IF         reduce using rule 24 (affordance)
    INT        reduce using rule 24 (affordance)
    PACKAGE    reduce using rule 24 (affordance)
    RBRACE     reduce using rule 24 (affordance)
    SFUNC      reduce using rule 24 (affordance)
    SPACKAGE   reduce using rule 24 (affordance)
    SSTRUCT    reduce using rule 24 (affordance)
    STEP       reduce using rule 24 (affordance)
    STR        reduce using rule 24 (affordance)
    STRING     reduce using rule 24 (affordance)
    TYPSTRUCT  reduce using rule 24 (affordance)
    VAR        reduce using rule 24 (affordance)
    WHILE      reduce using rule 24 (affordance)

state 200 // AFF STRUCT IDENT LBRACE INT RBRACE

   22 affordance: AFF STRUCT IDENT LBRACE INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 22 (affordance)
    AFF        reduce using rule 22 (affordance)
    BOOL       reduce using rule 22 (affordance)
    BOOLA      reduce using rule 22 (affordance)
    BYTE       reduce using rule 22 (affordance)
    BYTEA      reduce using rule 22 (affordance)
    DPROGRAM   reduce using rule 22 (affordance)
    DSTACK     reduce using rule 22 (affordance)
    F32        reduce using rule 22 (affordance)
    F32A       reduce using rule 22 (affordance)
    F64        reduce using rule 22 (affordance)
    F64A       reduce using rule 22 (affordance)
    FLOAT      reduce using rule 22 (affordance)
    FUNC       reduce using rule 22 (affordance)
    I32        reduce using rule 22 (affordance)
    I32A       reduce using rule 22 (affordance)
    I64        reduce using rule 22 (affordance)
    I64A       reduce using rule 22 (affordance)
    IDENT      reduce using rule 22 (affordance)
    IF         reduce using rule 22 (affordance)
    INT        reduce using rule 22 (affordance)
    PACKAGE    reduce using rule 22 (affordance)
    RBRACE     reduce using rule 22 (affordance)
    SFUNC      reduce using rule 22 (affordance)
    SPACKAGE   reduce using rule 22 (affordance)
    SSTRUCT    reduce using rule 22 (affordance)
    STEP       reduce using rule 22 (affordance)
    STR        reduce using rule 22 (affordance)
    STRING     reduce using rule 22 (affordance)
    TYPSTRUCT  reduce using rule 22 (affordance)
    VAR        reduce using rule 22 (affordance)
    WHILE      reduce using rule 22 (affordance)

state 201 // AFF PACKAGE IDENT

   17 affordance: AFF PACKAGE IDENT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]
   18 affordance: AFF PACKAGE IDENT . LBRACE INT RBRACE
   19 affordance: AFF PACKAGE IDENT . LBRACE STRING RBRACE
   20 affordance: AFF PACKAGE IDENT . LBRACE STRING INT RBRACE

    $end       reduce using rule 17 (affordance)
    AFF        reduce using rule 17 (affordance)
    BOOL       reduce using rule 17 (affordance)
    BOOLA      reduce using rule 17 (affordance)
    BYTE       reduce using rule 17 (affordance)
    BYTEA      reduce using rule 17 (affordance)
    DPROGRAM   reduce using rule 17 (affordance)
    DSTACK     reduce using rule 17 (affordance)
    F32        reduce using rule 17 (affordance)
    F32A       reduce using rule 17 (affordance)
    F64        reduce using rule 17 (affordance)
    F64A       reduce using rule 17 (affordance)
    FLOAT      reduce using rule 17 (affordance)
    FUNC       reduce using rule 17 (affordance)
    I32        reduce using rule 17 (affordance)
    I32A       reduce using rule 17 (affordance)
    I64        reduce using rule 17 (affordance)
    I64A       reduce using rule 17 (affordance)
    IDENT      reduce using rule 17 (affordance)
    IF         reduce using rule 17 (affordance)
    INT        reduce using rule 17 (affordance)
    LBRACE     shift, and goto state 202
    PACKAGE    reduce using rule 17 (affordance)
    RBRACE     reduce using rule 17 (affordance)
    SFUNC      reduce using rule 17 (affordance)
    SPACKAGE   reduce using rule 17 (affordance)
    SSTRUCT    reduce using rule 17 (affordance)
    STEP       reduce using rule 17 (affordance)
    STR        reduce using rule 17 (affordance)
    STRING     reduce using rule 17 (affordance)
    TYPSTRUCT  reduce using rule 17 (affordance)
    VAR        reduce using rule 17 (affordance)
    WHILE      reduce using rule 17 (affordance)

state 202 // AFF PACKAGE IDENT LBRACE

   18 affordance: AFF PACKAGE IDENT LBRACE . INT RBRACE
   19 affordance: AFF PACKAGE IDENT LBRACE . STRING RBRACE
   20 affordance: AFF PACKAGE IDENT LBRACE . STRING INT RBRACE

    INT     shift, and goto state 203
    STRING  shift, and goto state 204

state 203 // AFF PACKAGE IDENT LBRACE INT

   18 affordance: AFF PACKAGE IDENT LBRACE INT . RBRACE

    RBRACE  shift, and goto state 208

state 204 // AFF PACKAGE IDENT LBRACE STRING

   19 affordance: AFF PACKAGE IDENT LBRACE STRING . RBRACE
   20 affordance: AFF PACKAGE IDENT LBRACE STRING . INT RBRACE

    INT     shift, and goto state 206
    RBRACE  shift, and goto state 205

state 205 // AFF PACKAGE IDENT LBRACE STRING RBRACE

   19 affordance: AFF PACKAGE IDENT LBRACE STRING RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 19 (affordance)
    AFF        reduce using rule 19 (affordance)
    BOOL       reduce using rule 19 (affordance)
    BOOLA      reduce using rule 19 (affordance)
    BYTE       reduce using rule 19 (affordance)
    BYTEA      reduce using rule 19 (affordance)
    DPROGRAM   reduce using rule 19 (affordance)
    DSTACK     reduce using rule 19 (affordance)
    F32        reduce using rule 19 (affordance)
    F32A       reduce using rule 19 (affordance)
    F64        reduce using rule 19 (affordance)
    F64A       reduce using rule 19 (affordance)
    FLOAT      reduce using rule 19 (affordance)
    FUNC       reduce using rule 19 (affordance)
    I32        reduce using rule 19 (affordance)
    I32A       reduce using rule 19 (affordance)
    I64        reduce using rule 19 (affordance)
    I64A       reduce using rule 19 (affordance)
    IDENT      reduce using rule 19 (affordance)
    IF         reduce using rule 19 (affordance)
    INT        reduce using rule 19 (affordance)
    PACKAGE    reduce using rule 19 (affordance)
    RBRACE     reduce using rule 19 (affordance)
    SFUNC      reduce using rule 19 (affordance)
    SPACKAGE   reduce using rule 19 (affordance)
    SSTRUCT    reduce using rule 19 (affordance)
    STEP       reduce using rule 19 (affordance)
    STR        reduce using rule 19 (affordance)
    STRING     reduce using rule 19 (affordance)
    TYPSTRUCT  reduce using rule 19 (affordance)
    VAR        reduce using rule 19 (affordance)
    WHILE      reduce using rule 19 (affordance)

state 206 // AFF PACKAGE IDENT LBRACE STRING INT

   20 affordance: AFF PACKAGE IDENT LBRACE STRING INT . RBRACE

    RBRACE  shift, and goto state 207

state 207 // AFF PACKAGE IDENT LBRACE STRING INT RBRACE

   20 affordance: AFF PACKAGE IDENT LBRACE STRING INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 20 (affordance)
    AFF        reduce using rule 20 (affordance)
    BOOL       reduce using rule 20 (affordance)
    BOOLA      reduce using rule 20 (affordance)
    BYTE       reduce using rule 20 (affordance)
    BYTEA      reduce using rule 20 (affordance)
    DPROGRAM   reduce using rule 20 (affordance)
    DSTACK     reduce using rule 20 (affordance)
    F32        reduce using rule 20 (affordance)
    F32A       reduce using rule 20 (affordance)
    F64        reduce using rule 20 (affordance)
    F64A       reduce using rule 20 (affordance)
    FLOAT      reduce using rule 20 (affordance)
    FUNC       reduce using rule 20 (affordance)
    I32        reduce using rule 20 (affordance)
    I32A       reduce using rule 20 (affordance)
    I64        reduce using rule 20 (affordance)
    I64A       reduce using rule 20 (affordance)
    IDENT      reduce using rule 20 (affordance)
    IF         reduce using rule 20 (affordance)
    INT        reduce using rule 20 (affordance)
    PACKAGE    reduce using rule 20 (affordance)
    RBRACE     reduce using rule 20 (affordance)
    SFUNC      reduce using rule 20 (affordance)
    SPACKAGE   reduce using rule 20 (affordance)
    SSTRUCT    reduce using rule 20 (affordance)
    STEP       reduce using rule 20 (affordance)
    STR        reduce using rule 20 (affordance)
    STRING     reduce using rule 20 (affordance)
    TYPSTRUCT  reduce using rule 20 (affordance)
    VAR        reduce using rule 20 (affordance)
    WHILE      reduce using rule 20 (affordance)

state 208 // AFF PACKAGE IDENT LBRACE INT RBRACE

   18 affordance: AFF PACKAGE IDENT LBRACE INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 18 (affordance)
    AFF        reduce using rule 18 (affordance)
    BOOL       reduce using rule 18 (affordance)
    BOOLA      reduce using rule 18 (affordance)
    BYTE       reduce using rule 18 (affordance)
    BYTEA      reduce using rule 18 (affordance)
    DPROGRAM   reduce using rule 18 (affordance)
    DSTACK     reduce using rule 18 (affordance)
    F32        reduce using rule 18 (affordance)
    F32A       reduce using rule 18 (affordance)
    F64        reduce using rule 18 (affordance)
    F64A       reduce using rule 18 (affordance)
    FLOAT      reduce using rule 18 (affordance)
    FUNC       reduce using rule 18 (affordance)
    I32        reduce using rule 18 (affordance)
    I32A       reduce using rule 18 (affordance)
    I64        reduce using rule 18 (affordance)
    I64A       reduce using rule 18 (affordance)
    IDENT      reduce using rule 18 (affordance)
    IF         reduce using rule 18 (affordance)
    INT        reduce using rule 18 (affordance)
    PACKAGE    reduce using rule 18 (affordance)
    RBRACE     reduce using rule 18 (affordance)
    SFUNC      reduce using rule 18 (affordance)
    SPACKAGE   reduce using rule 18 (affordance)
    SSTRUCT    reduce using rule 18 (affordance)
    STEP       reduce using rule 18 (affordance)
    STR        reduce using rule 18 (affordance)
    STRING     reduce using rule 18 (affordance)
    TYPSTRUCT  reduce using rule 18 (affordance)
    VAR        reduce using rule 18 (affordance)
    WHILE      reduce using rule 18 (affordance)

state 209 // AFF FUNC IDENT

   13 affordance: AFF FUNC IDENT .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]
   14 affordance: AFF FUNC IDENT . LBRACE INT RBRACE
   15 affordance: AFF FUNC IDENT . LBRACE STRING RBRACE
   16 affordance: AFF FUNC IDENT . LBRACE STRING INT RBRACE

    $end       reduce using rule 13 (affordance)
    AFF        reduce using rule 13 (affordance)
    BOOL       reduce using rule 13 (affordance)
    BOOLA      reduce using rule 13 (affordance)
    BYTE       reduce using rule 13 (affordance)
    BYTEA      reduce using rule 13 (affordance)
    DPROGRAM   reduce using rule 13 (affordance)
    DSTACK     reduce using rule 13 (affordance)
    F32        reduce using rule 13 (affordance)
    F32A       reduce using rule 13 (affordance)
    F64        reduce using rule 13 (affordance)
    F64A       reduce using rule 13 (affordance)
    FLOAT      reduce using rule 13 (affordance)
    FUNC       reduce using rule 13 (affordance)
    I32        reduce using rule 13 (affordance)
    I32A       reduce using rule 13 (affordance)
    I64        reduce using rule 13 (affordance)
    I64A       reduce using rule 13 (affordance)
    IDENT      reduce using rule 13 (affordance)
    IF         reduce using rule 13 (affordance)
    INT        reduce using rule 13 (affordance)
    LBRACE     shift, and goto state 210
    PACKAGE    reduce using rule 13 (affordance)
    RBRACE     reduce using rule 13 (affordance)
    SFUNC      reduce using rule 13 (affordance)
    SPACKAGE   reduce using rule 13 (affordance)
    SSTRUCT    reduce using rule 13 (affordance)
    STEP       reduce using rule 13 (affordance)
    STR        reduce using rule 13 (affordance)
    STRING     reduce using rule 13 (affordance)
    TYPSTRUCT  reduce using rule 13 (affordance)
    VAR        reduce using rule 13 (affordance)
    WHILE      reduce using rule 13 (affordance)

state 210 // AFF FUNC IDENT LBRACE

   14 affordance: AFF FUNC IDENT LBRACE . INT RBRACE
   15 affordance: AFF FUNC IDENT LBRACE . STRING RBRACE
   16 affordance: AFF FUNC IDENT LBRACE . STRING INT RBRACE

    INT     shift, and goto state 211
    STRING  shift, and goto state 212

state 211 // AFF FUNC IDENT LBRACE INT

   14 affordance: AFF FUNC IDENT LBRACE INT . RBRACE

    RBRACE  shift, and goto state 216

state 212 // AFF FUNC IDENT LBRACE STRING

   15 affordance: AFF FUNC IDENT LBRACE STRING . RBRACE
   16 affordance: AFF FUNC IDENT LBRACE STRING . INT RBRACE

    INT     shift, and goto state 214
    RBRACE  shift, and goto state 213

state 213 // AFF FUNC IDENT LBRACE STRING RBRACE

   15 affordance: AFF FUNC IDENT LBRACE STRING RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 15 (affordance)
    AFF        reduce using rule 15 (affordance)
    BOOL       reduce using rule 15 (affordance)
    BOOLA      reduce using rule 15 (affordance)
    BYTE       reduce using rule 15 (affordance)
    BYTEA      reduce using rule 15 (affordance)
    DPROGRAM   reduce using rule 15 (affordance)
    DSTACK     reduce using rule 15 (affordance)
    F32        reduce using rule 15 (affordance)
    F32A       reduce using rule 15 (affordance)
    F64        reduce using rule 15 (affordance)
    F64A       reduce using rule 15 (affordance)
    FLOAT      reduce using rule 15 (affordance)
    FUNC       reduce using rule 15 (affordance)
    I32        reduce using rule 15 (affordance)
    I32A       reduce using rule 15 (affordance)
    I64        reduce using rule 15 (affordance)
    I64A       reduce using rule 15 (affordance)
    IDENT      reduce using rule 15 (affordance)
    IF         reduce using rule 15 (affordance)
    INT        reduce using rule 15 (affordance)
    PACKAGE    reduce using rule 15 (affordance)
    RBRACE     reduce using rule 15 (affordance)
    SFUNC      reduce using rule 15 (affordance)
    SPACKAGE   reduce using rule 15 (affordance)
    SSTRUCT    reduce using rule 15 (affordance)
    STEP       reduce using rule 15 (affordance)
    STR        reduce using rule 15 (affordance)
    STRING     reduce using rule 15 (affordance)
    TYPSTRUCT  reduce using rule 15 (affordance)
    VAR        reduce using rule 15 (affordance)
    WHILE      reduce using rule 15 (affordance)

state 214 // AFF FUNC IDENT LBRACE STRING INT

   16 affordance: AFF FUNC IDENT LBRACE STRING INT . RBRACE

    RBRACE  shift, and goto state 215

state 215 // AFF FUNC IDENT LBRACE STRING INT RBRACE

   16 affordance: AFF FUNC IDENT LBRACE STRING INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 16 (affordance)
    AFF        reduce using rule 16 (affordance)
    BOOL       reduce using rule 16 (affordance)
    BOOLA      reduce using rule 16 (affordance)
    BYTE       reduce using rule 16 (affordance)
    BYTEA      reduce using rule 16 (affordance)
    DPROGRAM   reduce using rule 16 (affordance)
    DSTACK     reduce using rule 16 (affordance)
    F32        reduce using rule 16 (affordance)
    F32A       reduce using rule 16 (affordance)
    F64        reduce using rule 16 (affordance)
    F64A       reduce using rule 16 (affordance)
    FLOAT      reduce using rule 16 (affordance)
    FUNC       reduce using rule 16 (affordance)
    I32        reduce using rule 16 (affordance)
    I32A       reduce using rule 16 (affordance)
    I64        reduce using rule 16 (affordance)
    I64A       reduce using rule 16 (affordance)
    IDENT      reduce using rule 16 (affordance)
    IF         reduce using rule 16 (affordance)
    INT        reduce using rule 16 (affordance)
    PACKAGE    reduce using rule 16 (affordance)
    RBRACE     reduce using rule 16 (affordance)
    SFUNC      reduce using rule 16 (affordance)
    SPACKAGE   reduce using rule 16 (affordance)
    SSTRUCT    reduce using rule 16 (affordance)
    STEP       reduce using rule 16 (affordance)
    STR        reduce using rule 16 (affordance)
    STRING     reduce using rule 16 (affordance)
    TYPSTRUCT  reduce using rule 16 (affordance)
    VAR        reduce using rule 16 (affordance)
    WHILE      reduce using rule 16 (affordance)

state 216 // AFF FUNC IDENT LBRACE INT RBRACE

   14 affordance: AFF FUNC IDENT LBRACE INT RBRACE .  [$end, AFF, BOOL, BOOLA, BYTE, BYTEA, DPROGRAM, DSTACK, F32, F32A, F64, F64A, FLOAT, FUNC, I32, I32A, I64, I64A, IDENT, IF, INT, PACKAGE, RBRACE, SFUNC, SPACKAGE, SSTRUCT, STEP, STR, STRING, TYPSTRUCT, VAR, WHILE]

    $end       reduce using rule 14 (affordance)
    AFF        reduce using rule 14 (affordance)
    BOOL       reduce using rule 14 (affordance)
    BOOLA      reduce using rule 14 (affordance)
    BYTE       reduce using rule 14 (affordance)
    BYTEA      reduce using rule 14 (affordance)
    DPROGRAM   reduce using rule 14 (affordance)
    DSTACK     reduce using rule 14 (affordance)
    F32        reduce using rule 14 (affordance)
    F32A       reduce using rule 14 (affordance)
    F64        reduce using rule 14 (affordance)
    F64A       reduce using rule 14 (affordance)
    FLOAT      reduce using rule 14 (affordance)
    FUNC       reduce using rule 14 (affordance)
    I32        reduce using rule 14 (affordance)
    I32A       reduce using rule 14 (affordance)
    I64        reduce using rule 14 (affordance)
    I64A       reduce using rule 14 (affordance)
    IDENT      reduce using rule 14 (affordance)
    IF         reduce using rule 14 (affordance)
    INT        reduce using rule 14 (affordance)
    PACKAGE    reduce using rule 14 (affordance)
    RBRACE     reduce using rule 14 (affordance)
    SFUNC      reduce using rule 14 (affordance)
    SPACKAGE   reduce using rule 14 (affordance)
    SSTRUCT    reduce using rule 14 (affordance)
    STEP       reduce using rule 14 (affordance)
    STR        reduce using rule 14 (affordance)
    STRING     reduce using rule 14 (affordance)
    TYPSTRUCT  reduce using rule 14 (affordance)
    VAR        reduce using rule 14 (affordance)
    WHILE      reduce using rule 14 (affordance)

