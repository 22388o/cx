package main
import "http"
import "os"

type coco struct {
	names [][]str
}

func main() {
	// var err str
	// err = http.Serve("127.0.0.1:8000")

	var url http.URL
	url.Scheme = "http"
	url.Host = "127.0.0.1:9079"
	url.Path = "/some/path"
	url.RawPath = "/some/raw/path"
	url.ForceQuery = true

	var req http.Request
	req.Method = "POST"
	req.URL = &url

	// var headerStuff []str
	// headerStuff = append(headerStuff, "one")
	// headerStuff = append(headerStuff, "two")

	// req.Header = headerStuff

	var contentType []str
	contentType = []str{"Content-Type", "application/json"}
	var accept []str
	accept = []str{"Accept", "text/html"}
	req.Header = append(req.Header, contentType)
	req.Header = append(req.Header, accept)

	var meow coco
	meow.names = append(meow.names, contentType)
	meow.names = append(meow.names, accept)

	str.print(meow.names[1][1])

	// var meow [][]str
	// meow = append(meow, contentType)
	// meow = append(meow, accept)

	// str.print(meow[0][0])


	
	// str.print(req.Header[0][0])

	// req.Header = append(req.Header, []str{"Content-Type", "application/json"})
	// req.Header = append(req.Header, []str{"Accept", "text/html"})

	// str.print(req.Header[0])
	// str.print(req.Header[1])

	// str.print(req.URL.Host) // prints 127.0.0.1:8000
	// str.print(req.URL.Path) // prints /some/path

	// var works str
	// works = http.Do(req)
	// str.print("Works?")
	// str.print(works)
	
}
