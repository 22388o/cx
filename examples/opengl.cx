package main

import "gl"
import "glfw"

var width i32 = 500
var height i32 = 500

var square []f32 = []f32{
	-0.5, 0.5, 0.0,
	-0.5, -0.5, 0.0,
	0.5, -0.5, 0.0,

	-0.5, 0.5, 0.0,
	0.5, 0.5, 0.0,
	0.5, -0.5, 0.0
}

var triBL []f32 = []f32{
	-0.5, 0.5, 0.0,
	-0.5, -0.5, 0.0,
	0.5, -0.5, 0.0
}

var triTR []f32 = []f32{
	-0.5, 0.5, 0.0,
	0.5, 0.5, 0.0,
	0.5, -0.5, 0.0
}

var triTL []f32 = []f32{
	-0.5, 0.5, 0.0,
	0.5, 0.5, 0.0,
	-0.5, -0.5, 0.0
}

var triBR []f32 = []f32{
	-0.5, -0.5, 0.0,
	0.5, -0.5, 0.0,
	0.5, 0.5, 0.0
}

// var testing []f32 = []f32{
// 	// f 17 	19 	20
// 	0, 0.5, 0.5,
// 	-0.25, 0.432999992370605, 0.5,
// 	-0.432999992370605, 0.25, 0.5,
// 	// f 17 	20 	21
// 	0, 0.5, 0.5,
// 	-0.432999992370605, 0.25, 0.5,
// 	-0.5, 0, 0.5,
// 	// f 17 	21 	22
// 	0, 0.5, 0.5,
// 	-0.5, 0, 0.5,
// 	-0.432999992370605, -0.25, 0.5,
// 	// f 17 	22 	23
// 	0, 0.5, 0.5,
// 	-0.432999992370605, -0.25, 0.5,
// 	-0.25, -0.432999992370605, 0.5,
// 	// f 17 	23 	24
// 	0, 0.5, 0.5,
// 	-0.25, -0.432999992370605, 0.5,
// 	0, -0.5, 0.5,
// 	// f 17 	24 	4
// 	0, 0.5, 0.5,
// 	0, -0.5, 0.5,
// 	0.25, -0.432999992370605, 0.5,
// 	// f 17 	4 	3
// 	0, 0.5, 0.5,
// 	0.25, -0.432999992370605, 0.5,
// 	0.432999992370605, -0.25, 0.5,
// 	// f 17 	3 	16
// 	0, 0.5, 0.5,
// 	0.432999992370605, -0.25, 0.5,
// 	0.5, 0, 0.5,
// 	// f 17 	16 	15
// 	0, 0.5, 0.5,
// 	0.5, 0, 0.5,
// 	0.432999992370605, 0.25, 0.5,
// 	// f 17 	15 	18
// 	0, 0.5, 0.5,
// 	0.432999992370605, 0.25, 0.5,
// 	0.25, 0.432999992370605, 0.5
// }

var testing []f32 = []f32{
	// f 3 	4 	45
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	0.0887191426868716, -0.240592519862518, 0.437139370524909,
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	// f 1 	2 	6
	-0.226982916042392, -0.431097848865991, 0.437139370524909,
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	// f 5 	6 	2
	-0.112627374108903, -0.465457056083967, -0.437139370524909,
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	// f 7 	8 	6
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	0.0306669062129887, -0.47691006957148, 0.437139370524909,
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	// f 7 	6 	5
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	-0.112627374108903, -0.465457056083967, -0.437139370524909,
	// f 9 	10 	11
	0.0240223691044012, 0.299449379108368, -0.437139370524909,
	0.0240223691044012, 0.299449379108368, 0.437139370524909,
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	// f 9 	11 	12
	0.0240223691044012, 0.299449379108368, -0.437139370524909,
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	// f 12 	11 	13
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	// f 12 	13 	14
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	-0.131599140078987, 0.217791743360271, -0.437139370524909,
	// f 17 	14 	13
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	// f 17 	13 	18
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	// f 15 	19 	20
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	-0.190263369003518, 0.490829090241261, -0.437139370524909,
	-0.190263369003518, 0.490829090241261, 0.437139370524909,
	// f 15 	20 	16
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	-0.190263369003518, 0.490829090241261, 0.437139370524909,
	0.0167658395451659, 0.52308993042852, 0.437139370524909,
	// f 19 	21 	22
	-0.190263369003518, 0.490829090241261, -0.437139370524909,
	-0.273931575045201, 0.450612181440142, -0.437139370524909,
	-0.273931575045201, 0.450612181440142, 0.437139370524909,
	// f 19 	22 	20
	-0.190263369003518, 0.490829090241261, -0.437139370524909,
	-0.273931575045201, 0.450612181440142, 0.437139370524909,
	-0.190263369003518, 0.490829090241261, 0.437139370524909,
	// f 21 	23 	24
	-0.273931575045201, 0.450612181440142, -0.437139370524909,
	-0.344398420229121, 0.39422132937656, -0.437139370524909,
	-0.344398420229121, 0.39422132937656, 0.437139370524909,
	// f 21 	24 	22
	-0.273931575045201, 0.450612181440142, -0.437139370524909,
	-0.344398420229121, 0.39422132937656, 0.437139370524909,
	-0.273931575045201, 0.450612181440142, 0.437139370524909,
	// f 23 	25 	26
	-0.344398420229121, 0.39422132937656, -0.437139370524909,
	-0.400177446597491, 0.322792638836963, -0.437139370524909,
	-0.400177446597491, 0.322792638836963, 0.437139370524909,
	// f 23 	26 	24
	-0.344398420229121, 0.39422132937656, -0.437139370524909,
	-0.400177446597491, 0.322792638836963, 0.437139370524909,
	-0.344398420229121, 0.39422132937656, 0.437139370524909,
	// f 25 	27 	28
	-0.400177446597491, 0.322792638836963, -0.437139370524909,
	-0.440044669249016, 0.237550428233518, -0.437139370524909,
	-0.440044669249016, 0.237550428233518, 0.437139370524909,
	// f 25 	28 	26
	-0.400177446597491, 0.322792638836963, -0.437139370524909,
	-0.440044669249016, 0.237550428233518, 0.437139370524909,
	-0.400177446597491, 0.322792638836963, 0.437139370524909,
	// f 31 	35 	30
	-0.123730618069104, -0.193031785031343, -0.437139370524909,
	-0.399478074298303, -0.269968324249053, -0.437139370524909,
	-0.160362785259438, -0.10813934395521, -0.437139370524909,
	// f 33 	29 	32
	-0.471955990042118, 0.025362973778597, -0.437139370524909,
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	// f 34 	2 	31
	-0.0649790092960339, -0.237707400684075, -0.437139370524909,
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, -0.437139370524909,
	// f 32 	30 	35
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	-0.160362785259438, -0.10813934395521, -0.437139370524909,
	-0.399478074298303, -0.269968324249053, -0.437139370524909,
	// f 7 	5 	36
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	-0.112627374108903, -0.465457056083967, -0.437139370524909,
	0.0135311175948476, -0.252657609178397, -0.437139370524909,
	// f 35 	31 	37
	-0.399478074298303, -0.269968324249053, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, -0.437139370524909,
	-0.320006102051744, -0.367887533241307, -0.437139370524909,
	// f 2 	37 	31
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	-0.320006102051744, -0.367887533241307, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, -0.437139370524909,
	// f 2 	34 	5
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	-0.0649790092960339, -0.237707400684075, -0.437139370524909,
	-0.112627374108903, -0.465457056083967, -0.437139370524909,
	// f 34 	36 	5
	-0.0649790092960339, -0.237707400684075, -0.437139370524909,
	0.0135311175948476, -0.252657609178397, -0.437139370524909,
	-0.112627374108903, -0.465457056083967, -0.437139370524909,
	// f 7 	36 	3
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	0.0135311175948476, -0.252657609178397, -0.437139370524909,
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	// f 7 	3 	69
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	0.149131635603934, -0.467467876510707, -0.437139370524909,
	// f 38 	43 	39
	0.195556015515507, 0.163586554798226, 0.437139370524909,
	0.395153934807877, 0.355490711777792, 0.437139370524909,
	0.166529897278566, 0.228195781776721, 0.437139370524909,
	// f 39 	44 	40
	0.166529897278566, 0.228195781776721, 0.437139370524909,
	0.304054105999008, 0.449213436841768, 0.437139370524909,
	0.105155559005825, 0.281002225740391, 0.437139370524909,
	// f 42 	43 	38
	0.459413142125906, 0.222250616967321, 0.437139370524909,
	0.395153934807877, 0.355490711777792, 0.437139370524909,
	0.195556015515507, 0.163586554798226, 0.437139370524909,
	// f 44 	39 	43
	0.304054105999008, 0.449213436841768, 0.437139370524909,
	0.166529897278566, 0.228195781776721, 0.437139370524909,
	0.395153934807877, 0.355490711777792, 0.437139370524909,
	// f 41 	40 	44
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	0.105155559005825, 0.281002225740391, 0.437139370524909,
	0.304054105999008, 0.449213436841768, 0.437139370524909,
	// f 16 	10 	41
	0.0167658395451659, 0.52308993042852, 0.437139370524909,
	0.0240223691044012, 0.299449379108368, 0.437139370524909,
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	// f 40 	41 	10
	0.105155559005825, 0.281002225740391, 0.437139370524909,
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	0.0240223691044012, 0.299449379108368, 0.437139370524909,
	// f 16 	20 	11
	0.0167658395451659, 0.52308993042852, 0.437139370524909,
	-0.190263369003518, 0.490829090241261, 0.437139370524909,
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	// f 11 	10 	16
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	0.0240223691044012, 0.299449379108368, 0.437139370524909,
	0.0167658395451659, 0.52308993042852, 0.437139370524909,
	// f 13 	11 	22
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	-0.273931575045201, 0.450612181440142, 0.437139370524909,
	// f 20 	22 	11
	-0.190263369003518, 0.490829090241261, 0.437139370524909,
	-0.273931575045201, 0.450612181440142, 0.437139370524909,
	-0.0656783815952212, 0.279078701784472, 0.437139370524909,
	// f 26 	13 	24
	-0.400177446597491, 0.322792638836963, 0.437139370524909,
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	-0.344398420229121, 0.39422132937656, 0.437139370524909,
	// f 22 	24 	13
	-0.273931575045201, 0.450612181440142, 0.437139370524909,
	-0.344398420229121, 0.39422132937656, 0.437139370524909,
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	// f 28 	18 	26
	-0.440044669249016, 0.237550428233518, 0.437139370524909,
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	-0.400177446597491, 0.322792638836963, 0.437139370524909,
	// f 13 	26 	18
	-0.131599140078987, 0.217791743360271, 0.437139370524909,
	-0.400177446597491, 0.322792638836963, 0.437139370524909,
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	// f 47 	48 	46
	0.468593362396497, -0.143809915923021, 0.437139370524909,
	0.206746639324248, -0.0646876298260552, 0.437139370524909,
	0.180955576548497, -0.145471050200168, 0.437139370524909,
	// f 45 	52 	46
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	0.38553681529459, -0.327845550892703, 0.437139370524909,
	0.180955576548497, -0.145471050200168, 0.437139370524909,
	// f 45 	4 	50
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	0.0887191426868716, -0.240592519862518, 0.437139370524909,
	0.24469050477529, -0.439316057025468, 0.437139370524909,
	// f 50 	51 	45
	0.24469050477529, -0.439316057025468, 0.437139370524909,
	0.321976646764876, -0.392629620945995, 0.437139370524909,
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	// f 52 	45 	51
	0.38553681529459, -0.327845550892703, 0.437139370524909,
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	0.321976646764876, -0.392629620945995, 0.437139370524909,
	// f 53 	46 	52
	0.434671304554372, -0.244876467017053, 0.437139370524909,
	0.180955576548497, -0.145471050200168, 0.437139370524909,
	0.38553681529459, -0.327845550892703, 0.437139370524909,
	// f 47 	46 	53
	0.468593362396497, -0.143809915923021, 0.437139370524909,
	0.180955576548497, -0.145471050200168, 0.437139370524909,
	0.434671304554372, -0.244876467017053, 0.437139370524909,
	// f 28 	57 	18
	-0.440044669249016, 0.237550428233518, 0.437139370524909,
	-0.471955990042118, 0.025362973778597, 0.437139370524909,
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	// f 57 	58 	54
	-0.471955990042118, 0.025362973778597, 0.437139370524909,
	-0.453858356068299, -0.138389363715729, 0.437139370524909,
	-0.172515254423857, 0.0273738775830555, 0.437139370524909,
	// f 54 	18 	57
	-0.172515254423857, 0.0273738775830555, 0.437139370524909,
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	-0.471955990042118, 0.025362973778597, 0.437139370524909,
	// f 56 	55 	60
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	-0.160362785259438, -0.10813934395521, 0.437139370524909,
	-0.399478074298303, -0.269968324249053, 0.437139370524909,
	// f 58 	60 	55
	-0.453858356068299, -0.138389363715729, 0.437139370524909,
	-0.399478074298303, -0.269968324249053, 0.437139370524909,
	-0.160362785259438, -0.10813934395521, 0.437139370524909,
	// f 55 	54 	58
	-0.160362785259438, -0.10813934395521, 0.437139370524909,
	-0.172515254423857, 0.0273738775830555, 0.437139370524909,
	-0.453858356068299, -0.138389363715729, 0.437139370524909,
	// f 62 	1 	56
	-0.320006102051744, -0.367887533241307, 0.437139370524909,
	-0.226982916042392, -0.431097848865991, 0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	// f 60 	62 	56
	-0.399478074298303, -0.269968324249053, 0.437139370524909,
	-0.320006102051744, -0.367887533241307, 0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	// f 1 	6 	59
	-0.226982916042392, -0.431097848865991, 0.437139370524909,
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	-0.0649790092960339, -0.237707400684075, 0.437139370524909,
	// f 61 	59 	6
	0.0135311175948476, -0.252657609178397, 0.437139370524909,
	-0.0649790092960339, -0.237707400684075, 0.437139370524909,
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	// f 59 	56 	1
	-0.0649790092960339, -0.237707400684075, 0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	-0.226982916042392, -0.431097848865991, 0.437139370524909,
	// f 29 	54 	55
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	-0.172515254423857, 0.0273738775830555, 0.437139370524909,
	-0.160362785259438, -0.10813934395521, 0.437139370524909,
	// f 29 	55 	30
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	-0.160362785259438, -0.10813934395521, 0.437139370524909,
	-0.160362785259438, -0.10813934395521, -0.437139370524909,
	// f 30 	55 	56
	-0.160362785259438, -0.10813934395521, -0.437139370524909,
	-0.160362785259438, -0.10813934395521, 0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	// f 30 	56 	31
	-0.160362785259438, -0.10813934395521, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	-0.123730618069104, -0.193031785031343, -0.437139370524909,
	// f 34 	31 	56
	-0.0649790092960339, -0.237707400684075, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	// f 34 	56 	59
	-0.0649790092960339, -0.237707400684075, -0.437139370524909,
	-0.123730618069104, -0.193031785031343, 0.437139370524909,
	-0.0649790092960339, -0.237707400684075, 0.437139370524909,
	// f 33 	57 	28
	-0.471955990042118, 0.025362973778597, -0.437139370524909,
	-0.471955990042118, 0.025362973778597, 0.437139370524909,
	-0.440044669249016, 0.237550428233518, 0.437139370524909,
	// f 57 	33 	32
	-0.471955990042118, 0.025362973778597, 0.437139370524909,
	-0.471955990042118, 0.025362973778597, -0.437139370524909,
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	// f 57 	32 	58
	-0.471955990042118, 0.025362973778597, 0.437139370524909,
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	-0.453858356068299, -0.138389363715729, 0.437139370524909,
	// f 36 	34 	59
	0.0135311175948476, -0.252657609178397, -0.437139370524909,
	-0.0649790092960339, -0.237707400684075, -0.437139370524909,
	-0.0649790092960339, -0.237707400684075, 0.437139370524909,
	// f 36 	59 	61
	0.0135311175948476, -0.252657609178397, -0.437139370524909,
	-0.0649790092960339, -0.237707400684075, 0.437139370524909,
	0.0135311175948476, -0.252657609178397, 0.437139370524909,
	// f 32 	35 	60
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	-0.399478074298303, -0.269968324249053, -0.437139370524909,
	-0.399478074298303, -0.269968324249053, 0.437139370524909,
	// f 32 	60 	58
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	-0.399478074298303, -0.269968324249053, 0.437139370524909,
	-0.453858356068299, -0.138389363715729, 0.437139370524909,
	// f 3 	36 	61
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	0.0135311175948476, -0.252657609178397, -0.437139370524909,
	0.0135311175948476, -0.252657609178397, 0.437139370524909,
	// f 3 	61 	4
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	0.0135311175948476, -0.252657609178397, 0.437139370524909,
	0.0887191426868716, -0.240592519862518, 0.437139370524909,
	// f 35 	37 	62
	-0.399478074298303, -0.269968324249053, -0.437139370524909,
	-0.320006102051744, -0.367887533241307, -0.437139370524909,
	-0.320006102051744, -0.367887533241307, 0.437139370524909,
	// f 35 	62 	60
	-0.399478074298303, -0.269968324249053, -0.437139370524909,
	-0.320006102051744, -0.367887533241307, 0.437139370524909,
	-0.399478074298303, -0.269968324249053, 0.437139370524909,
	// f 2 	1 	62
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	-0.226982916042392, -0.431097848865991, 0.437139370524909,
	-0.320006102051744, -0.367887533241307, 0.437139370524909,
	// f 2 	62 	37
	-0.226982916042392, -0.431097848865991, -0.437139370524909,
	-0.320006102051744, -0.367887533241307, 0.437139370524909,
	-0.320006102051744, -0.367887533241307, -0.437139370524909,
	// f 64 	77 	63
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.395153934807877, 0.355490711777792, -0.437139370524909,
	0.195556015515507, 0.163586554798226, -0.437139370524909,
	// f 27 	33 	28
	-0.440044669249016, 0.237550428233518, -0.437139370524909,
	-0.471955990042118, 0.025362973778597, -0.437139370524909,
	-0.440044669249016, 0.237550428233518, 0.437139370524909,
	// f 66 	3 	45
	0.143099090945995, -0.204484798518856, -0.437139370524909,
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	// f 67 	66 	45
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	0.143099090945995, -0.204484798518856, -0.437139370524909,
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	// f 67 	45 	46
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	0.143099090945995, -0.204484798518856, 0.437139370524909,
	0.180955576548497, -0.145471050200168, 0.437139370524909,
	// f 48 	68 	67
	0.206746639324248, -0.0646876298260552, 0.437139370524909,
	0.206746639324248, -0.0646876298260552, -0.437139370524909,
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	// f 48 	67 	46
	0.206746639324248, -0.0646876298260552, 0.437139370524909,
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	0.180955576548497, -0.145471050200168, 0.437139370524909,
	// f 7 	69 	49
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	0.149131635603934, -0.467467876510707, -0.437139370524909,
	0.149131635603934, -0.467467876510707, 0.437139370524909,
	// f 7 	49 	8
	0.0306669062129887, -0.47691006957148, -0.437139370524909,
	0.149131635603934, -0.467467876510707, 0.437139370524909,
	0.0306669062129887, -0.47691006957148, 0.437139370524909,
	// f 69 	70 	50
	0.149131635603934, -0.467467876510707, -0.437139370524909,
	0.24469050477529, -0.439316057025468, -0.437139370524909,
	0.24469050477529, -0.439316057025468, 0.437139370524909,
	// f 69 	50 	49
	0.149131635603934, -0.467467876510707, -0.437139370524909,
	0.24469050477529, -0.439316057025468, 0.437139370524909,
	0.149131635603934, -0.467467876510707, 0.437139370524909,
	// f 70 	71 	51
	0.24469050477529, -0.439316057025468, -0.437139370524909,
	0.321976646764876, -0.392629620945995, -0.437139370524909,
	0.321976646764876, -0.392629620945995, 0.437139370524909,
	// f 70 	51 	50
	0.24469050477529, -0.439316057025468, -0.437139370524909,
	0.321976646764876, -0.392629620945995, 0.437139370524909,
	0.24469050477529, -0.439316057025468, 0.437139370524909,
	// f 71 	72 	52
	0.321976646764876, -0.392629620945995, -0.437139370524909,
	0.38553681529459, -0.327845550892703, -0.437139370524909,
	0.38553681529459, -0.327845550892703, 0.437139370524909,
	// f 71 	52 	51
	0.321976646764876, -0.392629620945995, -0.437139370524909,
	0.38553681529459, -0.327845550892703, 0.437139370524909,
	0.321976646764876, -0.392629620945995, 0.437139370524909,
	// f 72 	73 	53
	0.38553681529459, -0.327845550892703, -0.437139370524909,
	0.434671304554372, -0.244876467017053, -0.437139370524909,
	0.434671304554372, -0.244876467017053, 0.437139370524909,
	// f 72 	53 	52
	0.38553681529459, -0.327845550892703, -0.437139370524909,
	0.434671304554372, -0.244876467017053, 0.437139370524909,
	0.38553681529459, -0.327845550892703, 0.437139370524909,
	// f 73 	74 	47
	0.434671304554372, -0.244876467017053, -0.437139370524909,
	0.468593362396497, -0.143809915923021, -0.437139370524909,
	0.468593362396497, -0.143809915923021, 0.437139370524909,
	// f 73 	47 	53
	0.434671304554372, -0.244876467017053, -0.437139370524909,
	0.468593362396497, -0.143809915923021, 0.437139370524909,
	0.434671304554372, -0.244876467017053, 0.437139370524909,
	// f 74 	68 	48
	0.468593362396497, -0.143809915923021, -0.437139370524909,
	0.206746639324248, -0.0646876298260552, -0.437139370524909,
	0.206746639324248, -0.0646876298260552, 0.437139370524909,
	// f 74 	48 	47
	0.468593362396497, -0.143809915923021, -0.437139370524909,
	0.206746639324248, -0.0646876298260552, 0.437139370524909,
	0.468593362396497, -0.143809915923021, 0.437139370524909,
	// f 18 	54 	29
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	-0.172515254423857, 0.0273738775830555, 0.437139370524909,
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	// f 18 	29 	17
	-0.162286475970794, 0.139893608920037, 0.437139370524909,
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	// f 77 	64 	76
	0.395153934807877, 0.355490711777792, -0.437139370524909,
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.304054105999008, 0.449213436841768, -0.437139370524909,
	// f 78 	63 	77
	0.459413142125906, 0.222250616967321, -0.437139370524909,
	0.195556015515507, 0.163586554798226, -0.437139370524909,
	0.395153934807877, 0.355490711777792, -0.437139370524909,
	// f 64 	65 	76
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.105155559005825, 0.281002225740391, -0.437139370524909,
	0.304054105999008, 0.449213436841768, -0.437139370524909,
	// f 75 	76 	65
	0.17990635134428, 0.504642610305108, -0.437139370524909,
	0.304054105999008, 0.449213436841768, -0.437139370524909,
	0.105155559005825, 0.281002225740391, -0.437139370524909,
	// f 12 	15 	9
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	0.0240223691044012, 0.299449379108368, -0.437139370524909,
	// f 65 	9 	75
	0.105155559005825, 0.281002225740391, -0.437139370524909,
	0.0240223691044012, 0.299449379108368, -0.437139370524909,
	0.17990635134428, 0.504642610305108, -0.437139370524909,
	// f 14 	21 	12
	-0.131599140078987, 0.217791743360271, -0.437139370524909,
	-0.273931575045201, 0.450612181440142, -0.437139370524909,
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	// f 75 	9 	15
	0.17990635134428, 0.504642610305108, -0.437139370524909,
	0.0240223691044012, 0.299449379108368, -0.437139370524909,
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	// f 15 	12 	19
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	-0.190263369003518, 0.490829090241261, -0.437139370524909,
	// f 33 	27 	17
	-0.471955990042118, 0.025362973778597, -0.437139370524909,
	-0.440044669249016, 0.237550428233518, -0.437139370524909,
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	// f 25 	17 	27
	-0.400177446597491, 0.322792638836963, -0.437139370524909,
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	-0.440044669249016, 0.237550428233518, -0.437139370524909,
	// f 23 	14 	25
	-0.344398420229121, 0.39422132937656, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, -0.437139370524909,
	-0.400177446597491, 0.322792638836963, -0.437139370524909,
	// f 21 	14 	23
	-0.273931575045201, 0.450612181440142, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, -0.437139370524909,
	-0.344398420229121, 0.39422132937656, -0.437139370524909,
	// f 19 	12 	21
	-0.190263369003518, 0.490829090241261, -0.437139370524909,
	-0.0656783815952212, 0.279078701784472, -0.437139370524909,
	-0.273931575045201, 0.450612181440142, -0.437139370524909,
	// f 17 	25 	14
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	-0.400177446597491, 0.322792638836963, -0.437139370524909,
	-0.131599140078987, 0.217791743360271, -0.437139370524909,
	// f 33 	17 	29
	-0.471955990042118, 0.025362973778597, -0.437139370524909,
	-0.162286475970794, 0.139893608920037, -0.437139370524909,
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	// f 30 	32 	29
	-0.160362785259438, -0.10813934395521, -0.437139370524909,
	-0.453858356068299, -0.138389363715729, -0.437139370524909,
	-0.172515254423857, 0.0273738775830555, -0.437139370524909,
	// f 67 	72 	66
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	0.38553681529459, -0.327845550892703, -0.437139370524909,
	0.143099090945995, -0.204484798518856, -0.437139370524909,
	// f 66 	70 	3
	0.143099090945995, -0.204484798518856, -0.437139370524909,
	0.24469050477529, -0.439316057025468, -0.437139370524909,
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	// f 73 	67 	74
	0.434671304554372, -0.244876467017053, -0.437139370524909,
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	0.468593362396497, -0.143809915923021, -0.437139370524909,
	// f 72 	67 	73
	0.38553681529459, -0.327845550892703, -0.437139370524909,
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	0.434671304554372, -0.244876467017053, -0.437139370524909,
	// f 71 	66 	72
	0.321976646764876, -0.392629620945995, -0.437139370524909,
	0.143099090945995, -0.204484798518856, -0.437139370524909,
	0.38553681529459, -0.327845550892703, -0.437139370524909,
	// f 70 	66 	71
	0.24469050477529, -0.439316057025468, -0.437139370524909,
	0.143099090945995, -0.204484798518856, -0.437139370524909,
	0.321976646764876, -0.392629620945995, -0.437139370524909,
	// f 69 	3 	70
	0.149131635603934, -0.467467876510707, -0.437139370524909,
	0.0887191426868716, -0.240592519862518, -0.437139370524909,
	0.24469050477529, -0.439316057025468, -0.437139370524909,
	// f 68 	74 	67
	0.206746639324248, -0.0646876298260552, -0.437139370524909,
	0.468593362396497, -0.143809915923021, -0.437139370524909,
	0.180955576548497, -0.145471050200168, -0.437139370524909,
	// f 49 	50 	4
	0.149131635603934, -0.467467876510707, 0.437139370524909,
	0.24469050477529, -0.439316057025468, 0.437139370524909,
	0.0887191426868716, -0.240592519862518, 0.437139370524909,
	// f 61 	8 	4
	0.0135311175948476, -0.252657609178397, 0.437139370524909,
	0.0306669062129887, -0.47691006957148, 0.437139370524909,
	0.0887191426868716, -0.240592519862518, 0.437139370524909,
	// f 6 	8 	61
	-0.112627374108903, -0.465457056083967, 0.437139370524909,
	0.0306669062129887, -0.47691006957148, 0.437139370524909,
	0.0135311175948476, -0.252657609178397, 0.437139370524909,
	// f 49 	4 	8
	0.149131635603934, -0.467467876510707, 0.437139370524909,
	0.0887191426868716, -0.240592519862518, 0.437139370524909,
	0.0306669062129887, -0.47691006957148, 0.437139370524909,
	// f 64 	63 	38
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.195556015515507, 0.163586554798226, -0.437139370524909,
	0.195556015515507, 0.163586554798226, 0.437139370524909,
	// f 64 	38 	39
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.195556015515507, 0.163586554798226, 0.437139370524909,
	0.166529897278566, 0.228195781776721, 0.437139370524909,
	// f 64 	39 	40
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.166529897278566, 0.228195781776721, 0.437139370524909,
	0.105155559005825, 0.281002225740391, 0.437139370524909,
	// f 64 	40 	65
	0.166529897278566, 0.228195781776721, -0.437139370524909,
	0.105155559005825, 0.281002225740391, 0.437139370524909,
	0.105155559005825, 0.281002225740391, -0.437139370524909,
	// f 78 	42 	63
	0.459413142125906, 0.222250616967321, -0.437139370524909,
	0.459413142125906, 0.222250616967321, 0.437139370524909,
	0.195556015515507, 0.163586554798226, -0.437139370524909,
	// f 38 	63 	42
	0.195556015515507, 0.163586554798226, 0.437139370524909,
	0.195556015515507, 0.163586554798226, -0.437139370524909,
	0.459413142125906, 0.222250616967321, 0.437139370524909,
	// f 78 	77 	43
	0.459413142125906, 0.222250616967321, -0.437139370524909,
	0.395153934807877, 0.355490711777792, -0.437139370524909,
	0.395153934807877, 0.355490711777792, 0.437139370524909,
	// f 78 	43 	42
	0.459413142125906, 0.222250616967321, -0.437139370524909,
	0.395153934807877, 0.355490711777792, 0.437139370524909,
	0.459413142125906, 0.222250616967321, 0.437139370524909,
	// f 77 	76 	44
	0.395153934807877, 0.355490711777792, -0.437139370524909,
	0.304054105999008, 0.449213436841768, -0.437139370524909,
	0.304054105999008, 0.449213436841768, 0.437139370524909,
	// f 77 	44 	43
	0.395153934807877, 0.355490711777792, -0.437139370524909,
	0.304054105999008, 0.449213436841768, 0.437139370524909,
	0.395153934807877, 0.355490711777792, 0.437139370524909,
	// f 76 	75 	41
	0.304054105999008, 0.449213436841768, -0.437139370524909,
	0.17990635134428, 0.504642610305108, -0.437139370524909,
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	// f 76 	41 	44
	0.304054105999008, 0.449213436841768, -0.437139370524909,
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	0.304054105999008, 0.449213436841768, 0.437139370524909,
	// f 16 	41 	15
	0.0167658395451659, 0.52308993042852, 0.437139370524909,
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	// f 75 	15 	41
	0.17990635134428, 0.504642610305108, -0.437139370524909,
	0.0167658395451659, 0.52308993042852, -0.437139370524909,
	0.17990635134428, 0.504642610305108, 0.437139370524909,
	// f 9 	65 	10
	0.0240223691044012, 0.299449379108368, -0.437139370524909,
	0.105155559005825, 0.281002225740391, -0.437139370524909,
	0.0240223691044012, 0.299449379108368, 0.437139370524909,
	// f 40 	10 	65
	0.105155559005825, 0.281002225740391, 0.437139370524909,
	0.0240223691044012, 0.299449379108368, 0.437139370524909,
	0.105155559005825, 0.281002225740391, -0.437139370524909
}

var rows i32 = 20
var columns i32 = 20

var vertexShaderSource str = "
          #version 120
          void main() {
            gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix * gl_Vertex;
          }
"

var fragmentShaderSource str = "
          #version 120
          void main() {
            gl_FragColor = vec4(1, 1, 1, 1.0);
          }
"

func compileShader(source str, shaderType i32) (shader i32) {
	shader := gl.CreateShader(shaderType)

	gl.Strs(source, "csources")
	gl.ShaderSource(shader, 1, "csources")
	gl.Free("csources")
	gl.CompileShader(shader)
}

func makeVao (points []f32) (vao i32) {
	var vbo i32
	gl.GenBuffers(1, vbo) // should be &vbo. to be fixed, but should work as it is
	gl.BindBuffer(gl.ARRAY_BUFFER, vbo)
	gl.BufferData(gl.ARRAY_BUFFER, i32.mul(4, []f32.len(points)), points, gl.STATIC_DRAW)

	var vao i32
	gl.GenVertexArrays(1, vao)
	gl.BindVertexArray(vao)
	gl.EnableVertexAttribArray(0)
	gl.BindBuffer(gl.ARRAY_BUFFER, vbo)
	gl.VertexAttribPointer(0, 3, gl.FLOAT, false, 0)
}

func draw (vao i32, len i32) () {
	gl.BindVertexArray(vao)
	gl.DrawArrays(gl.TRIANGLES, 0, i32.div(len, 3))
}

func addNull (source str) (source str) {
	bSource := str.[]byte(source)
	bSource := []byte.append(bSource, i32.byte(0))
	source = []byte.str(bSource)
}

func initOpenGL () (program i32) {
	gl.Init()

	vertexShader := compileShader(addNull(vertexShaderSource), gl.VERTEX_SHADER)
	fragmentShader := compileShader(addNull(fragmentShaderSource), gl.FRAGMENT_SHADER)

	program := gl.CreateProgram()
	
	gl.AttachShader(program, vertexShader)
	gl.AttachShader(program, fragmentShader)
	gl.LinkProgram(program)
}

func initGlfw (window str) () {
	glfw.Init()
	glfw.WindowHint(glfw.Resizable, glfw.False)
	glfw.WindowHint(glfw.ContextVersionMajor, 2)
	glfw.WindowHint(glfw.ContextVersionMinor, 1)
	// glfw.WindowHint(glfw.OpenGLProfile, glfw.OpenGLCoreProfile)
	//glfw.WindowHint(glfw.OpenGLForwardCompatible, glfw.True)

	glfw.CreateWindow("window", width, height, "Testing")
	glfw.MakeContextCurrent("window")
}

func newObject2 (obj []f32, x i32, y i32) (points []f32) {
	lenObject := []f32.len(obj)
	points := []f32.make(lenObject)

	[]f32.copy(points, obj)
	
	for c := 0; i32.lt(c, lenObject); c = i32.add(c, 1) {
		var position f32
		var size f32

		point := []f32.read(points, c)
		
		if i32.eq(i32.mod(c, 3), 0) {
			size = f32.div(1.0, i32.f32(columns))
			position = f32.mul(i32.f32(x), size)
		}
		if i32.eq(i32.mod(c, 3), 1) {
			size = f32.div(1.0, i32.f32(rows))
			position = f32.mul(i32.f32(y), size)
		}

		//f32.print(position)

		if f32.lt([]f32.read(points, c), 0.0) {
			//[]f32.write(points, c, f32.sub(f32.mul(position, i32.f32(2)), i32.f32(1)))
			[]f32.write(points, c, f32.sub(f32.mul(f32.add(position, f32.mul(point, size)), i32.f32(2)), i32.f32(1)))
			
			//
			// f32.print(f32.sub(f32.mul(f32.mul(position, i32.f32(2)), f32.mul(point, size)), i32.f32(1)))
			// f32.print(f32.mul(position, point))
		} else {
			//[]f32.write(points, c, f32.sub(f32.mul(f32.add(position, size), i32.f32(2)), i32.f32(1)))
			[]f32.write(points, c, f32.sub(f32.mul(f32.add(position, f32.mul(point, size)), i32.f32(2)), i32.f32(1)))
			//[]f32.write(points, c, position)

			//f32.print(f32.sub(f32.mul(f32.add(position, size), i32.f32(2)), i32.f32(1)))
			//f32.print(f32.mul(position, point))
		}

		//str.print("")
	}

	// []f32.print(obj)
	// []f32.print(points)
}

//func newObject (obj []f32, x i32, y i32) (points []f32) {}

func newObject (obj []f32, x i32, y i32, z i32) (points []f32) {
	lenObject := []f32.len(obj)
	points := []f32.make(lenObject)

	[]f32.copy(points, obj)
	
	for c := 0; i32.lt(c, lenObject); c = i32.add(c, 1) {
		var position f32
		var size f32
		if i32.eq(i32.mod(c, 3), 0) {
			size = f32.div(1.0, i32.f32(columns))
			position = f32.mul(i32.f32(x), size)
		}
		if i32.eq(i32.mod(c, 3), 1) {
			size = f32.div(1.0, i32.f32(rows))
			position = f32.mul(i32.f32(y), size)
		}
		if i32.eq(i32.mod(c, 3), 2) {
			size = f32.div(1.0, i32.f32(rows))
			position = f32.mul(i32.f32(z), size)
		}
		
		if f32.lt([]f32.read(points, c), 0.0) {
			[]f32.write(points, c, f32.sub(f32.mul(position, i32.f32(2)), i32.f32(1)))
		} else {
			[]f32.write(points, c, f32.sub(f32.mul(f32.add(position, size), i32.f32(2)), i32.f32(1)))
		}
	}
}



func newBox (x i32, y i32) (box []f32) {
	box := newObject(square, x, y)

	box = []f32.concat(box, newObject(triBL, i32.sub(x, 1), i32.sub(y, 1)))
	box = []f32.concat(box, newObject(triTL, i32.sub(x, 1), i32.add(y, 1)))
	box = []f32.concat(box, newObject(triBR, i32.add(x, 1), i32.sub(y, 1)))
	box = []f32.concat(box, newObject(triTR, i32.add(x, 1), i32.add(y, 1)))
}

func newChar (x i32, y i32) (char []f32) {
	char := newObject(triTR, i32.sub(x, 1), i32.add(y, 1))
	char = []f32.concat(char, newObject(triTL, i32.add(x, 1), i32.add(y, 1)))
	char = []f32.concat(char, newObject(square, x, y))
	char = []f32.concat(char, newObject(square, i32.sub(x, 1), y))
	char = []f32.concat(char, newObject(square, i32.add(x, 1), y))
	char = []f32.concat(char, newObject(square, x, i32.sub(y, 1)))
}

// func newBullet (x i32, y i32) (bullet []f32) {
// 	bullet := newObject(testing, x, y)
// }

func drawVaos (vaos []i32) () {
	vaosLen := []i32.len(vaos)
	for c := 0; i32.lt(c, vaosLen); c = i32.add(c, 1) {
		draw([]i32.read(vaos, c))
	}
}

func main () () {
	initGlfw("window")

	//f32.print([]f32.read([]f32{1.0, 2.0, 3.3}, 3))

	program := initOpenGL()

	stop := not(glfw.ShouldClose("window"))

	xBox := i32.rand(0, columns)
	yBox := i32.rand(0, rows)

	xChar := i32.rand(0, columns)
	yChar := i32.rand(0, rows)

	lenTesting := []f32.len(testing)

	for stop {
		gl.Clear(i32.bitor(gl.COLOR_BUFFER_BIT, gl.DEPTH_BUFFER_BIT))
		gl.UseProgram(program)

		//draw(makeVao(newObject2(testing, 3, 6)), 9)

		//draw(makeVao(newObject2(square, 6, 3)), 18)

		///////draw(makeVao(testing), []f32.len(testing))
		draw(makeVao(newObject2(testing, xBox, yBox)), lenTesting)
		draw(makeVao(newObject2(testing, xChar, yChar)), lenTesting)
		
		// box := newBox(xBox, yBox)
		// char1 := newChar(xChar, yChar)
		// // char2 := newChar(10, y)
		// all := []f32.concat(box, char1)
		// //all := []f32.concat(all, testing)
		// //all := []f32.concat(all, char2)

		// lenAll := []f32.len(all)
		
		// draw(makeVao(all), lenAll)
		xBox = i32.mod(i32.add(xBox, i32.rand(-1, 2)), columns)
		yBox = i32.mod(i32.add(yBox, i32.rand(-1, 2)), rows)

		xChar = i32.mod(i32.add(xChar, i32.rand(-1, 2)), columns)
		yChar = i32.mod(i32.add(yChar, i32.rand(-1, 2)), rows)

		// // i32.print(xBox)
		// // i32.print(yBox)

		// //sleep(500)

		glfw.PollEvents()
		glfw.SwapBuffers("window")
		
		stop = not(glfw.ShouldClose("window"))
	}
}
