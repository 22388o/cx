package main

func realFn (n f64) (out f64) {
	out = f64.add(f64.mul(n, n), n)
}

func simFn (n f64) (out f64) {}

func main () (out f64) {
	numPoints := 21
	inps := []f64.make(numPoints)
	outs := []f64.make(numPoints)
	
	for c := 0; i32.lt(c, numPoints); c = i32.add(c, 1) {
		inps = []f64.write(inps, c, f64.sub(i32.f64(c), i32.f64(10)))
	}

	for c := 0; i32.lt(c, numPoints); c = i32.add(c, 1) {
		outs = []f64.write(outs, c, realFn([]f64.read(inps, c)))
	}
	
	evolve("simFn", "f64.add|f64.mul|f64.sub", inps, outs, 5, 100, f32.f64(0.1))

	str.print("Testing evolved solution")
	for c := 0; i32.lt(c, []f64.len(inps)); c = i32.add(c, 1) {
		f64.print(simFn([]f64.read(inps, c)))
	}
}
