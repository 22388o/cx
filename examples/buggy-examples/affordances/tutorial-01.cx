package main
import "aff"

// func caller (caller Caller) (res bool) {
// 	caller.Name
// }

// func testing () {
// 	rules := ->{
// 		caller(caller)
// 	}
// }


func predicate (num i32) (res bool) {
	if num > 1 {
		res = true
	} else {
		res = false
	}

}

// func inter () {
// }

func main () {
	bar1 := 10.3
	
  	foo1 := 1
  	foo2 := 2
  	foo3 := 3

	target := ->{
		pkg(main)
		fn(main)
		expr(message) // we could write expr(34) or whatever number
		inp(0)
	}

  	filters := ->{
		filter(predicate)
		filter(predicate)
		disj(filter(pred1),
			filter(pred2))
  	}

	affs := aff.query(filters)
	
	aff.print(target)
	aff.print(filters)
	aff.print(affs)

	aff.on(affs, target)
	aff.of(affs, target)

	aff.inform(affs, 0, target)
	aff.request(affs, 0, target)

message:
	i32.print(0)
}
